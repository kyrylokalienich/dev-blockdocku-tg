{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/ui/HourlyChallangeItem.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/layer/OutputLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/ads/richads/Richads.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AuthController_1","AdsGram_1","Monetag_1","Onclicka_1","Richads_1","AdsManager","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial_Timeout","showRewarded_Interstitial","requiresPreload","richads","onclicka","adsGram","inApp_providers","preloadInApp_Interstitial_Timeout","showInApp_Interstitial","AdsManager_1","MonetagController","Instance","Onclicka","Richads","res","warn","error_1","showAd_Rewarded_Intestitial","_i","length","provider","tryShowAdFromProvider","patchAd","showAd_InApp_Intestitial","call","error_2","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","apiClient","getTime","getUser","getChannelMembership","TelegramWebApp","getTelegramUser","id","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","getLastHourLeader","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","lastHourLeader","nextMonday","serverTimestamp","serverTimeOffsetMiliseconds","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","getServerTimestampNow","generateGameToken","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","btnOutput","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","onOutputClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","LEADERBOARD","OUTPUT","HistoryItem","label_score","HistoryLayer","HISTORY","HourlyChallangeItem","label_time","setTestData","setFromCache","fetchFromServer","update","nextHour","getNextHourDate","getRemainingTimeToHourSeconds","setMinutes","setHours","getHours","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","setDesignResolution","responsive","view","setResizeCallback","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","timeResponce","serverDate","localDate","timeDiffMiliseconds","getServerTimeNow","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","main_bottom_tab_5","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","reward_each_hour","reward_each_hour_challange","reward_each_hour_challange_top","reward_each_hour_challange_points","tasks_done","tasks_streak","games_weekly_challange_title","games_weekly_challange_text","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_guidebook","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","output_main_title","output_out_title","output_main_btn","output_main_label_1","out_bullet_1","out_bullet_2","out_bullet_3","output_out_label_1","output_out_label_2","output_out_btn","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","preloadRewarded_Interstitial","show_8867073","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","preloadInApp_Interstitial","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","OutputLayer","btn_next","btn_out","btn_close_out","panel_main","panel_out","edit_box","EditBox","onCloseOutClick","onNextClick","onOutClick","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnGuidebookRules","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","onGuidebookClick","SETTING","openLinkPrivacy","openLinkPartnership","openLinkGuidebook","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","TelegramAdsController","triggerNativeNotification","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","HourlyChallangeItem_1","TasksLayer","info_popup","week_tasks_bar","week_tasks_bar_base","week_tasks_bar_streak","week_tasks_bar_fill","week_tasks_bar_amount","week_tasks_bar_streak_amount","info_popup_tasks_fill","info_popup_tasks_amount","info_popup_streak","info_popup_streak_amount","info_popup_timeLeft","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","openInfoPopupClick","closeInfoPopupClick","setWeeklyAmount","setStreakAmount","completed_tasks","weekly_streak","setDailyTasks","days","fetchHourlyChallange","hourly_challenge_item","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto","LashHourLeaderDto","GetServerTimeDto","ServerTimestampDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           //debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial_Timeout(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetServerTimeDto, GetUserAuthDto, GetUserDailyTasksDto, LashHourLeaderDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //time\r\n    public async getTime(): Promise<GetServerTimeDto> {\r\n        return this.apiClient.get(\"time\");\r\n    }\r\n\r\n    //user\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //tasks - hour leader\r\n    public async getLastHourLeader(): Promise<LashHourLeaderDto> {\r\n        return this.apiClient.get(\"games/leader/last-hour\");\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn?.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn?.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { LashHourLeaderDto, UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    lastHourLeader : LashHourLeaderDto = null\r\n    nextMonday: Date = null\r\n\r\n    serverTimestamp: number = null;\r\n    serverTimeOffsetMiliseconds: number = 0;\r\n\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    OUTPUT = 'OutputLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, getServerTimestampNow, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = getServerTimestampNow();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = getServerTimestampNow();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","import { getRemainingTimeToDateSeconds, getRemainingTimeToHourSeconds } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { LashHourLeaderDto } from \"../dtos/user.dto\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HourlyChallangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_time: cc.Label | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    setTestData(){\r\n        this.reward = \"COIN\";\r\n        this.amount = 50;\r\n        this.label_name.string = \"@null\";\r\n        this.label_score.string = \"0\";\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    setFromCache(){\r\n        if(DataManager.instance.lastHourLeader){\r\n            this.set(DataManager.instance.lastHourLeader);\r\n        }\r\n        else{\r\n            this.setTestData();\r\n        }\r\n    }\r\n\r\n    fetchFromServer(){\r\n        this.setFromCache();\r\n\r\n        UserController.Instance?.getLastHourLeader().then((response) => {\r\n            DataManager.instance.lastHourLeader = response;\r\n            this.set(response);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    set(dto: LashHourLeaderDto){\r\n        const name = (dto.username && dto.username != \"\" && dto.username != null) ? `@${dto.username}` : `${dto.first_name}`;\r\n\r\n        this.reward = \"COIN\";\r\n        this.amount = 50;\r\n        this.label_name.string = name;\r\n        this.label_score.string = `${dto.points}`;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        const nextHour = this.getNextHourDate();\r\n        this.label_time.string = getRemainingTimeToHourSeconds(nextHour);\r\n    }\r\n\r\n\r\n    getNextHourDate(): Date {\r\n        const now = new Date();\r\n        now.setMinutes(0, 0, 0); // Reset minutes, seconds, milliseconds\r\n        now.setHours(now.getHours() + 1); // Move to next hour\r\n        return now;\r\n    }\r\n    \r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { getServerTimeNow, setDesignResolution } from './Utils';\r\nimport { AdsManager } from './ads/AdsManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n\r\n            //time \r\n\r\n            const timeResponce = await UserController.Instance.getTime();\r\n            console.log(\"time success\", timeResponce.data.timestamp);\r\n\r\n            const serverDate = new Date(timeResponce.data.timestamp); \r\n            const localDate = new Date();\r\n            const timeDiffMiliseconds = serverDate.getTime() - localDate.getTime(); // різниця в мілісекундах\r\n\r\n            console.log(\"timeDiffMiliseconds\", timeDiffMiliseconds, getServerTimeNow());\r\n\r\n            DataManager.instance.serverTimestamp = timeResponce.data.timestamp; \r\n            DataManager.instance.serverTimeOffsetMiliseconds = timeDiffMiliseconds;\r\n\r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n       this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n    \r\n    info: cc.Node = null\r\n    \r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n    \r\n    // general\r\n    \r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n    \r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n    \r\n    // main\r\n    \r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n    \r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"main_bottom_tab_5\": { \r\n        \"en\": \"Output\",\r\n        \"ua\": \"Вивід\",\r\n        \"de\": \"Ausgabe\",\r\n        \"es\": \"Retiro\",\r\n        \"ru\": \"Вывод\",\r\n        \"cs\": \"Výběr\",\r\n        \"sk\": \"Výber\",\r\n        \"pl\": \"Wypłata\"\r\n    },\r\n    \r\n    // settings\r\n    \r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n    \r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n    \r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n    \r\n    // settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n    \r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n    \r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n    \r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n    \r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n    \r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n    \r\n    // leaderboard\r\n    \r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n    \r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n    \r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n    \r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"reward_each_hour\": {\r\n        \"en\": \"Reward each hour\",\r\n        \"ua\": \"Приз щогодини\",\r\n        \"de\": \"Belohnung pro Stunde\",\r\n        \"es\": \"Recompensa por hora\",\r\n        \"ru\": \"Награда каждый час\",\r\n        \"cs\": \"Odměna každou hodinu\",\r\n        \"sk\": \"Odmena každú hodinu\",\r\n        \"pl\": \"Nagroda co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange\": {\r\n        \"en\": \"Hourly Challenge\",\r\n        \"ua\": \"Годинний челендж\",\r\n        \"de\": \"Stündliche Herausforderung\",\r\n        \"es\": \"Desafío por hora\",\r\n        \"ru\": \"Ежечасный челлендж\",\r\n        \"cs\": \"Hodinová výzva\",\r\n        \"sk\": \"Hodinová výzva\",\r\n        \"pl\": \"Wyzwanie co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_top\": {\r\n        \"en\": \"Top Player:\",\r\n        \"ua\": \"Топ гравець:\",\r\n        \"de\": \"Top-Spieler:\",\r\n        \"es\": \"Jugador top:\",\r\n        \"ru\": \"Топ игрок:\",\r\n        \"cs\": \"Top hráč:\",\r\n        \"sk\": \"Top hráč:\",\r\n        \"pl\": \"Top gracz:\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_points\": {\r\n        \"en\": \"Points:\",\r\n        \"ua\": \"Очки:\",\r\n        \"de\": \"Punkte:\",\r\n        \"es\": \"Puntos:\",\r\n        \"ru\": \"Очки:\",\r\n        \"cs\": \"Body:\",\r\n        \"sk\": \"Body:\",\r\n        \"pl\": \"Punkty:\"\r\n    },\r\n\r\n    \"tasks_done\": {\r\n        \"en\": \"Tasks Done\",\r\n        \"ua\": \"Завершено завданнь\",\r\n        \"de\": \"Aufgaben erledigt\",\r\n        \"es\": \"Tareas completadas\",\r\n        \"ru\": \"Выполнено заданий\",\r\n        \"cs\": \"Splněné úkoly\",\r\n        \"sk\": \"Splnené úlohy\",\r\n        \"pl\": \"Wykonane zadania\"\r\n    },\r\n\r\n    \"tasks_streak\" : {\r\n        \"en\": \"Your streak:\",\r\n        \"ua\": \"Твоя безперервна серія:\",\r\n        \"de\": \"Deine Serie:\",\r\n        \"es\": \"Tu racha:\",\r\n        \"ru\": \"Твоя серия:\",\r\n        \"cs\": \"Tvoje série:\",\r\n        \"sk\": \"Tvoja séria:\",\r\n        \"pl\": \"Twoja passa:\"\r\n    },\r\n\r\n    \"games_weekly_challange_title\" : { \r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Date prisa!\",\r\n        \"ru\": \"Поспеши!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_challange_text\" : {\r\n        \"en\": \"The more tasks you complete during the week, the higher your chance to win!\",\r\n        \"ua\": \"Чим більше завдань ви виконаєте за тиждень, тим вищий ваш шанс виграти!\",\r\n        \"de\": \"Je mehr Aufgaben du in der Woche erledigst, desto höher ist deine Gewinnchance!\",\r\n        \"es\": \"¡Cuantas más tareas completes durante la semana, mayor será tu oportunidad de ganar!\",\r\n        \"ru\": \"Чем больше заданий ты выполнишь за неделю, тем выше твой шанс на победу!\",\r\n        \"cs\": \"Čím více úkolů během týdne splníš, tím větší máš šanci na výhru!\",\r\n        \"sk\": \"Čím viac úloh za týždeň splníš, tým vyššia je tvoja šanca na výhru!\",\r\n        \"pl\": \"Im więcej zadań wykonasz w tygodniu, tym większa szansa na wygraną!\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"profile_guidebook\": {\r\n        \"en\": \"Guidebook & rules\",\r\n        \"ua\": \"Посібник та правила\",\r\n        \"de\": \"Leitfaden & Regeln\",\r\n        \"es\": \"Guía y reglas\",\r\n        \"ru\": \"Руководство и правила\",\r\n        \"cs\": \"Příručka a pravidla\",\r\n        \"sk\": \"Príručka a pravidlá\",\r\n        \"pl\": \"Poradnik i zasady\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n    \r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n    \r\n    //output\r\n\r\n    \"output_main_title\" :{\r\n        \"en\": \"Block Stars Withdrawal\",\r\n        \"ua\": \"Виведення Block Stars\",\r\n        \"de\": \"Block Stars Auszahlung\",\r\n        \"es\": \"Retiro de Block Stars\",\r\n        \"ru\": \"Вывод Block Stars\",\r\n        \"cs\": \"Výběr Block Stars\",\r\n        \"sk\": \"Výber Block Stars\",\r\n        \"pl\": \"Wypłata Block Stars\"\r\n    },\r\n\r\n    \"output_out_title\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_btn\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_label_1\": {\r\n        \"en\": \"Withdraw in-game coins from Block Stars to your Stars Bank account and use them.\",\r\n        \"ua\": \"Виводьте ігрові монети із Block Stars на акаунт Stars Bank та використовуйте їх. \",\r\n        \"de\": \"Ziehe Spielmünzen von Block Stars auf dein Stars Bank-Konto ab und verwende sie.\",\r\n        \"es\": \"Retira monedas del juego de Block Stars a tu cuenta de Stars Bank y úsalas.\",\r\n        \"ru\": \"Выводите игровые монеты из Block Stars на аккаунт Stars Bank и используйте их.\",\r\n        \"cs\": \"Vyber herní mince z Block Stars na účet Stars Bank a používej je.\",\r\n        \"sk\": \"Vyber herné mince z Block Stars na účet Stars Bank a použi ich.\",\r\n        \"pl\": \"Wypłać monety z gry Block Stars na konto Stars Bank i używaj ich.\"\r\n    },\r\n\r\n    \"out_bullet_1\" : {\r\n        \"en\": \"Withdraw available from 300 coins\",\r\n        \"ua\": \"Вивід доступний від 300 монет\",\r\n        \"de\": \"Výběr dostupný od 300 mincí\",\r\n        \"es\": \"Retiro disponible a partir de 300 monedas\",\r\n        \"ru\": \"Вывод доступен от 300 монет\",\r\n        \"cs\": \"Výběr dostupný od 300 mincí\",\r\n        \"sk\": \"Výber dostupný od 300 mincí\",\r\n        \"pl\": \"Wypłata dostępna od 300 monet\"\r\n    },\r\n\r\n    \"out_bullet_2\" : {\r\n        \"en\": \"Exchange rate: 1 Block Star = 1 Telegram Star\",\r\n        \"ua\": \"Курс обміну відбувається наступним чином: 1 Block Star = 1 Telegram Star.\",\r\n        \"de\": \"Wechselkurs: 1 Block Star = 1 Telegram Star\",\r\n        \"es\": \"Tasa de cambio: 1 Block Star = 1 Telegram Star\",\r\n        \"ru\": \"Курс обмена: 1 Block Star = 1 Telegram Star\",\r\n        \"cs\": \"Směnný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"sk\": \"Výmenný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"pl\": \"Kurs wymiany: 1 Block Star = 1 Telegram Star\"\r\n    },\r\n\r\n    \"out_bullet_3\" : {\r\n        \"en\": \"Make sure you have a Stars Bank account. If not, open Stars Bank in Telegram and start.\",\r\n        \"ua\": \"Переконайтеся, що у вас є акаунт Stars Bank. Якщо його ще немає, просто відкрийте Stars Bank у Telegram і запустіть.\",\r\n        \"de\": \"Stelle sicher, dass du ein Stars Bank-Konto hast. Wenn nicht, öffne Stars Bank in Telegram und starte.\",\r\n        \"es\": \"Asegúrate de tener una cuenta en Stars Bank. Si no la tienes, abre Stars Bank en Telegram y empieza.\",\r\n        \"ru\": \"Убедитесь, что у вас есть аккаунт Stars Bank. Если нет — откройте Stars Bank в Telegram и запустите.\",\r\n        \"cs\": \"Ujisti se, že máš účet ve Stars Bank. Pokud ho nemáš, otevři Stars Bank v Telegramu a spusť.\",\r\n        \"sk\": \"Uisti sa, že máš účet v Stars Bank. Ak nie, otvor Stars Bank v Telegrame a spusti.\",\r\n        \"pl\": \"Upewnij się, że masz konto w Stars Bank. Jeśli nie, otwórz Stars Bank w Telegramie i rozpocznij.\"\r\n    },\r\n\r\n    \"output_out_label_1\" :{\r\n        \"en\": \"Enter the amount you want to withdraw to your Stars Bank account.\",\r\n        \"ua\": \"Введіть бажану суму для виведення на акаунт Stars Bank.\",\r\n        \"de\": \"Gib den gewünschten Betrag ein, den du auf dein Stars Bank-Konto abheben möchtest.\",\r\n        \"es\": \"Introduce la cantidad que deseas retirar a tu cuenta de Stars Bank.\",\r\n        \"ru\": \"Введите желаемую сумму для вывода на аккаунт Stars Bank.\",\r\n        \"cs\": \"Zadej částku, kterou chceš vybrat na účet Stars Bank.\",\r\n        \"sk\": \"Zadaj sumu, ktorú chceš vybrať na účet Stars Bank.\",\r\n        \"pl\": \"Wpisz kwotę, którą chcesz wypłacić na konto Stars Bank.\"\r\n    },\r\n\r\n    \"output_out_label_2\" :{\r\n        \"en\": \"Minimum withdrawal amount is 500 coins\",\r\n        \"ua\": \"мінімальна сума виводу 500 монет\",\r\n        \"de\": \"Mindestbetrag für Auszahlung: 500 Münzen\",\r\n        \"es\": \"Cantidad mínima para retirar: 500 monedas\",\r\n        \"ru\": \"Минимальная сумма вывода: 500 монет\",\r\n        \"cs\": \"Minimální částka pro výběr: 500 mincí\",\r\n        \"sk\": \"Minimálna suma na výber: 500 mincí\",\r\n        \"pl\": \"Minimalna kwota wypłaty: 500 monet\"\r\n    },\r\n\r\n    \"output_out_btn\" :{\r\n        \"en\": \"Withdraw\",\r\n        \"ua\": \"Вивести\",\r\n        \"de\": \"Auszahlen\",\r\n        \"es\": \"Retirar\",\r\n        \"ru\": \"Вывести\",\r\n        \"cs\": \"Vybrat\",\r\n        \"sk\": \"Vybrať\",\r\n        \"pl\": \"Wypłać\"\r\n    },\r\n\r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, getServerTimeNow, setDesignResolution, starsToDollars} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = getServerTimeNow(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public preloadInApp_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867075({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OutputLayer extends BaseLayer {\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    labelCoinsAmount: cc.Label = null;\r\n    \r\n    btn_next: cc.Node = null\r\n    btn_out: cc.Node = null\r\n    btn_close_out: cc.Node = null\r\n    \r\n    panel_main: cc.Node = null\r\n    panel_out: cc.Node = null\r\n\r\n    edit_box: cc.EditBox = null;\r\n   \r\n\r\n    onLoad() {\r\n        console.log('onLoad')\r\n\r\n        this.panel_main = cc.find('main', this.node)\r\n        this.panel_out = cc.find('out', this.node)\r\n\r\n        console.log('onLoad1')\r\n\r\n        this.labelCoinsAmount = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        console.log('onLoad2')\r\n\r\n\r\n        this.edit_box = cc.find('edit_box', this.panel_out).getComponent(cc.EditBox)\r\n\r\n        console.log('onLoad3')\r\n\r\n\r\n        this.btn_close_out = cc.find('btn_close', this.node)\r\n        this.btn_next = cc.find('btn_start', this.panel_main)\r\n        this.btn_out = cc.find('btn_start', this.panel_out)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        console.log('onLoad4')\r\n\r\n\r\n        this.btn_close_out.on('click', this.onCloseOutClick, this)\r\n        this.btn_next.on('click', this.onNextClick, this)\r\n        this.panel_out.on('click', this.onOutClick, this)\r\n\r\n        console.log('onLoad5')\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        console.log('onLoad6')\r\n\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n\r\n        if(DataManager.instance.userData){\r\n            this.edit_box.string = this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        if(this.panel_main){\r\n            this.panel_main.active = true;\r\n        }\r\n\r\n        if(this.panel_out){\r\n            this.panel_out.active = false;\r\n            this.btn_close_out.active = false;\r\n        }\r\n        \r\n    }\r\n\r\n    onDisable() { }\r\n\r\n   \r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onCloseOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n        this.btn_close_out.active = false;\r\n    }\r\n\r\n    onNextClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = false;\r\n        this.panel_out.active = true;\r\n        this.btn_close_out.active = true;\r\n\r\n    }\r\n\r\n    onOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo\r\n        //backend request\r\n        //open wallet app\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n    btnGuidebookRules: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnGuidebookRules = cc.find('main/btns_group_2/btn_guidebook', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.on('click', this.onGuidebookClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.off('click', this.onGuidebookClick, this)\r\n\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onGuidebookClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkGuidebook();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Richads')\r\nexport class Richads {\r\n    private static _instance: Richads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Richads {\r\n        if (!Richads._instance) {\r\n            Richads._instance = new Richads();\r\n        }\r\n        return Richads._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).TelegramAdsController.triggerNativeNotification(true);  \r\n    }\r\n}","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n        \r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HourlyChallangeItem from \"../ui/HourlyChallangeItem\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    \r\n    info_popup: cc.Node = null\r\n\r\n    week_tasks_bar: cc.Node = null\r\n    week_tasks_bar_base: cc.Node = null\r\n    week_tasks_bar_streak: cc.Node = null\r\n\r\n    week_tasks_bar_fill: cc.Sprite = null;\r\n    week_tasks_bar_amount: cc.Label = null;\r\n    week_tasks_bar_streak_amount: cc.Label = null;\r\n    \r\n    info_popup_tasks_fill: cc.Sprite = null;\r\n    info_popup_tasks_amount: cc.Label = null;\r\n    info_popup_streak: cc.Node = null;\r\n    info_popup_streak_amount: cc.Label = null;\r\n    info_popup_timeLeft: cc.Label = null;\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        //bottom\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //screens\r\n        this.info_popup = cc.find('info_popup', this.node)\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        //content -- tasks\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        //week task bar\r\n        this.week_tasks_bar = cc.find('main/tasks_weekly', this.dailyPanel)\r\n        this.week_tasks_bar_base = cc.find('base', this.week_tasks_bar)\r\n        this.week_tasks_bar_streak = cc.find('streak', this.week_tasks_bar)\r\n\r\n        this.week_tasks_bar_fill = cc.find('fill_bar/fill', this.week_tasks_bar_base).getComponent(cc.Sprite)\r\n        this.week_tasks_bar_amount = cc.find('amount', this.week_tasks_bar_base).getComponent(cc.Label)\r\n        this.week_tasks_bar_streak_amount = cc.find('layout/label', this.week_tasks_bar_streak).getComponent(cc.Label)\r\n\r\n        //info popup\r\n        this.info_popup_tasks_fill = cc.find('panel/games_weekly/fill_bar/fill', this.info_popup).getComponent(cc.Sprite)\r\n        this.info_popup_tasks_amount = cc.find('panel/games_weekly/amount', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_streak = cc.find('panel/streak', this.info_popup)\r\n        this.info_popup_streak_amount = cc.find('panel/streak/label', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_timeLeft = cc.find('panel/bottom/time_text', this.info_popup).getComponent(cc.Label)\r\n\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info_popup)\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.on('click', this.openInfoPopupClick, this)\r\n        this.btnCloseInfo.on('click', this.closeInfoPopupClick, this)\r\n\r\n\r\n        this.setWeeklyAmount(0,14);\r\n        this.setStreakAmount(0);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.off('click', this.openInfoPopupClick, this)\r\n\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userData){\r\n            this.setWeeklyAmount(DataManager.instance.userData.completed_tasks,14);\r\n            this.setStreakAmount(DataManager.instance.userData.weekly_streak);\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks, false);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n\r\n       \r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            //this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.info_popup_timeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.week_tasks_bar_amount.string = this.info_popup_tasks_amount.string = `${played}/${target}`\r\n        this.week_tasks_bar_fill.fillRange = this.info_popup_tasks_fill.fillRange = fillRange;\r\n    }\r\n\r\n    setStreakAmount( days : number){\r\n        this.week_tasks_bar_streak_amount.string = `x${days}`;\r\n        this.info_popup_streak_amount.string = `streak x${days}`;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto, fetchHourlyChallange: boolean = true){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n\r\n        const hourly_challenge_item = PoolManager.instance.getNode(`task_item_hourly_challenge`, this.dailyPanelContent).getComponent(HourlyChallangeItem);\r\n        if(fetchHourlyChallange){\r\n            hourly_challenge_item.fetchFromServer();\r\n        }\r\n        else{\r\n            hourly_challenge_item.setFromCache();\r\n        }\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    openInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = true;\r\n    }\r\n\r\n    closeInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = false;\r\n    }\r\n\r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLinkGuidebook(){\r\n        this.openLink(\"https://telegram.org\")\r\n    }\r\n\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function getServerTimeNow() : Date{\r\n    return new Date(Date.now() + DataManager.instance.serverTimeOffsetMiliseconds);\r\n}\r\n\r\nexport function getServerTimestampNow() : number{\r\n    return getServerTimeNow().getTime();\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = getServerTimeNow();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToHourSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = getServerTimestampNow();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://bc2b-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n  completed_tasks: number;\r\n  weekly_streak: number;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}\r\n\r\nexport class LashHourLeaderDto{\r\n  public position: number;\r\n  public user_id: string;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public photo_url?: string;\r\n  public points: number;\r\n  public game_duration: number;\r\n}\r\n\r\nexport class GetServerTimeDto{\r\n  public data: ServerTimestampDto;\r\n  public message: string;\r\n}\r\n\r\nexport class ServerTimestampDto{\r\n  public timestamp: number;\r\n}"],"file":"index.js"}