{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debug","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AuthController_1","AdsGram_1","Monetag_1","Onclicka_1","AdsManager","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial","showRewarded_Interstitial","requiresPreload","adsGram","onclicka","inApp_providers","preloadInApp_Interstitial","showInApp_Interstitial","AdsManager_1","MonetagController","Instance","Onclicka","res","warn","error_1","showAd_Rewarded_Intestitial","_i","length","provider","tryShowAdFromProvider","patchAd","showAd_InApp_Intestitial","call","error_2","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","apiClient","getUser","getChannelMembership","TelegramWebApp","getTelegramUser","id","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","HistoryItem","label_score","HistoryLayer","HISTORY","LEADERBOARD","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","setDesignResolution","responsive","view","setResizeCallback","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","update","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867073","preloadRewarded_Interstitial_Timeout","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { setDesignResolution } from './Utils';\r\nimport { AdsGramController } from './ads/ads-gram/AdsGram';\r\nimport { AdsManager } from './ads/AdsManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n\r\n        // AdsGramController.Instance.init().then(res =>{\r\n        //     console.log(\"adsgram init succes: \", res.success);\r\n        //     AdsGramController.Instance.initAdsContorllers();\r\n        //     AdsGramController.Instance.showFullscreenAd();\r\n        // })\r\n\r\n        // MonetagController.Instance.init().then(res =>{\r\n        //     console.log(\"MonetagController init succes: \", res.success);\r\n        // })\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n       this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n    \r\n    // general\r\n    \r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n    \r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n    \r\n    // main\r\n    \r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n    \r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n    \r\n    // settings\r\n    \r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n    \r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n    \r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n    \r\n    // settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n    \r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n    \r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n    \r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n    \r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n    \r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n    \r\n    // leaderboard\r\n    \r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n    \r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n    \r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n    \r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n    \r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n    \r\n\r\n    \r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, setDesignResolution, starsToDollars} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 10) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://ee65-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}