{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","call","name","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","length","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","Monetag_1","AuthController_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","MonetagController","showFullscreenAdRewarded","adWathcedSuccesfully","showOncklicka_Rewarded_1","showRewardedAd_2","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","res","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","HistoryItem","label_score","HistoryLayer","HISTORY","LEADERBOARD","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","view","setResizeCallback","responsive","requestFullscreen","enableClosingConfirmation","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","update","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","getTelegramWebApp","onEvent","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867073","showFullscreenAd_2","show_8867075","showFullscreenAdRewarded_2","show_6065984","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkColor","lightColor","darkBlueText","darkGrayText","grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();\r\n                // if(this.done_amount % 2 == 0){\r\n                //     //show rewarded ad and update\r\n                //     this.showRewardedAd();\r\n                // }\r\n                // else{\r\n                //     this.showRewardedAd_2();\r\n                // }             \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showRewardedAd(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showOncklicka_Rewarded_1()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    showRewardedAd_2(){\r\n        MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n\r\n            //TelegramWebApp.Instance.getTelegramWebApp().onEvent()\r\n\t\t});\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n\r\n        this.responsive();\r\n\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n        \r\n        this.responsive();\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        console.log(`RESPONSIVE`);\r\n\r\n        // let container = document.getElementById('Cocos2dGameContainer');\r\n        // container.style.width = window.innerWidth + 'px';\r\n        // container.style.height = window.innerHeight + 'px';\r\n        // container.style.margin = '0px';\r\n        // container.style.padding = '0px';\r\n\r\n        // let canvas = document.getElementById('GameCanvas');\r\n        // canvas.style.width = window.innerWidth + 'px';\r\n        // canvas.style.height = window.innerHeight + 'px';\r\n\r\n\r\n        //cc.view.adjustViewportMeta(true);\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        //cc.view.setDesignResolutionSize(designSize.width, designSize.height, cc.ResolutionPolicy.EXACT_FIT);\r\n        //cc.view.resizeWithBrowserSize(true);\r\n\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`viewSize = ${viewSize}`);\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showOncklicka_Rewarded_1()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.closeLoseBuyShufflePopup();\r\n                this.closeBuySkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    show_ad_rewarded_skill_2_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\"\r\n    },    \r\n\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\"\r\n    },\r\n\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\"\r\n    },\r\n    \r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\"\r\n    },\r\n    \r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\"\r\n    },\r\n    \r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\"\r\n    },\r\n    \r\n    \r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\"\r\n    },\r\n\r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\"\r\n    },\r\n\r\n    \r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkColor = cc.color(75, 92, 129);\r\n        const lightColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkColor : lightColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const darkBlueText = cc.color(34, 47, 63);\r\n        const darkGrayText = cc.color(124, 133, 135);\r\n        const grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? grayText : darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://ee65-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}