{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","call","name","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","length","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","Monetag_1","AuthController_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","MonetagController","showFullscreenAdRewarded","adWathcedSuccesfully","showFullscreenAdRewarded_2","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","res","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","RUNING","addEventListener","handleGameOffline","handleGameOnline","HistoryItem","label_score","toFixed","HistoryItem_1","HistoryLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","HISTORY","LEADERBOARD","PROFILE","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","view","setResizeCallback","responsive","requestFullscreen","enableClosingConfirmation","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","apiClientAuthorized","userController","delay","ms","setTimeout","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem","label_place","place","LeaderboardItem_1","LeaderboardLayer","youItem","btnWinners","btnFindMe","winners","winnersPanel","winnersContent","btnCloseWinners","onFindMeClick","onWinnersClick","onCloseWinnersClick","user_position","you","position","leaderboard","user_id","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","setHistoryData","isOnline","tryShowAdGameEnd","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","update","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_title","games_weekly_played","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","setGamesWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","played","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","count","getRemainingTimeToDateMinutes","getRemainingTimeToDateSeconds","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867075","showFullscreenAd_2","show_8867073","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","info","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","getTelegramInitData","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkColor","lightColor","darkBlueText","darkGrayText","grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"4yCAAA,IAAAA,EAAAC,EAAA,kCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNC,EAAA,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGIF,EAAAI,MAAA,KAGAJ,EAAAK,sBAAA,YA6BJ,OAnC0CC,EAAAR,EAAAC,GAQtCD,EAAAS,UAAAC,OAAA,WACIN,KAAAO,eAGJX,EAAAS,UAAAG,SAAA,WACIR,KAAAO,eAGJX,EAAAS,UAAAE,YAAA,WACI,IAAAL,EAAAF,KAAAS,aAAAjB,GAAAkB,OACA,GAAAR,EAGI,OAFAF,KAAAE,MAAAA,OACAF,KAAAW,eAKRf,EAAAS,UAAAM,YAAA,WACI,GAAAX,KAAAE,MAAA,CAIA,IAAAU,EAAAvB,EAAAwB,QAAAC,SAAAC,mBAAAf,KAAAG,uBACAS,IACIZ,KAAAE,MAAAc,OAAAJ,QALApB,GAAAyB,MAAA,kEAxBRC,EAAA,CADCvB,EAAAH,GAAAkB,QACsBd,EAAAS,UAAA,aAAA,GAGvBa,EAAA,CADCvB,GACyCC,EAAAS,UAAA,6BAAA,GANzBa,EAAA,CADpBxB,GACoBE,GAArB,CAAAJ,GAAA2B,WAAqBC,EAAAP,QAAAjB,08DCLf,IAAAL,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAEN2B,GAFM9B,EAAAI,SAEN,IAAA2B,QAAA,SAAAC,EAAAC,GACI,GAAAhC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAE,gBAAAnC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAG,gBAAA,CACI,IAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAG,IAAA,uCACAH,EAAAI,OAAA,EACAJ,EAAAK,OAAA,WACI,IAAAC,EAAAC,YAAA,WACIC,OAAAC,UACIf,EAAAc,OAAAC,SACAC,cAAAJ,KAER,MAEJN,EAAAW,QAAA,WAAA,OAAAhB,EAAA,IAAAiB,MAAA,oDACAX,SAAAY,KAAAC,YAAAd,OAMRe,EAAA,WAEI,SAAAA,IAUQ5C,KAAA6C,WAAA,KACA7C,KAAA8C,aAAA,WA0CZ,OAvDaC,EAAAH,EAKTI,OAAAC,eAAAL,EAAA,WAAA,CAAAM,IAAA,WAII,OAHAH,EAAAI,YACIJ,EAAAI,UAAA,IAAAJ,GAEJA,EAAAI,2CAMSP,EAAAvC,UAAA+C,KAAA,WAAQ,OAAAC,EAAArD,UAAA,EAAAsB,QAAA,kEACC,OAAlB/B,EAAAS,KAAkB,CAAA,EAAAqB,UAElB,OAFA9B,EAAAsD,WAAAS,EAAAC,OAEAvD,KAAA6C,WACI,CAAA,EAAAvB,QAAAC,QAAA,CAAAiC,SAAA,KAEA,CAAA,EAAAlC,QAAAC,QAAA,CAAAiC,SAAA,WAKDZ,EAAAvC,UAAAoD,WAAA,WACH,OAAAzD,KAAA6C,YAGGD,EAAAvC,UAAAqD,kBAAA,WAIH,IACAZ,EADA9C,KAAAyD,aACAL,KAAA,CACIO,QAAA,WAEAC,gBAAA,oBAEJ5D,KAAA8C,aAAAA,GAGGF,EAAAvC,UAAAwD,iBAAA,WAIH7D,KAAA8C,aAAAgB,OAAAC,KAAA,cAGAC,MAAA,eAlDKjB,EAAA7B,EAAA,CADZxB,EAAA,sBACYkD,GAAb,GAAaxB,EAAAwB,kBAAAA,0MCtBb,IAAAqB,EAAA3E,EAAA,eAGA4E,EAAA,WACI,SAAAA,EAAAC,EAAAC,QAEqB,IAAAA,IAAAA,EAAA,IADApE,KAAAmE,QAAAA,EACAnE,KAAAoE,QAAAA,EAUzB,OAPWF,EAAA7D,UAAAgE,aAAA,WACH,OAAA,IAAAJ,EAAAK,UAAAtE,KAAAmE,QAAAnE,KAAAoE,UAGGF,EAAA7D,UAAAkE,uBAAA,SAAAC,GACH,OAAA,IAAAP,EAAAK,UAAAtE,KAAAmE,QAAAnE,KAAAoE,QAAAI,IAERN,EAbA,GAAa9C,EAAA8C,iBAAAA,4kDCFb,IAAAO,EAAAnF,EAAA,oBASAgF,EAAA,WACI,SAAAA,EAAAH,EAAAC,EAAAI,QAGqB,IAAAA,IAAAA,EAAA,IAFAxE,KAAAmE,QAAAA,EACAnE,KAAAoE,QAAAA,EACApE,KAAAwE,UAAAA,EAwFzB,OArFiBF,EAAAjE,UAAA6C,IAAA,SAAAwB,EAAAC,GAA0C,YAAtC,IAAAD,IAAAA,EAAA,IAAsCrB,EAAArD,UAAA,EAAAsB,QAAA,oEAG9B,6BAAA,CAAA,EADXtB,KAAAqE,aAAAM,GACWzB,IAAAwB,WAGhB,IAHKE,EAAArF,EAAAgE,QAGLsB,QAAA,KAAAD,EAAAC,OAAA,IACG,MAAA,CAAA,EAAAD,EAAAE,MAEA,MAAA,IAAArC,MAAA,+BAAAmC,EAAAC,OAAA,UAAAD,EAAAE,+BAGJ9E,KAAA+E,YAAAC,gCAIKV,EAAAjE,UAAA4E,KAAA,SAAAP,EAAAI,GAAyC,YAApC,IAAAJ,IAAAA,EAAA,IAAoCrB,EAAArD,UAAA,EAAAsB,QAAA,oEAG7B,6BAAA,CAAA,EADXtB,KAAAqE,eACWY,KAAAP,EAAAI,WAKjB,GALMF,EAAArF,EAAAgE,OAEN2B,QAAAC,IAAA,OAAAP,EAAAC,OAAAD,EAAAE,MAGAF,EAAAC,QAAA,KAAAD,EAAAC,OAAA,IACI,MAAA,CAAA,EAAAD,EAAAE,MAEA,MAAA,IAAArC,MAAA,+BAAAmC,EAAAC,OAAA,UAAAD,EAAAE,+BAGJ9E,KAAA+E,YAAAK,gCAIKd,EAAAjE,UAAAgF,MAAA,SAAAX,EAAAI,GAA0C,YAApC,IAAAJ,IAAAA,EAAA,IAAoCrB,EAAArD,UAAA,EAAAsB,QAAA,oEAI9B,6BAAA,CAAA,EADXtB,KAAAqE,eACWgB,MAAAX,EAAAI,WAKjB,GALMF,EAAArF,EAAAgE,OAEN2B,QAAAC,IAAA,QAAAP,EAAAC,OAAAD,EAAAE,MAGAF,EAAAC,QAAA,KAAAD,EAAAC,OAAA,IACI,MAAA,CAAA,EAAAD,EAAAE,MAEA,MAAA,IAAArC,MAAA,+BAAAmC,EAAAC,OAAA,UAAAD,EAAAE,+BAGJ9E,KAAA+E,YAAAO,gCAIKhB,EAAAjE,UAAAkF,WAAA,SAAAb,EAAAc,GAAuD,YAA5C,IAAAd,IAAAA,EAAA,IAA4CrB,EAAArD,UAAA,EAAAsB,QAAA,kEAG3C,6BAAA,CAAA,EADXtB,KAAAqE,eACWY,KAAAP,EAAAc,EAAA,CACbpB,QAAA,CACIqB,eAAA,iCAGR,MAAA,CAAA,EALMlG,EAAAgE,OAKNuB,+BAEA9E,KAAA+E,YAAAW,gCAIApB,EAAAjE,UAAAgE,aAAA,SAAAM,QAAa,IAAAA,IAAAA,EAAA,IACjB,IAAAgB,EAAA,CACIC,QAAA5F,KAAAmE,QACAC,QAAApE,KAAAoE,QACAO,OAAAA,GAQJ,OANA3E,KAAAwE,YACImB,EAAAvB,QAAA,CACIyB,cAAA,OAAA7F,KAAAwE,UACAsB,6BAAA,yBAGRrB,EAAA5D,QAAAkF,OAAAJ,IAGIrB,EAAAjE,UAAA0E,YAAA,SAAA9D,GACJ,MAAAA,GAERqD,EA5FA,GAAalD,EAAAkD,UAAAA,glBCTb,IAAA0B,EAAA,SAAAnG,GACI,SAAAmG,EAAAC,GAAA,IAAAnG,EAAAD,EAAAqG,KAAAlG,KAAAiG,IAAAjG,YAEIF,EAAAqG,KAAA,cAER,OAL+B/F,EAAA4F,EAAAnG,GAK/BmG,EALA,CAKAvD,OALarB,EAAA4E,UAAAA,EAQb,IAAAI,EAAA,SAAAvG,GACI,SAAAuG,EAAAH,QAAY,IAAAA,IAAAA,EAAA,gBAAZ,IAAAnG,EAAAD,EAAAqG,KAAAlG,KAAAiG,IAAAjG,YAEIF,EAAAqG,KAAA,iBAER,OALkC/F,EAAAgG,EAAAvG,GAKlCuG,EALA,CAKAJ,GALa5E,EAAAgF,aAAAA,EAQb,IAAAC,EAAA,SAAAxG,GACI,SAAAwG,EAAAJ,QAAY,IAAAA,IAAAA,EAAA,aAAZ,IAAAnG,EAAAD,EAAAqG,KAAAlG,KAAAiG,IAAAjG,YAEIF,EAAAqG,KAAA,cAER,OAL+B/F,EAAAiG,EAAAxG,GAK/BwG,EALA,CAKAL,GALa5E,EAAAiF,UAAAA,kiDCfb,IAAAC,EAAA,WAAA,SAAAA,KAsDA,OAlDWA,EAAAC,YAAA,WAMH,OALA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,KACAA,KAAAmD,UAAAC,QAGJpD,KAAAmD,WAGJH,OAAAC,eAAAqD,EAAA,WAAA,CAAApD,IAAA,WACI,OAAAlD,KAAAuG,+CAGJD,EAAAjG,UAAA+C,KAAA,aAGakD,EAAAjG,UAAAmG,QAAA,SAAAC,qGAEY,6BAAA,CAAA,EAAAC,MAAAD,WACjB,KADM7B,EAAArF,EAAAgE,QACNoD,GACI,MAAA,IAAAlE,MAAA,uBAAAmC,EAAAC,QAES,MAAA,CAAA,EAAAD,EAAAgC,sBAAP9B,EAAAvF,EAAAgE,OACN2B,QAAAC,IAAA,iBAAAL,kCAEAI,QAAAjE,MAAA,uBAAA+D,gCAIFsB,EAAAjG,UAAAwG,SAAA,SAAAJ,EAAAK,qGAEmB,6BAAA,CAAA,EAAAJ,MAAAD,EAAA,CACbM,OAAA,OACA3C,QAAA,CACIqB,eAAA,oBAEJuB,KAAAC,KAAAC,UAAAJ,aAGJ,KARMlC,EAAArF,EAAAgE,QAQNoD,GACI,MAAA,IAAAlE,MAAA,uBAAAmC,EAAAC,QAGW,MAAA,CAAA,EAAAD,EAAAgC,sBAATO,EAAA5H,EAAAgE,OACN2B,QAAAC,IAAA,4BAAAgC,kCAEAjC,QAAAjE,MAAA,sBAAAmE,gCAhDOkB,EAAAnD,UAAA,KAoDnBmD,EAtDA,GAAqBlF,EAAAP,QAAAyF,osDCArB,IAAAc,EAAA9H,EAAA,aACA+H,EAAA/H,EAAA,iBACAgI,EAAAhI,EAAA,qBAEAiI,EAAA,WAAA,SAAAA,IACYvH,KAAAwH,YAAA,KA8CZ,OA3CWD,EAAAhB,YAAA,WAMH,OALA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,KACAA,KAAAmD,UAAAC,QAGJpD,KAAAmD,WAGJH,OAAAC,eAAAsE,EAAA,WAAA,CAAArE,IAAA,WACI,OAAAlD,KAAAuG,+CAGJgB,EAAAlH,UAAA+C,KAAA,WACIpD,KAAAwH,YAAA,IAAAhI,GAAAiI,YACAzH,KAAAwH,YAAAE,MAAA,EACA1H,KAAAwH,YAAAG,OAAA,IAGEJ,EAAAlH,UAAAuH,UAAA,yGACF,OAAAP,EAAAxG,QAAAC,SAAA+G,UACA7H,KAAAwH,YAAAM,MACI9H,KAAAwH,YAAAO,OACA,CAAA,IAES,CAAA,EAAAT,EAAAzG,QAAAC,SAAAkH,QAAAZ,EAAAa,gBAAAC,MALuB,CAAA,iBAK9BJ,EAAAvI,EAAAgE,OACNvD,KAAAwH,YAAAM,KAAAA,EACA9H,KAAAwH,YAAAO,iBAGJR,EAAAlH,UAAA8H,UAAA,WACInI,KAAAwH,YAAAY,QAGEb,EAAAlH,UAAAgI,UAAA,SAAAlC,EAAAmC,eAA0C,IAAAA,IAAAA,GAAA,0FAC5C,OAAAjB,EAAAxG,QAAAC,SAAAyH,UACa,CAAA,EAAAjB,EAAAzG,QAAAC,SAAAkH,QAAA7B,IADuB,CAAA,UAEpC,OADM2B,EAAAvI,EAAAgE,OACN,CAAA,EAAA/D,GAAAgJ,YAAAC,WAAAX,EAAAQ,UAGJf,EAAAlH,UAAAqI,UAAA,SAAAC,GACInJ,GAAAgJ,YAAAI,WAAAD,IA3CWpB,EAAApE,UAAA,KA6CnBoE,EA/CA,GAAqBnG,EAAAP,QAAA0G,wpDCErB,IAAAsB,EAAAvJ,EAAA,kCAGAwJ,EAAA,WACI,SAAAA,EAAAC,GAA6B/I,KAAA+I,UAAAA,EAkIjC,OA5HiBD,EAAAzI,UAAA2I,QAAA,WAAW,OAAA3F,EAAArD,UAAA,EAAAsB,QAAA,oCACpB,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,cAKS4F,EAAAzI,UAAA4I,qBAAA,WAAwB,OAAA5F,EAAArD,UAAA,EAAAsB,QAAA,oCACjC,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,wBAAA2F,EAAAK,eAAAC,SAAAC,kBAAAC,UAISP,EAAAzI,UAAAiJ,QAAA,WAAW,OAAAjG,EAAArD,UAAA,EAAAsB,QAAA,0CAIpB,OAHMwD,EAAA,CACFyE,cAAA,GAEJ,CAAA,EAAAvJ,KAAA+I,UAAA1D,MAAA,WAAAP,SAISgE,EAAAzI,UAAAmJ,kBAAA,WAAqB,OAAAnG,EAAArD,UAAA,EAAAsB,QAAA,oCAC9B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,0BAGS4F,EAAAzI,UAAAoJ,yBAAA,SAAA3E,GAA+C,OAAAzB,EAAArD,UAAA,EAAAsB,QAAA,oCACxD,MAAA,CAAA,EAAAtB,KAAA+I,UAAA1D,MAAA,6BAAAP,SAKSgE,EAAAzI,UAAAqJ,aAAA,SAAA5E,GAAqC,OAAAzB,EAAArD,UAAA,EAAAsB,QAAA,oCAC9C,MAAA,CAAA,EAAAtB,KAAA+I,UAAA1D,MAAA,eAAAP,SAKSgE,EAAAzI,UAAAsJ,gBAAA,WAAmB,OAAAtG,EAAArD,UAAA,EAAAsB,QAAA,oCAC5B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,sBAGS4F,EAAAzI,UAAAuJ,mBAAA,SAAAP,GAAiC,OAAAhG,EAAArD,UAAA,EAAAsB,QAAA,oCAC1C,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,gBAAAmG,SAISP,EAAAzI,UAAAwJ,qBAAA,SAAAC,EAAAC,GAAsE,OAAA1G,EAAArD,UAAA,EAAAsB,QAAA,0CAM/E,OALMwD,EAAA,CACFkF,aAAAF,EACAG,WAAAF,EACAG,KAAA,aAEJ,CAAA,EAAAlK,KAAA+I,UAAA9D,KAAA,eAAAH,SAGSgE,EAAAzI,UAAA8J,qBAAA,SAAAC,GAA2E,OAAA/G,EAAArD,UAAA,EAAAsB,QAAA,0CAIpF,OAHMwD,EAAA,CACFoF,KAAAE,GAEJ,CAAA,EAAApK,KAAA+I,UAAA9D,KAAA,eAAAH,SAISgE,EAAAzI,UAAAgK,eAAA,WAAkB,OAAAhH,EAAArD,UAAA,EAAAsB,QAAA,oCAC3B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,2BAIS4F,EAAAzI,UAAAiK,eAAA,WAAkB,OAAAjH,EAAArD,UAAA,EAAAsB,QAAA,oCAC3B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,2BAIS4F,EAAAzI,UAAAkK,oBAAA,WAAuB,OAAAlH,EAAArD,UAAA,EAAAsB,QAAA,oCAChC,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,4BAGS4F,EAAAzI,UAAAmK,qBAAA,WAAwB,OAAAnH,EAAArD,UAAA,EAAAsB,QAAA,oCACjC,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,+BAMS4F,EAAAzI,UAAAoK,SAAA,WAAY,OAAApH,EAAArD,UAAA,EAAAsB,QAAA,oCACrB,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,eAGS4F,EAAAzI,UAAAqK,kBAAA,WAAqB,OAAArH,EAAArD,UAAA,EAAAsB,QAAA,oCAC9B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,0BAGS4F,EAAAzI,UAAAsK,kBAAA,WAAqB,OAAAtH,EAAArD,UAAA,EAAAsB,QAAA,oCAC9B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,qBAGS4F,EAAAzI,UAAAuK,cAAA,SAAAC,EAAAC,GAAqD,OAAAzH,EAAArD,UAAA,EAAAsB,QAAA,0CAK9D,OAJMwD,EAAA,CACFiG,WAAAF,EACAG,UAAAF,EAAAG,YAEJ,CAAA,EAAAjL,KAAA+I,UAAA9D,KAAA,cAAAH,SAGSgE,EAAAzI,UAAA6K,eAAA,SAAAC,EAAAN,EAAAC,GAA2E,OAAAzH,EAAArD,UAAA,EAAAsB,QAAA,0CAMpF,OALMwD,EAAA,CACFsG,OAAAD,EACAJ,WAAAF,EACAG,UAAAF,EAAAG,YAEJ,CAAA,EAAAjL,KAAA+I,UAAA9D,KAAA,eAAAH,SAMSgE,EAAAzI,UAAAgL,iBAAA,SAAAC,GAAqC,OAAAjI,EAAArD,UAAA,EAAAsB,QAAA,0CAI9C,OAHMwD,EAAA,CACFyG,OAAAD,GAEJ,CAAA,EAAAtL,KAAA+I,UAAA9D,KAAA,iBAAAH,SAGSgE,EAAAzI,UAAAmL,mBAAA,WAAsB,OAAAnI,EAAArD,UAAA,EAAAsB,QAAA,oCAC/B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA9D,KAAA,0BA9HU6D,EAAAK,SAAA,KAgIlBL,EAnIA,GAAa1H,EAAA0H,eAAAA,0NCXZ,IAAA2C,EAAA,WAAA,SAAAA,KA2BD,OA1BWA,EAAAC,WAAA,SAAAC,EAAAC,GACH,GAAAD,EAAA,CAMA,IAAAE,EAAAD,EAAAnL,aAAAjB,GAAAsM,QACAD,EAQArM,GAAAuM,aAAAC,WAAAL,EAAA,SAAAM,EAAAC,GACID,EACI/G,QAAAjE,MAAA,yBAAAgL,GAKJJ,EAAAM,YAAA,IAAA3M,GAAA4M,YAAAF,KAdAhH,QAAAjE,MAAA,wDAPAiE,QAAAmH,KAAA,2BAwBZZ,EA3BC,k3BCEK,IAAAlM,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN4M,GAHM/M,EAAAI,SAGN,SAAAE,GAAA,SAAAyM,mDA4BA,OA5BuClM,EAAAkM,EAAAzM,GAEnCyM,EAAAjM,UAAAyD,KAAA,WACI9D,KAAAuM,KAAAC,QAAA,GAGJF,EAAAjM,UAAAoM,KAAA,WACIzM,KAAAuM,KAAAC,QAAA,GAGJF,EAAAjM,UAAAqM,OAAA,SAAAH,EAAAI,EAAAC,QAAsB,IAAAD,IAAAA,EAAA,UAAqB,IAAAC,IAAAA,EAAA,IACvCL,EAAAM,SAAAF,GACA,IAAAG,EAAAtN,GAAAuN,QAAAH,EAAA,GACApN,GAAAwN,MAAAT,GAAAxI,KAAA+I,GAAAG,SAGJX,EAAAjM,UAAA6M,QAAA,SAAAX,EAAAI,EAAAC,QAAuB,IAAAD,IAAAA,EAAA,SAAqB,IAAAC,IAAAA,EAAA,IACxCL,EAAAM,SAAAF,GACA,IAAAG,EAAAtN,GAAAuN,QAAAH,EAAA,GACApN,GAAAwN,MAAAT,GAAAxI,KAAA+I,GAAAG,SAGJX,EAAAjM,UAAA8M,KAAA,SAAAZ,GACI,IAAAa,EAAA5N,GAAAuN,QAAA,GAAA,EAAA,GACAM,EAAA7N,GAAAuN,QAAA,GAAA,EAAA,GACAD,EAAAtN,GAAA8N,SAAAF,EAAAC,GACA7N,GAAAwN,MAAAT,GAAAxI,KAAA+I,GAAAG,SA1Ba/L,EAAA,CADpBxB,GACoB4M,GAArB,CAAA9M,GAAA2B,YAAqBC,EAAAP,QAAAyL,u2BCErB,IAAAlF,EAAA9H,EAAA,WAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGN4N,EAAA,SAAA1N,GAAA,SAAA0N,IAAA,IAAAzN,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAA0N,SAAAhO,GAAAiO,GAAA,EAAA,GACA3N,EAAA4N,OAAA,EACA5N,EAAA6N,IAAA,KACA7N,EAAA8N,KAAA,KACA9N,EAAA6M,MAAA,GACA7M,EAAA+N,UAAA,EACA/N,EAAAgO,WAAA,KACAhO,EAAA+E,OAAAuC,EAAA2G,mBAAAC,OAsDJ,OA/DwC5N,EAAAmN,EAAA1N,GAWpC0N,EAAAlN,UAAA+C,KAAA,SAAAsK,EAAAC,EAAAhB,QAAkC,IAAAA,IAAAA,EAAA,IAI9B3M,KAAA0N,MAAAA,EACA1N,KAAA2N,IAAAA,EACA3N,KAAAuM,KAAAI,MAAAA,EACA3M,KAAAuM,KAAA0B,YAAAN,GACA3N,KAAAkO,WAAA9G,EAAA2G,mBAAAI,MAEAnO,KAAAuM,KAAA9L,aAAAjB,GAAA4O,QAAAC,SAAA,EACArO,KAAA4N,KAAA5N,KAAAuM,KAAA+B,kBAIJf,EAAAlN,UAAA6N,WAAA,SAAArJ,GACI7E,KAAA6E,OAAAA,EACA7E,KAAAuM,KAAAgC,QAAA1J,GAGJ0I,EAAAlN,UAAAmO,UAAA,SAAAC,GAEI,QAFM,IAAAA,IAAAA,GAAA,GACNzO,KAAA6N,SAAAY,EACAA,EAAA,CACU,IAAAlP,EAAAS,KAAAuM,KAAAmC,EAAAnP,EAAAmP,EAAAC,EAAApP,EAAAoP,EACN3O,KAAA8N,WAAAtO,GAAAiO,GAAAiB,EAAAC,EAAA,KACA3O,KAAAuM,KAAA0B,YAAAjO,KAAA8N,YACA9N,KAAAuM,KAAAI,MAAA,EACA3M,KAAAuM,KAAAqC,OAAA,GACA5O,KAAAuM,KAAAsC,eAAA7O,KAAA4N,WAGA5N,KAAAuM,KAAA0B,YAAAjO,KAAA2N,KACA3N,KAAAuM,KAAAI,MAAA3M,KAAA2M,MACA3M,KAAAuM,KAAAqC,OAAA,EACA5O,KAAAuM,KAAAsC,eAAA,IAAA7O,KAAA2M,MAAA,IAAA3M,KAAA2M,QAIRY,EAAAlN,UAAAyO,QAAA,SAAAJ,EAAAC,GACI,GAAA3O,KAAA8N,WAAA,CACI,IAAAiB,EAAA/O,KAAA8N,WAAAY,EAAAA,EACAM,EAAAhP,KAAA8N,WAAAa,EAAAA,EACA3O,KAAA8N,WAAAtO,GAAAiO,GAAAsB,EAAAC,GACAhP,KAAAuM,KAAA0B,YAAAjO,KAAA8N,cAIRP,EAAAlN,UAAA4O,UAAA,SAAA1C,GACI,IAAA2C,EAAAlP,KAAAuM,KAAA4C,sBAAAnP,KAAAwN,UAEA,OADAjB,EAAA6C,qBAAAF,IA1DJhO,EAAA,CADCvB,GAC8B4N,EAAAlN,UAAA,gBAAA,GAFda,EAAA,CADpBxB,GACoB6N,GAArB,CAAA/N,GAAA2B,WAAqBC,EAAAP,QAAA0M,62BCLrB,IAAAnG,EAAA9H,EAAA,WAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN2P,GAHM9P,EAAAI,SAGN,SAAAE,GAAA,SAAAwP,IAAA,IAAAvP,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YACIF,EAAA4O,GAAA,EACA5O,EAAA6O,GAAA,EACA7O,EAAA4N,OAAA,EACA5N,EAAA+E,OAAAuC,EAAAkI,kBAAAnB,KACArO,EAAAyP,WAAA,IAmBJ,OAxBmCnP,EAAAiP,EAAAxP,GAO/BwP,EAAAhP,UAAA+C,KAAA,SAAAsL,EAAAC,EAAAjB,GACI1N,KAAA0O,EAAAA,EACA1O,KAAA2O,EAAAA,EACA3O,KAAA0N,MAAAA,EACA1N,KAAAuP,WAAA,EACAvP,KAAAkO,WAAA9G,EAAAkI,kBAAAnB,MACAnO,KAAAwO,WAAA,IAGJa,EAAAhP,UAAA6N,WAAA,SAAArJ,GACI7E,KAAA6E,OAAAA,EACA7E,KAAAuM,KAAAgC,QAAA1J,GAGJwK,EAAAhP,UAAAmO,UAAA,SAAAC,GACIzO,KAAAuM,KAAAiD,eAAA,UAAAhD,OAAAiC,GAtBavN,EAAA,CADpBxB,GACoB2P,GAArB,CAAA7P,GAAA2B,YAAqBC,EAAAP,QAAAwO,gtGCTrB,IAAA1J,EAAArG,EAAA,mBAGAmQ,EAAA,WAAA,SAAAA,KAgBA,OAbiBA,EAAAC,WAAA,WAAc,OAAArM,EAAArD,UAAA,EAAAsB,QAAA,+CACvB,MAAA,CAAA,EAAA,IAAAA,QAAA,SAAAC,EAAAC,GACI,IAEI,IAAAmO,EAAAC,SAAAC,IAAAC,QAAAnK,EAAAoK,SAAAjQ,EAAAkQ,YAEAzO,EADA0F,KAAAgJ,MAAAN,EAAA1E,SAAA2E,SAAAM,IAAAC,QAEF,MAAAC,GACElL,QAAAjE,MAAA,oBAAAmP,GACA5O,EAAA4O,YAXGX,EAAAO,WAAA,mEAenBP,EAhBA,GAAqBrO,EAAAP,QAAA4O,u4BCLrB,IAAAY,EAAA/Q,EAAA,sBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGN2Q,EAAA,SAAAzQ,GAAA,SAAAyQ,IAAA,IAAAxQ,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGWF,EAAAyQ,cAAA,KAGAzQ,EAAA0Q,aAAA,KAGA1Q,EAAA2Q,WAAA,KAGA3Q,EAAA4Q,WAAA,KAGA5Q,EAAA6Q,KAAA,KAGA7Q,EAAA8Q,cAAA,KAGA9Q,EAAA+Q,WAAA,KAGA/Q,EAAAgR,cAAA,KAGAhR,EAAAiR,WAAA,KAEAjR,EAAAuJ,GAAA,KACAvJ,EAAAkR,OAAA,KACAlR,EAAAyL,OAAA,OA+DX,OA9F2CnL,EAAAkQ,EAAAzQ,GAiCvCyQ,EAAAjQ,UAAAyD,KAAA,WACI9D,KAAAuM,KAAAC,QAAA,GAGJ8D,EAAAjQ,UAAAoM,KAAA,WACIzM,KAAAuM,KAAAC,QAAA,GAGJ8D,EAAAjQ,UAAA+C,KAAA,SAAA6N,GACIjR,KAAAqJ,GAAA4H,EAAA5H,GACArJ,KAAAgR,OAAAC,EAAAD,OACAhR,KAAAuL,OAAA0F,EAAA1F,OAEAvL,KAAAuQ,cAAApE,YAAAnM,KAAAkR,gBAAAD,EAAAD,QAEAhR,KAAAwQ,aAAAxP,OAAA,IAAAiQ,EAAA1F,OAEAvL,KAAAyQ,WAAArN,KAAA6N,EAAAE,UAAA,GAAAF,EAAA5H,IACArJ,KAAA0Q,WAAAtN,KAAA6N,EAAAE,UAAA,GAAAF,EAAA5H,IAOA,IALA,IAAA+H,EAAA,EACAC,EAAA,EAEAC,GAAA,EAEAC,EAAA,EAAAA,EAAAN,EAAAE,UAAAK,OAAAD,IACID,EAAAA,GAAAL,EAAAE,UAAAI,GAAAhG,QAAA0F,EAAAE,UAAAI,GAAAE,cACAL,GAAAH,EAAAE,UAAAI,GAAAhG,QAAA0F,EAAAE,UAAAI,GAAAE,cAAAR,EAAAE,UAAAI,GAAAE,cAAAR,EAAAE,UAAAI,GAAAhG,OACA8F,GAAAJ,EAAAE,UAAAI,GAAAE,cAGJzR,KAAA0R,aAAAJ,GACAtR,KAAA2R,QAAAP,EAAAC,IAGJf,EAAAjQ,UAAAsR,QAAA,SAAAhB,GACI3Q,KAAA2Q,KAAAiB,UAAAjB,GAGJL,EAAAjQ,UAAAqR,aAAA,SAAAJ,GACItR,KAAAuM,KAAAgC,QAAA+C,EAAA,IAAA,KAGJhB,EAAAjQ,UAAA6Q,gBAAA,SAAAF,GACI,OAAAA,GACI,IAAA,OACI,OAAAhR,KAAA6Q,WACJ,IAAA,UACI,OAAA7Q,KAAA4Q,cACJ,IAAA,eACI,OAAA5Q,KAAA8Q,cACJ,IAAA,OACA,IAAA,OACA,IAAA,QAEI,OAAA9Q,KAAA+Q,WACJ,QACI,OAAA,OAvFZ7P,EAAA,CADCvB,EAAAH,GAAAsM,SAC6CwE,EAAAjQ,UAAA,qBAAA,GAG9Ca,EAAA,CADCvB,EAAAH,GAAAkB,QAC2C4P,EAAAjQ,UAAA,oBAAA,GAG5Ca,EAAA,CADCvB,EAAA0Q,EAAAxP,UACiDyP,EAAAjQ,UAAA,kBAAA,GAGlDa,EAAA,CADCvB,EAAA0Q,EAAAxP,UACiDyP,EAAAjQ,UAAA,kBAAA,GAGlDa,EAAA,CADCvB,EAAAH,GAAAsM,SAC6BwE,EAAAjQ,UAAA,YAAA,GAG9Ba,EAAA,CADCvB,EAAAH,GAAA4M,cAC2CkE,EAAAjQ,UAAA,qBAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAA4M,cACwCkE,EAAAjQ,UAAA,kBAAA,GAGzCa,EAAA,CADCvB,EAAAH,GAAA4M,cAC2CkE,EAAAjQ,UAAA,qBAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAA4M,cACwCkE,EAAAjQ,UAAA,kBAAA,GA3BxBa,EAAA,CADpBxB,GACoB4Q,GAArB,CAAA9Q,GAAA2B,WAAqBC,EAAAP,QAAAyP,oxECNrB,IAAAlJ,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,qBACAwS,EAAAxS,EAAA,YACAyS,EAAAzS,EAAA,0BACA0S,EAAA1S,EAAA,qCAGA2S,EAAA3S,EAAA,2BACA+H,EAAA/H,EAAA,0BACAD,EAAAC,EAAA,kCACAuJ,EAAAvJ,EAAA,+BACA4S,EAAA5S,EAAA,yBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNwS,EAAA,SAAAtS,GAAA,SAAAsS,IAAA,IAAArS,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGWF,EAAAsS,WAAA,KAGAtS,EAAAuS,aAAA,KAGAvS,EAAAwS,IAAA,KAGAxS,EAAAyS,UAAA,KAGAzS,EAAA0S,cAAA,KAEA1S,EAAAoK,KAAA,KACApK,EAAA2S,QAAA,OAoIX,OAtJ8CrS,EAAA+R,EAAAtS,GAqB1CsS,EAAA9R,UAAA+C,KAAA,SAAA6N,EAAAwB,GACIzS,KAAAkK,KAAA+G,EAAA/G,KACAlK,KAAAyS,QAAAA,EACAzS,KAAAoS,WAAApR,OAAA3B,EAAAwB,QAAAC,SAAAC,mBAAA,WAAAkQ,EAAA/G,MAEA,IAAAwI,EAAAzB,EAAA1F,OAAA0F,EAAAQ,cAAAR,EAAAQ,cAAAR,EAAA1F,OAEAvL,KAAAqS,aAAArR,OAAA0R,EAAA,IAAAzB,EAAAQ,cAEAzR,KAAAuS,UAAA/F,OAAAyE,EAAA1F,QAAA0F,EAAAQ,cACAzR,KAAAsS,IAAAK,aAAA3S,KAAAwS,cAAAhG,QAAAxM,KAAAuS,UAAA,QAGMJ,EAAA9R,UAAAC,OAAA,WACNN,KAAAsS,IAAA/F,KAAAqG,GAAA,QAAA5S,KAAA6S,gBAAA7S,OAGMmS,EAAA9R,UAAAyS,UAAA,aAIVX,EAAA9R,UAAAwS,gBAAA,WAGI,OAFAZ,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA/S,KAAAkK,MACI,IAAA,MAEIlK,KAAAgT,iBACA,MACJ,IAAA,mBAEIhT,KAAAiT,oBACA,MACJ,IAAA,YAEIjT,KAAAkT,cAOZf,EAAA9R,UAAA2S,eAAA,WAAA,IAAAlT,EAAAE,KACI+R,EAAAoB,kBAAAhK,SAAAiK,2BACCrP,KAAA,WAEGmB,QAAAC,IAAA,4BACArF,EAAAuT,yBAEHrP,MAAA,SAAA/C,GAEGiE,QAAAjE,MAAA,4BAAAA,GAEA8Q,EAAAoB,kBAAAhK,SAAAmK,6BACCvP,KAAA,WAEGmB,QAAAC,IAAA,4BACArF,EAAAuT,yBAEHrP,MAAA,SAAA/C,GAEGiE,QAAAjE,MAAA,8BAAAA,QAKZkR,EAAA9R,UAAAgT,qBAAA,WACIrT,KAAAuT,0BAGJpB,EAAA9R,UAAA4S,kBAAA,WACIpK,EAAAK,eAAAC,SAAAqK,0BACAxT,KAAAuT,0BAGEpB,EAAA9R,UAAA6S,UAAA,mGAIF,OAHAhO,QAAAC,IAAA,OACA8M,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA2S,KAAArM,EAAAsM,eAAAC,MACA,CAAA,EAAA9B,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAE,MACA9M,EAAAxG,QAAAC,SAAAsT,MAAA,EACAvC,EAAA+B,eAAAS,YAAAC,wBAGEnC,EAAA9R,UAAAkT,uBAAA,yGACyB,KAAA,EAAA,MAAA,CAAA,EAAAvT,KAAAuU,iCAArBzP,EAAAvF,EAAAgE,OACNyO,EAAAlJ,eAAAK,SAAAM,yBAAA3E,GAAAf,KAAA,WAEIjE,EAAA0U,0BAIRrC,EAAA9R,UAAAmU,YAAA,WACK3C,EAAA+B,eAAAG,UAAAU,iBAAArN,EAAA6M,aAAAC,OAAAQ,mBAGCvC,EAAA9R,UAAAkU,gBAAA,iBAAoB,OAAAlR,EAAArD,UAAA,EAAAsB,QAAA,0EAChB0J,EAAA2J,KAAAC,MACAC,EAAA,CACFxL,GAAArJ,KAAAyS,QACAvI,KAAAlK,KAAAkK,KACAqB,OAAA,iDAKAuJ,EAAAjM,EAAAK,eAAAC,SAAAC,kBAAAC,gBAGA,gBAAA,CAAA,EAAA,QAAA9J,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,OAAA,EAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIkQ,EAAAlQ,EAAAE,KAAAuE,KACJrF,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,oBAHJ8T,EAAAxR,aAOW,KAAA,EAAA,MAAA,CAAA,EAAA2O,EAAArR,QAAA6O,qBACD,OADR/J,EAAAoP,EAAAxR,OACQ,CAAA,EAAAuO,EAAAkD,sBAAAF,EAAA9J,EAAA/D,KAAAC,UAAA2N,GAAAlP,EAAAsP,yBAQd,OARMC,EAAAH,EAAAxR,OAQN,CAAA,EANM,CACFsR,KAAAA,EACAK,MAAAA,EACAlK,UAAAA,UA9IR9J,EAAA,CADCvB,EAAAH,GAAAkB,QACyCyR,EAAA9R,UAAA,kBAAA,GAG1Ca,EAAA,CADCvB,EAAAH,GAAAkB,QAC2CyR,EAAA9R,UAAA,oBAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAA2V,SACmChD,EAAA9R,UAAA,WAAA,GAGpCa,EAAA,CADCvB,EAAAH,GAAA4V,OACuCjD,EAAA9R,UAAA,iBAAA,GAGxCa,EAAA,CADCvB,EAAAH,GAAA4V,OAC2CjD,EAAA9R,UAAA,qBAAA,GAf3Ba,EAAA,CADpBxB,GACoByS,GAArB,CAAA3S,GAAA2B,WAAqBC,EAAAP,QAAAsR,oiBCdrB,IAAA/K,EAAA9H,EAAA,WAkBA+V,EAAA,WAAA,SAAAA,IAgBIrV,KAAA2F,OAAA,KACA3F,KAAAsV,SAAA,KACAtV,KAAAuV,UAAA,KACAvV,KAAAwV,WAAA,KAGAxV,KAAAyT,KAAArM,EAAAsM,eAAAC,MAEA3T,KAAA6E,OAAAuC,EAAAqO,iBAAAC,SAEA1V,KAAA2V,YAAA,EAEA3V,KAAA4V,eAAA,KAGA5V,KAAA6V,YAAA,EACA7V,KAAA8V,YAAA,EAGA9V,KAAA+V,MAAA,CACI,CAAAC,MAAA,2BAAAC,KAAA,SAAAC,MAAA,qBAAAzP,IAAA,2CACA,CAAAuP,MAAA,iCAAAC,KAAA,WAAAC,MAAA,qBAAAzP,IAAA,2CACA,CAAAuP,MAAA,2BAAAC,KAAA,WAAAC,MAAA,qBAAAzP,IAAA,2CACA,CAAAuP,MAAA,6BAAAC,KAAA,SAAAC,MAAA,qBAAAzP,IAAA,2CACA,CAAAuP,MAAA,iCAAAC,KAAA,SAAAC,MAAA,qBAAAzP,IAAA,4CAGJzG,KAAAmW,MAAA,EACAnW,KAAAoW,SAAA,EAEApW,KAAAoU,MAAA,EACApU,KAAAqW,SAAA,EAGArW,KAAAsW,YAAA,KAEAtW,KAAAuW,kBAAA,KACAvW,KAAAwW,SAAA,KACAxW,KAAAyW,eAAA,EA+GJ,OAjKWpB,EAAA9O,YAAA,WAKH,OAJA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,MAGJA,KAAAmD,WAGJH,OAAAC,eAAAoS,EAAA,WAAA,CAAAnS,IAAA,WACI,OAAAlD,KAAAuG,+CA2CJvD,OAAAC,eAAAoS,EAAAhV,UAAA,YAAA,CAAA6C,IAAA,WACI,OAAAlD,KAAA6V,YAGJa,IAAA,SAAA5R,GACI9E,KAAA6V,WAAA/Q,mCAGJ9B,OAAAC,eAAAoS,EAAAhV,UAAA,YAAA,CAAA6C,IAAA,WACI,OAAAlD,KAAA8V,YAGJY,IAAA,SAAA5R,GACI9E,KAAA8V,WAAAhR,mCAGJuQ,EAAAhV,UAAA+C,KAAA,SAAAuC,GACI3F,KAAA2F,OAAAA,GAGJ0P,EAAAhV,UAAAsW,MAAA,WACI3W,KAAA6E,OAAAuC,EAAAqO,iBAAAC,UAIJL,EAAAhV,UAAAuW,kBAAA,SAAA5G,GACI,OAAAJ,SAAAiH,OAAA7G,GAAA/E,SAAA2E,SAAAM,IAAA4G,MAGJzB,EAAAhV,UAAA0W,KAAA,WACI,IAAAC,EAAAhX,KAAA4W,kBAAA5W,KAAA2F,OAAAsR,aAEAnS,EAAAmC,KAAAC,UAAA,CACIqB,UAAAvI,KAAAuI,UACAV,UAAA7H,KAAA6H,UACA4O,cAAAzW,KAAAyW,cACAN,MAAAnW,KAAAmW,MACAC,SAAApW,KAAAoW,SACAC,SAAArW,KAAAqW,SACAC,YAAAtW,KAAAsW,YACAY,uBAAAlX,KAAAuW,kBAAAvW,KAAAuW,kBAAAY,UAAA,KACAX,SAAAxW,KAAAwW,WAIJY,EAAAxH,SAAAC,IAAAwH,QAAAvS,EAAAkS,GAAA/L,WAGAqM,EAAA1H,SAAA2H,WAAAH,EAAAJ,GAAA/L,WAGAnE,EAAAG,KAAAC,UAAA,CAAAkQ,cAAAA,EAAAE,KAAAA,IACA9X,GAAAiC,IAAA+V,aAAAC,QA3HR,cA2HQ3Q,IAGJuO,EAAAhV,UAAAqX,QAAA,qBACIV,EAAAhX,KAAA4W,kBAAA5W,KAAA2F,OAAAsR,aACAU,EAAAnY,GAAAiC,IAAA+V,aAAAI,QAhIR,eAkIQ,GAAAD,EAKA,IAEU,IAAAE,EAAA5Q,KAAAgJ,MAAA0H,GAAAP,EAAAS,EAAAT,cAAAE,EAAAO,EAAAP,KAIN,GADA1H,SAAA2H,WAAAH,EAAAJ,GAAA/L,aACAqM,EAGI,OAFApS,QAAAjE,MAAA,qCACAjB,KAAA8X,gBAKJ,IACAC,EADAnI,SAAAC,IAAAC,QAAAsH,EAAAJ,GACA/L,SAAA2E,SAAAM,IAAAC,MAEArL,EAAAmC,KAAAgJ,MAAA8H,GAGA/X,KAAA6H,UAAA,QAAAtI,EAAAuF,MAAAA,OAAA,EAAAA,EAAA+C,iBAAA,IAAAtI,GAAAA,EACAS,KAAAuI,UAAA,QAAAjF,EAAAwB,MAAAA,OAAA,EAAAA,EAAAyD,iBAAA,IAAAjF,GAAAA,EACAtD,KAAAyW,cAAA,QAAA1B,EAAAjQ,MAAAA,OAAA,EAAAA,EAAA2R,qBAAA,IAAA1B,GAAAA,EACA/U,KAAAmW,MAAA,iBAAArR,EAAAqR,MAAArR,EAAAqR,MAAA,EACAnW,KAAAoW,SAAA,iBAAAtR,EAAAsR,SAAAtR,EAAAsR,SAAA,EACApW,KAAAqW,SAAA,iBAAAvR,EAAAuR,SAAAvR,EAAAuR,SAAA,EACArW,KAAAsW,aAAAxR,MAAAA,OAAA,EAAAA,EAAAwR,cAAA,KACAtW,KAAAuW,kBAAA,iBAAAzR,EAAAoS,uBAAA,IAAAvC,KAAA7P,EAAAoS,wBAAA,KACAlX,KAAAwW,UAAA1R,MAAAA,OAAA,EAAAA,EAAA0R,WAAA,KACF,MAAAvV,GACEiE,QAAAjE,MAAA,gCAAAA,GACAjB,KAAA8X,qBAlCA9X,KAAA8X,iBAsCRzC,EAAAhV,UAAAyX,cAAA,WACI9X,KAAA6H,WAAA,EACA7H,KAAAuI,WAAA,EACAvI,KAAAyW,eAAA,EACAzW,KAAAmW,MAAA,EACAnW,KAAAoW,SAAA,EACApW,KAAAqW,SAAA,EACArW,KAAAsW,YAAA,KACAtW,KAAAuW,kBAAA,KACAvW,KAAAwW,SAAA,MAjKWnB,EAAAlS,UAAA,KAmKnBkS,EArKA,GAAqBjU,EAAAP,QAAAwU,0LClBrB,IAAA2C,EAAA1Y,EAAA,iBAEA2Y,EAAA,WAAA,SAAAA,KAyBA,OAtBIjV,OAAAC,eAAAgV,EAAA,WAAA,CAAA/U,IAAA,WAII,OAHA,MAAAlD,KAAAmD,YACInD,KAAAmD,UAAA,IAAA8U,GAEJjY,KAAAmD,2CAGJ8U,EAAA5X,UAAA0H,KAAA,SAAAmQ,EAAAC,EAAAC,GACI,IAAAC,EAAAL,EAAAnX,QAAAC,SAAAwX,QAAA,GAAAJ,EAAAC,GAIA,GAHAC,GACIA,EAAAzK,KAAA0K,EAAApK,YAAAmK,EAAAzK,KAEJ0K,EAAA5X,aAAAjB,GAAA+Y,WAAA,CACI,IAAAC,EAAAH,EAAA5X,aAAAjB,GAAA+Y,WACAC,EAAA5F,GAAA,WAAA,WACIyF,EAAAI,qBAEJD,EAAAzQ,YACGsQ,EAAA5X,aAAAjB,GAAAkZ,iBACHL,EAAA5X,aAAAjB,GAAAkZ,gBAAAC,eArBMV,EAAA9U,UAAA,KAwBlB8U,EAzBA,GAAqB7W,EAAAP,QAAAoX,+TCIrB,SAAAvE,GACIA,EAAA,MAAA,QACAA,EAAA,MAAA,QAFJ,CAGAtS,EAAAsS,iBAAAtS,EAAAsS,eAAA,KAGA,SAAA+B,GACIA,EAAA,SAAA,WACAA,EAAA,OAAA,SAFJ,CAGArU,EAAAqU,mBAAArU,EAAAqU,iBAAA,KAGA,SAAAxN,GACIA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,aAAA,eACAA,EAAA,eAAA,iBACAA,EAAA,WAAA,aACAA,EAAA,WAAA,aACAA,EAAA,cAAA,gBATJ,CAUA7G,EAAA6G,kBAAA7G,EAAA6G,gBAAA,KAGA,SAAAgM,GACIA,EAAA,KAAA,YACAA,EAAA,KAAA,YACAA,EAAA,QAAA,eACAA,EAAA,KAAA,YACAA,EAAA,KAAA,YACAA,EAAA,IAAA,WACAA,EAAA,QAAA,eACAA,EAAA,YAAA,mBACAA,EAAA,QAAA,eACAA,EAAA,MAAA,aACAA,EAAA,KAAA,YACAA,EAAA,WAAA,iBACAA,EAAA,oBAAA,yBACAA,EAAA,kBAAA,2BAdJ,CAeA7S,EAAA6S,eAAA7S,EAAA6S,aAAA,KAGA,SAAA3E,GACIA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,IAAA,KAAA,MACAA,EAAAA,EAAA,KAAA,GAAA,OAHJ,CAIAlO,EAAAkO,oBAAAlO,EAAAkO,kBAAA,KACA,SAAAvB,GACIA,EAAAA,EAAA,KAAA,KAAA,OACAA,EAAAA,EAAA,KAAA,KAAA,OAFJ,CAGA3M,EAAA2M,qBAAA3M,EAAA2M,mBAAA,KAGa3M,EAAAwX,mBAAA,CACT,CAAAC,QAAArZ,GAAAsZ,UAAAC,KAAA,QAAA7O,KAAA,QAAA8O,MAAA,IACA,CAAAH,QAAArZ,GAAAyZ,OAAAF,KAAA,SAAA7O,KAAA,SAAA8O,MAAA,IACA,CAAAH,QAAArZ,GAAA4M,YAAA2M,KAAA,SAAA7O,KAAA,SAAA8O,MAAA,2KC1DJ,IAAAE,EAAA,WAAA,SAAAA,IAWIlZ,KAAAmZ,SAAA,IAAAC,IAmCJ,OA3CWF,EAAA3S,YAAA,WAKH,OAJA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,MAGJA,KAAAmD,WAKJH,OAAAC,eAAAiW,EAAA,WAAA,CAAAhW,IAAA,WACI,OAAAlD,KAAAuG,+CAGJ2S,EAAA7Y,UAAAuS,GAAA,SAAAzM,EAAAkT,EAAAC,GACItZ,KAAAmZ,SAAAI,IAAApT,GACInG,KAAAmZ,SAAAjW,IAAAiD,GACAqT,KAAA,CAAAH,MAAAA,EAAAC,QAAAA,IAEAtZ,KAAAmZ,SAAAzC,IAAAvQ,EAAA,CAAA,CAAAkT,MAAAA,EAAAC,QAAAA,MAIRJ,EAAA7Y,UAAAoZ,IAAA,SAAAtT,EAAAkT,GACI,GAAArZ,KAAAmZ,SAAAI,IAAApT,GAAA,CACI,IAAAuT,EAAA1Z,KAAAmZ,SAAAjW,IAAAiD,GACAuH,EAAAgM,EAAAC,UAAA,SAAAC,GAAA,OAAAA,EAAAP,OAAAA,IACA3L,GAAA,GAAegM,EAAAG,OAAAnM,EAAA,KAIvBwL,EAAA7Y,UAAAyZ,KAAA,SAAA3T,GAAmB,IAAA,IAAAxB,EAAA,GAAAoV,EAAA,EAAAA,EAAA9Z,UAAAuR,OAAAuI,IAAApV,EAAAoV,EAAA,GAAA9Z,UAAA8Z,GACf,GAAA/Z,KAAAmZ,SAAAI,IAAApT,GAAA,CACI,IAAAuT,EAAA1Z,KAAAmZ,SAAAjW,IAAAiD,GACAuT,EAAAM,QAAA,SAAAza,GAAmB,IAAA8Z,EAAA9Z,EAAA8Z,MAAAC,EAAA/Z,EAAA+Z,QACfA,EAAAD,EAAAtZ,MAAAuZ,EAAA3U,GAAA0U,EAAA1U,OAKZuU,EAAA7Y,UAAA4Z,MAAA,WACIja,KAAAmZ,SAAAc,SA3CWf,EAAA/V,UAAA,KA6CnB+V,EA9CA,GAAqB9X,EAAAP,QAAAqY,+tECLrB,IAAA9R,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA+H,EAAA/H,EAAA,0BACA6a,EAAA7a,EAAA,yBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN0a,GAHM7a,EAAAI,SAGN,SAAAE,GAAA,SAAAua,IAAA,IAAAta,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAwa,UAAA,KACAxa,EAAAya,WAAA,KACAza,EAAA0a,SAAA,KACA1a,EAAA2a,SAAA,KACA3a,EAAA4a,SAAA,OA0FJ,OAjGuCta,EAAAga,EAAAva,GASnCua,EAAA/Z,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAAsa,UAAA9a,GAAAmb,KAAA,qBAAA3a,KAAAqa,OACAra,KAAAua,WAAA/a,GAAAmb,KAAA,sBAAA3a,KAAAqa,OACAra,KAAAwa,SAAAhb,GAAAmb,KAAA,YAAA3a,KAAAqa,OACAra,KAAAsa,UAAA1H,GAAA,QAAA5S,KAAA4a,cAAA5a,MACAA,KAAAua,WAAA3H,GAAA,QAAA5S,KAAA6a,eAAA7a,MACAA,KAAAwa,SAAA5H,GAAA,QAAA5S,KAAA8a,aAAA9a,MAEAA,KAAAya,SAAAjb,GAAAmb,KAAA,oBAAA3a,KAAAqa,OACAra,KAAA0a,SAAAlb,GAAAmb,KAAA,oBAAA3a,KAAAqa,OACAra,KAAAya,SAAA7H,GAAA,QAAA5S,KAAA+a,aAAA/a,MACAA,KAAA0a,SAAA9H,GAAA,QAAA5S,KAAAgb,aAAAhb,OAGJoa,EAAA/Z,UAAAyS,UAAA,WACI9S,KAAAsa,UAAAb,IAAA,QAAAzZ,KAAA4a,cAAA5a,MACAA,KAAAsa,UAAAb,IAAA,QAAAzZ,KAAA6a,eAAA7a,MACAA,KAAAwa,SAAAf,IAAA,QAAAzZ,KAAA8a,aAAA9a,MAEAA,KAAAya,SAAAhB,IAAA,QAAAzZ,KAAA+a,aAAA/a,MACAA,KAAA0a,SAAAjB,IAAA,QAAAzZ,KAAAgb,aAAAhb,OAGJoa,EAAA/Z,UAAAG,SAAA,WACIR,KAAA0M,OAAA1M,KAAAqa,OACAF,EAAAtZ,QAAAC,SAAAma,gBAAA,GAEAjb,KAAAkb,cACAlb,KAAAmb,eAGJf,EAAA/Z,UAAA+a,UAAA,WACIjB,EAAAtZ,QAAAC,SAAAma,gBAAA,IAGJb,EAAA/Z,UAAAya,aAAA,WACI7I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,MAAA,IAGJjB,EAAA/Z,UAAAua,cAAA,WACI3I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAC,SACA7D,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAE,MAAA,GACAtC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,MAAA,GACAxJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGElB,EAAA/Z,UAAAwa,eAAA,mGAKF,OAJA5I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAAwV,YAAA,KACAjP,EAAAxG,QAAAC,SAAAyV,kBAAA,KACAlP,EAAAxG,QAAAC,SAAAiW,OACA,CAAA,EAAAlF,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,MAAA,GACAhU,EAAAxG,QAAAC,SAAAsT,MAAA,EACAvC,EAAA+B,eAAAS,YAAAC,wBAGJ8F,EAAA/Z,UAAA2a,aAAA,WACI/I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAAyH,WAAAlB,EAAAxG,QAAAC,SAAAyH,UACAlB,EAAAxG,QAAAC,SAAAiW,OACA/W,KAAAmb,eAGJf,EAAA/Z,UAAA0a,aAAA,WACI9I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+G,WAAAR,EAAAxG,QAAAC,SAAA+G,UACAR,EAAAxG,QAAAC,SAAAiW,OACA1P,EAAAxG,QAAAC,SAAA+G,UACIoK,EAAApR,QAAAC,SAAA8G,YAEAqK,EAAApR,QAAAC,SAAAqH,YAEJnI,KAAAkb,eAGJd,EAAA/Z,UAAA6a,YAAA,WACIlb,KAAAya,SAAAjL,eAAA,MAAAhD,OAAAnF,EAAAxG,QAAAC,SAAA+G,UACA7H,KAAAya,SAAAjL,eAAA,OAAAhD,QAAAnF,EAAAxG,QAAAC,SAAA+G,WAGJuS,EAAA/Z,UAAA8a,YAAA,WACInb,KAAA0a,SAAAlL,eAAA,MAAAhD,OAAAnF,EAAAxG,QAAAC,SAAAyH,UACAvI,KAAA0a,SAAAlL,eAAA,OAAAhD,QAAAnF,EAAAxG,QAAAC,SAAAyH,WA/FarH,EAAA,CADpBxB,GACoB0a,GAArB,CAAAF,EAAArZ,UAAqBO,EAAAP,QAAAuZ,+iCCVrB,IAAAvI,EAAAvS,EAAA,qBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN6b,GAHMhc,EAAAI,SAGN,SAAAE,GAAA,SAAA0b,mDA0BA,OA1ByCnb,EAAAmb,EAAA1b,GACrC0b,EAAAlb,UAAAC,OAAA,WACIN,KAAAuM,KAAAC,QAAA,EACAqF,EAAA+B,eAAA4H,eAAAxb,OAGJub,EAAAlb,UAAAyT,OAAA,SAAA2H,GAAA,IAAA3b,EAAAE,KACI,YADG,IAAAyb,IAAAA,EAAA,IACH,IAAAna,QAAA,SAAAC,GACIzB,EAAAyM,KAAAC,QAAA,EACA1M,EAAAyM,KAAAgC,QAAA,EACA/O,GAAAwN,MAAAlN,EAAAyM,MAAAmP,GAAAD,EAAA,CAAAlN,QAAA,MAAArI,KAAA,WACI3E,EAAA,QACJ0L,WAIRsO,EAAAlb,UAAAsb,QAAA,SAAAF,GAAA,IAAA3b,EAAAE,KACI,YADI,IAAAyb,IAAAA,EAAA,IACJ,IAAAna,QAAA,SAAAC,GACIzB,EAAAyM,KAAAC,QAAA,EACA1M,EAAAyM,KAAAgC,QAAA,IACA/O,GAAAwN,MAAAlN,EAAAyM,MAAAmP,GAAAD,EAAA,CAAAlN,QAAA,IAAArI,KAAA,WACIpG,EAAAyM,KAAAC,QAAA,EACAjL,EAAA,QACJ0L,WAvBS/L,EAAA,CADpBxB,GACoB6b,GAArB,CAAA/b,GAAA2B,YAAqBC,EAAAP,QAAA0a,uwECPf,IAAAhc,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAEN0H,GAFM7H,EAAAI,SAENL,EAAA,YACAuS,EAAAvS,EAAA,qBACAwS,EAAAxS,EAAA,YACA0S,EAAA1S,EAAA,qCACAsc,EAAAtc,EAAA,iBACA2S,EAAA3S,EAAA,kBACA+H,EAAA/H,EAAA,iBACA0Y,EAAA1Y,EAAA,iBACAuJ,EAAAvJ,EAAA,+BACA4S,EAAA5S,EAAA,yBAGAuc,EAAA,SAAAhc,GAAA,SAAAgc,IAAA,IAAA/b,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAgc,MAAA,OAuIJ,OAzIyC1b,EAAAyb,EAAAhc,GAIrCgc,EAAAxb,UAAAC,OAAA,WACIuR,EAAA+B,eAAAmI,eAAA/b,MACAA,KAAA8b,MAAAtc,GAAAmb,KAAA,QAAA3a,KAAAuM,OAGJsP,EAAAxb,UAAAyS,UAAA,aAGA+I,EAAAxb,UAAAiU,YAAA,WACIjN,EAAAxG,QAAAC,SAAA6V,QACA3W,KAAAgc,YAIEH,EAAAxb,UAAA4b,WAAA,SAAAC,6GAEE,GADJ7U,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAC,SACIwG,GAAA9U,EAAA6M,aAAAkI,KAAA,MAAA,CAAA,EAAA,GACI,GAAA9U,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,MAAA,MAAA,CAAA,EAAA,GACMyI,EAAA/U,EAAAxG,QAAAC,SAAAsT,MACAiI,EAAA1H,KAAAC,oDAIFE,EAAAjM,EAAAK,eAAAC,SAAAC,kBAAAC,gBAGA,gBAAA,CAAA,EAAA,QAAA9J,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,OAAA,EAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIkQ,EAAAlQ,EAAAE,KAAAuE,KACJrF,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,oBAHJ8T,EAAAxR,aAOW,KAAA,EAAA,MAAA,CAAA,EAAA2O,EAAArR,QAAA6O,qBAAT/J,EAAAoP,EAAAxR,OAENuO,EAAAwK,kBAAAxH,EAAAuH,EAAA1W,EAAAsP,gBAAAmH,GAAArY,KAAA,SAAAwY,SACI1R,EAAA0R,EACA,QAAAhd,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA2L,eAAAkR,EAAAvR,EAAAwR,GAAAtY,KAAA,cAEAC,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACA4Q,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,uBAIRxY,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACA4Q,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,qBAIJnV,EAAAxG,QAAAC,SAAAyV,kBAAA,KACAlP,EAAAxG,QAAAC,SAAAwV,YAAA,KACAjP,EAAAxG,QAAAC,SAAAiW,wBAEJlF,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,mBAAA,GAEAvK,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAAkU,MACAnc,KAAAyc,aAAA,WACI5K,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAkI,OACJ,qCAKFN,EAAAxb,UAAA2b,SAAA,kIAEC,GAAA3U,EAAAxG,QAAAC,SAAAwV,YAAA,MAAA,CAAA,EAAA,IACOtL,EAAA2J,KAAAC,oDAGFE,EAAAjM,EAAAK,eAAAC,SAAAC,kBAAAC,gBAGA,gBAAA,CAAA,EAAA,QAAA9J,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,OAAA,EAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIkQ,EAAAlQ,EAAAE,KAAAuE,KACJrF,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,oBAHJ4W,EAAAtU,aAOW,KAAA,EAAA,MAAA,CAAA,EAAA2O,EAAArR,QAAA6O,qBAAT/J,EAAAkS,EAAAtU,wBAKgB,+BAFlB2B,QAAAC,IAAAQ,EAAAsP,iBAEkB,CAAA,EAAAnD,EAAAwK,kBAAAxH,EAAA9J,EAAArF,EAAAsP,yBAAZpK,EAAAgN,EAAAtU,wBAGF,+BAAA,CAAA,EAAA,QAAAD,EAAA0O,EAAAlJ,eAAAK,gBAAA,IAAA7F,OAAA,EAAAA,EAAAsH,cAAAC,EAAAG,kBAAA6M,EAAAtU,OACA2B,QAAAC,IAAA,6BACAkC,EAAAxG,QAAAC,SAAAyV,kBAAA,IAAA5B,oBAKA,kBAHAzP,QAAAjE,MAAA,wBAAA+D,GACA6M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,mBACA3K,EAAA+B,eAAAC,YAAA8H,UACA,CAAA,gCAMJ,kBAHAzW,QAAAjE,MAAA,iCAAAmE,GACAyM,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,mBACA3K,EAAA+B,eAAAC,YAAA8H,UACA,CAAA,WAUR,OANA9J,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAuI,mBAAA,GACAnV,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAC,SACA1V,KAAA8b,MAAAY,oBACM1E,EAAAnX,QAAAC,SAAAwX,QAAA,aAAAtY,KAAA8b,OACNrb,aAAAmb,EAAA/a,SAAAuC,OACAiE,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAkH,OACA,CAAA,EAAA9K,EAAA+B,eAAAC,YAAA8H,0BAAA9D,EAAAtU,OAEAlB,OAAAua,iBAAA,UAAA,WACG9c,EAAA+c,sBAGHxa,OAAAua,iBAAA,SAAA,WACG9c,EAAAgd,+BAKPjB,EAAAxb,UAAAyc,iBAAA,WACI5X,QAAAC,IAAA,WAIJ0W,EAAAxb,UAAAwc,kBAAA,WACI3X,QAAAC,IAAA,YAtIajE,EAAA,CADpBxB,GACoBmc,GAArB,CAAArc,GAAA2B,WAAqBC,EAAAP,QAAAgb,irCCdf,IAAAtc,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNod,EAAA,SAAAld,GAAA,SAAAkd,IAAA,IAAAjd,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGWF,EAAA0Q,aAAA,KAGA1Q,EAAAsS,WAAA,KAGAtS,EAAAkd,YAAA,OAeX,OAxByC5c,EAAA2c,EAAAld,GAWrCkd,EAAA1c,UAAAyD,KAAA,WACI9D,KAAAuM,KAAAC,QAAA,GAGJuQ,EAAA1c,UAAAoM,KAAA,WACIzM,KAAAuM,KAAAC,QAAA,GAGJuQ,EAAA1c,UAAA+C,KAAA,SAAA4N,EAAA7K,EAAAiO,GACIpU,KAAAwQ,aAAAxP,OAAAgQ,EAAAiM,QAAA,GACAjd,KAAAoS,WAAApR,OAAAmF,EACAnG,KAAAgd,YAAAhc,OAAAoT,EAAAnJ,YAnBJ/J,EAAA,CADCvB,EAAAH,GAAAkB,QAC2Cqc,EAAA1c,UAAA,oBAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAAkB,QACyCqc,EAAA1c,UAAA,kBAAA,GAG1Ca,EAAA,CADCvB,EAAAH,GAAAkB,QAC0Cqc,EAAA1c,UAAA,mBAAA,GAT1Ba,EAAA,CADpBxB,GACoBqd,GAArB,CAAAvd,GAAA2B,WAAqBC,EAAAP,QAAAkc,22BCHrB,IAAA3V,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA0Y,EAAA1Y,EAAA,0BACA4a,EAAA5a,EAAA,eAKA0S,EAAA1S,EAAA,qCACA4d,EAAA5d,EAAA,qBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNyd,GAHM5d,EAAAI,SAGN,SAAAE,GAAA,SAAAsd,IAAA,IAAArd,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAA0a,SAAA,KAEA1a,EAAAsd,sBAAA,KAGAtd,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,KAEA1d,EAAA+Y,QAAA,OA+GJ,OA3H0CzY,EAAA+c,EAAAtd,GActCsd,EAAA9c,UAAAC,OAAA,WACIN,KAAAwa,SAAAhb,GAAAmb,KAAA,YAAA3a,KAAAuM,MAEAvM,KAAA6Y,QAAArZ,GAAAmb,KAAA,gCAAA3a,KAAAuM,MACAvM,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAEAvM,KAAAod,sBAAA5d,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OAEAV,KAAAwa,SAAA5H,GAAA,QAAA5S,KAAA8a,aAAA9a,MAEAA,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,OAIJmd,EAAA9c,UAAAyS,UAAA,WACI9S,KAAAwa,SAAAf,IAAA,QAAAzZ,KAAA8a,aAAA9a,MAEAA,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,OAGJmd,EAAA9c,UAAAG,SAAA,WAAA,QAAAV,EAAAE,KACI6d,EAAA7d,KAAA6Y,QACAiF,EAAA9F,EAAAnX,QAAAC,SAEA,QAAAvB,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA+K,iBAAAvG,KAAA,SAAAa,GAEI,IAAAmZ,EAAAnZ,EAAAE,KAEAiZ,EAAAC,KAAA,SAAAC,EAAAC,GAAA,OAAAA,EAAA9S,OAAA6S,EAAA7S,SAEAyS,EAAAM,qBAEA,IAAA,IAAA5M,EAAA,EAAAA,EAAAwM,EAAAvM,OAAAD,IAAA,CACI,IAAA6M,EAAAL,EAAAxM,GACAuM,EAAAxF,QAAA,eAAAuF,GACApd,aAAAyc,EAAArc,SACAuC,KAAAgb,EAAAC,eAAAD,EAAAE,KAAAC,SAAA,IAAAH,EAAAE,KAAAC,SAAA,GAAAH,EAAAE,KAAAE,WAAAJ,EAAAhT,WAGRpH,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,+BAAAA,KAGJ,QAAAqC,EAAA0O,EAAAlJ,eAAAK,gBAAA,IAAA7F,GAAAA,EAAAkH,uBAAAzG,KAAA,SAAAa,GACI9E,EAAAsd,sBAAApc,OAAA4D,EAAAE,KAAA2Z,qBAAAxB,QAAA,KACJjZ,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAKRkc,EAAA9c,UAAA+a,UAAA,aAGA+B,EAAA9c,UAAAya,aAAA,WACI7I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,SAAA,GACA7M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJxB,EAAA9c,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,SAAA,GACA7M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJ6B,EAAA9c,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,SAAA,GACA7M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJxB,EAAA9c,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,SAAA,GACA7M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJiJ,EAAA9c,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,SAAA,GACA7M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,UAxHa1d,EAAA,CADpBxB,GACoByd,GAArB,CAAAjD,EAAArZ,UAAqBO,EAAAP,QAAAsc,umCCdrB,IAAA/V,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA+H,EAAA/H,EAAA,0BACA0S,EAAA1S,EAAA,qCACAuJ,EAAAvJ,EAAA,+BAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNmf,GAHMtf,EAAAI,SAGN,SAAAE,GAAA,SAAAgf,IAAA,IAAA/e,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAgf,WAAA,KACAhf,EAAAif,WAAA,KAEAjf,EAAAkf,IAAA,KACAlf,EAAAkW,MAAA,KACAlW,EAAAmf,aAAA,OAwDJ,OAhE4C7e,EAAAye,EAAAhf,GAUxCgf,EAAAxe,UAAA+C,KAAA,SAAA6C,GAEIjG,KAAAif,aAAAje,OAAAiF,GAGJ4Y,EAAAxe,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,QAAA3a,KAAAuM,MACAvM,KAAA8e,WAAAtf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OACAra,KAAA+e,WAAAvf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OAEAra,KAAAgf,IAAAxf,GAAAmb,KAAA,MAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OACAV,KAAAgW,MAAAxW,GAAAmb,KAAA,QAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OACAV,KAAAif,aAAAzf,GAAAmb,KAAA,eAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OAEAV,KAAA8e,WAAAlM,GAAA,QAAA5S,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAnM,GAAA,QAAA5S,KAAAmf,eAAAnf,OAIJ6e,EAAAxe,UAAAyS,UAAA,WACI9S,KAAA8e,WAAArF,IAAA,QAAAzZ,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAtF,IAAA,QAAAzZ,KAAAmf,eAAAnf,OAGJ6e,EAAAxe,UAAA6e,eAAA,iBACIjN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAA6f,2BAGJP,EAAAxe,UAAA8e,eAAA,WAAA,IAAArf,EAAAE,KAEIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEAf,EAAAlJ,eAAAK,SAAAH,UAAAjF,KAAA,SAAAa,GAEIyC,EAAAxG,QAAAC,SAAAwU,SAAA1Q,EAAAE,KACA+M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoL,YAAA,GACAxN,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,QACJtX,MAAA,SAAA/C,GAEInB,EAAAsD,KAAAnC,EAAAgF,SACAf,QAAAC,IAAA8B,KAAAC,UAAAjG,OAIR4d,EAAAxe,UAAAif,YAAA,WACIrN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAC,SACA7D,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAE,MAAA,GACAtC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,MAAA,GACAxJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAkI,MAAA,GACAtK,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OA9Dapa,EAAA,CADpBxB,GACoBmf,GAArB,CAAA3E,EAAArZ,UAAqBO,EAAAP,QAAAge,69ECZrB,IAAAhN,EAAAvS,EAAA,oBACA8H,EAAA9H,EAAA,UACA2S,EAAA3S,EAAA,0BACA+H,EAAA/H,EAAA,yBACAgI,EAAAhI,EAAA,6BACA6a,EAAA7a,EAAA,wBAEAuJ,EAAAvJ,EAAA,8BACAigB,EAAAjgB,EAAA,0BACA0S,EAAA1S,EAAA,oCACAyS,EAAAzS,EAAA,yBAEAqG,EAAArG,EAAA,gBACAD,EAAAC,EAAA,iCACA4S,EAAA5S,EAAA,wBAIMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAKN8f,GALMjgB,EAAAI,SAKN,SAAAE,GAAA,SAAA2f,mDAwKA,OAxKmCpf,EAAAof,EAAA3f,GAE/B2f,EAAAnf,UAAAC,OAAA,WAAA,IAAAR,EAAAE,KAEIA,KAAAuM,KAAAiD,eAAA,MAAAjB,QAAA,IACA/O,GAAAigB,KAAAC,kBAAA,WAAA,OAAA5f,EAAA6f,eACA3f,KAAA2f,aACAtY,EAAAxG,QAAAC,SAAA6U,YAAA,EAEA9M,EAAAK,eAAAC,SAAA/F,OAAAW,KAAA,WACI8E,EAAAK,eAAAC,SAAAyW,oBACA/W,EAAAK,eAAAC,SAAA0W,8BAQJ9N,EAAAoB,kBAAAhK,SAAA/F,OAAAW,KAAA,SAAAwY,GACIrX,QAAAC,IAAA,kCAAAoX,EAAA/Y,YAKFgc,EAAAnf,UAAA4M,MAAA,sHACgB,KAAA,EAAA,MAAA,CAAA,EAAAiF,EAAArR,QAAA6O,qBAGE,IAAAqF,KAHd+K,EAAAjI,EAAAtU,YAGc6D,EAAAwR,4EACVmH,EAAA3Y,EAAAwR,mBAAAlL,GACN,CAAA,EAAApG,EAAAzG,QAAAC,SAAAkf,QAAAD,kBAAAlI,EAAAtU,gDAwBJ,OApBAsO,EAAA+B,eAAAG,UAAA3Q,OAEAiE,EAAAxG,QAAAC,SAAAsC,KAAA0c,GACAzY,EAAAxG,QAAAC,SAAA4W,UAEAzF,EAAApR,QAAAC,SAAA8G,YAEAuS,EAAAtZ,QAAAC,SAAAmf,uBACA9F,EAAAtZ,QAAAC,SAAAof,eACA/F,EAAAtZ,QAAAC,SAAAqf,UACAhG,EAAAtZ,QAAAC,SAAAsf,eACAjG,EAAAtZ,QAAAC,SAAAuf,qBACAlG,EAAAtZ,QAAAC,SAAAwf,cACAnG,EAAAtZ,QAAAC,SAAAyf,kBACApG,EAAAtZ,QAAAC,SAAA0f,kBAEAnZ,EAAAxG,QAAAC,SAAA6U,YAAA,EAIA,CAAA,EAAA3V,KAAAygB,wBAAA5I,EAAAtU,wBAGqB,8BAAA,CAAA,EAAAyO,EAAAlJ,eAAAK,SAAAH,yBAAXpE,EAAAiT,EAAAtU,OAEN2B,QAAAC,IAAA,gBACAkC,EAAAxG,QAAAC,SAAAwU,SAAA1Q,EAAAE,KAEAF,EAAAE,KAAA4b,aACIrhB,EAAAwB,QAAAC,SAAA6f,eAAA/b,EAAAE,KAAA8b,eAIJ/O,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,iBAQA,kBANAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoL,YAAA,EAAA,WACKxN,EAAA+B,eAAAG,UAAAU,iBAAArN,EAAA6M,aAAAoL,YAAAjc,KAAA4B,EAAAiB,SACDf,QAAAC,IAAA8B,KAAAC,UAAAlC,MAEJ6M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACA,CAAA,kBAOJ,QAAA/b,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAiK,oBAAAzF,KAAA,SAAAa,GACIyC,EAAAxG,QAAAC,SAAAyU,UAAA3Q,EAAAE,OACJd,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,yBAAAA,eAMFue,EAAAnf,UAAAogB,cAAA,WAAkB,OAAApd,EAAArD,UAAA,EAAAsB,QAAA,0EACduf,EAAA,IAAAtB,EAAArb,iBAAAyB,EAAAmb,QAAA,CACFrb,eAAA,mBACAsb,OAAA,mBACAjb,6BAAA,yBAGAoP,EAAA,KACA8L,EAAA,gDAGIA,IAEA9L,EA7GhB,ymBA8GsB+L,EAAAJ,EAAAtc,uBAAA2Q,GACAgM,EAAA,IAAAlP,EAAAlJ,eAAAmY,GACNjP,EAAAlJ,eAAAK,SAAA+X,eAIA,gBADAhc,QAAAC,IAAA,0CACA,CAAA,EAAAnF,KAAAmhB,MAAA,oBAAA7d,EAAAC,oBAGF,IAAA2R,GAAA8L,EAAA,EAAA,MAAA,CAAA,EAAA,oCAGVxB,EAAAnf,UAAA8gB,MAAA,SAAAC,GACI,OAAA,IAAA9f,QAAA,SAAAC,GAAA,OAAA8f,WAAA9f,EAAA6f,MAIJ5B,EAAAnf,UAAAsf,WAAA,WACI,IAAA2B,EAAA9hB,GAAAigB,KAAA8B,0BACAC,EAAAhiB,GAAAigB,KAAAgC,eAYAC,EAAA,WACIliB,GAAAmiB,OAAA7gB,SAAA8gB,WAAA,EACApiB,GAAAmiB,OAAA7gB,SAAA+gB,UAAA,GAGJC,EAAAR,EAAAS,MAAAT,EAAAU,OACAC,EAAAT,EAAAO,MAAAP,EAAAQ,OACAF,EAAA,EAEIG,EAAA,EACIA,EAAAH,EACIJ,KApBRliB,GAAAmiB,OAAA7gB,SAAA8gB,WAAA,EACApiB,GAAAmiB,OAAA7gB,SAAA+gB,UAAA,GAwBIH,IAIJO,EAAA,EACIA,EAAAH,EACIJ,KA1BRliB,GAAAmiB,OAAA7gB,SAAA8gB,WAAA,EACApiB,GAAAmiB,OAAA7gB,SAAA+gB,UAAA,GA8BIH,KApKKxgB,EAAA,CADpBxB,GACoB8f,GAArB,CAAAhgB,GAAA2B,YAAqBC,EAAAP,QAAA2e,y2CCvBf,IAAAjgB,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNuiB,EAAA,SAAAriB,GAAA,SAAAqiB,IAAA,IAAApiB,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGWF,EAAAqiB,YAAA,KAGAriB,EAAAsS,WAAA,KAGAtS,EAAAkd,YAAA,OAeX,OAxB6C5c,EAAA8hB,EAAAriB,GAWzCqiB,EAAA7hB,UAAAyD,KAAA,WACI9D,KAAAuM,KAAAC,QAAA,GAGJ0V,EAAA7hB,UAAAoM,KAAA,WACIzM,KAAAuM,KAAAC,QAAA,GAGJ0V,EAAA7hB,UAAA+C,KAAA,SAAAgf,EAAAjc,EAAAiO,GACIpU,KAAAmiB,YAAAnhB,OAAAohB,EAAAnX,WACAjL,KAAAoS,WAAApR,OAAAmF,EACAnG,KAAAgd,YAAAhc,OAAAoT,EAAAnJ,YAnBJ/J,EAAA,CADCvB,EAAAH,GAAAkB,QAC0CwhB,EAAA7hB,UAAA,mBAAA,GAG3Ca,EAAA,CADCvB,EAAAH,GAAAkB,QACyCwhB,EAAA7hB,UAAA,kBAAA,GAG1Ca,EAAA,CADCvB,EAAAH,GAAAkB,QAC0CwhB,EAAA7hB,UAAA,mBAAA,GAT1Ba,EAAA,CADpBxB,GACoBwiB,GAArB,CAAA1iB,GAAA2B,WAAqBC,EAAAP,QAAAqhB,m3BCHrB,IAAA9a,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA0Y,EAAA1Y,EAAA,0BACA4a,EAAA5a,EAAA,eAEA+iB,EAAA/iB,EAAA,yBAGA0S,EAAA1S,EAAA,qCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN4iB,GAHM/iB,EAAAI,SAGN,SAAAE,GAAA,SAAAyiB,IAAA,IAAAxiB,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAyiB,QAAA,KAEAziB,EAAA0iB,WAAA,KACA1iB,EAAA2iB,UAAA,KAEA3iB,EAAA4iB,QAAA,KACA5iB,EAAA6iB,aAAA,KACA7iB,EAAA8iB,eAAA,KACA9iB,EAAA+iB,gBAAA,KAGA/iB,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,KAEA1d,EAAA+Y,QAAA,OAkJJ,OApK8CzY,EAAAkiB,EAAAziB,GAsB1CyiB,EAAAjiB,UAAAC,OAAA,WACIN,KAAA6Y,QAAArZ,GAAAmb,KAAA,gCAAA3a,KAAAuM,MACAvM,KAAAuiB,QAAA/iB,GAAAmb,KAAA,4BAAA3a,KAAAuM,MAAA9L,aAAA4hB,EAAAxhB,SACAb,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAEAvM,KAAAyiB,UAAAjjB,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAAwiB,WAAAhjB,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAA0iB,QAAAljB,GAAAmb,KAAA,UAAA3a,KAAAuM,MACAvM,KAAA2iB,aAAAnjB,GAAAmb,KAAA,QAAA3a,KAAA0iB,SACA1iB,KAAA6iB,gBAAArjB,GAAAmb,KAAA,YAAA3a,KAAA2iB,cAGA3iB,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,MAEAA,KAAAyiB,UAAA7P,GAAA,QAAA5S,KAAA8iB,cAAA9iB,MACAA,KAAAwiB,WAAA5P,GAAA,QAAA5S,KAAA+iB,eAAA/iB,MACAA,KAAA2iB,aAAA/P,GAAA,QAAA5S,KAAAgjB,oBAAAhjB,MACAA,KAAA6iB,gBAAAjQ,GAAA,QAAA5S,KAAAgjB,oBAAAhjB,MAEAA,KAAAuiB,QAAAhW,KAAAC,QAAA,GAGJ8V,EAAAjiB,UAAAyS,UAAA,WACI9S,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,MAEAA,KAAAyiB,UAAAhJ,IAAA,QAAAzZ,KAAA8iB,cAAA9iB,MACAA,KAAAwiB,WAAA/I,IAAA,QAAAzZ,KAAA+iB,eAAA/iB,MACAA,KAAA2iB,aAAAlJ,IAAA,QAAAzZ,KAAAgjB,oBAAAhjB,MACAA,KAAA6iB,gBAAApJ,IAAA,QAAAzZ,KAAAgjB,oBAAAhjB,OAGJsiB,EAAAjiB,UAAAG,SAAA,iBACIR,KAAA0iB,QAAAlW,QAAA,EAEA,IAAA+V,EAAAviB,KAAAuiB,QACA1E,EAAA7d,KAAA6Y,QACAiF,EAAA9F,EAAAnX,QAAAC,SAEA,QAAAvB,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA8K,iBAAAtG,KAAA,SAAAa,GAGI,GAAAA,EAAAqe,cAAA,CACI,IAAAC,EAAAte,EAAAqe,cACAV,EAAAnf,KAAA8f,EAAAC,SAAA,IAAAD,EAAA3E,SAAA2E,EAAA9X,QACAmX,EAAAhW,KAAAC,QAAA,EACA,IAAAuR,EAAAnZ,EAAAwe,YACAvF,EAAAM,qBAEA,IAAA,IAAA5M,EAAA,EAAAA,EAAAwM,EAAAvM,OAAAD,MACI6M,EAAAL,EAAAxM,IACA8R,SAAAH,EAAAG,QAAAvF,EAAAxF,QAAA,uBAAAuF,GAAAC,EAAAxF,QAAA,mBAAAuF,IACApd,aAAA4hB,EAAAxhB,SACAuC,KAAAgb,EAAA+E,SAAA/E,EAAAG,SAAA,IAAAH,EAAAG,SAAA,GAAAH,EAAAI,WAAAJ,EAAAhT,aAQJ,IAHA2S,EAAAnZ,EAAAwe,YACAvF,EAAAM,qBAEA5M,EAAA,EAAAA,EAAAwM,EAAAvM,OAAAD,IAAA,CACI,IAAA6M,EAAAL,EAAAxM,GACAuM,EAAAxF,QAAA,mBAAAuF,GACApd,aAAA4hB,EAAAxhB,SACAuC,KAAAgb,EAAA+E,SAAA,IAAA/E,EAAAG,SAAAH,EAAAhT,WAKZpH,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,+BAAAA,MAKRqhB,EAAAjiB,UAAA+a,UAAA,aAEAkH,EAAAjiB,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJgH,EAAAjiB,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJ2D,EAAAjiB,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJoO,EAAAjiB,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,UAGJ0D,EAAAjiB,UAAAyiB,cAAA,WAAA7Q,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,QAEAuP,EAAAjiB,UAAA0iB,eAAA,WAII9Q,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAyK,UAIJ4D,EAAAjiB,UAAA2iB,oBAAA,WACI/Q,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA0iB,QAAAlW,QAAA,GAjKatL,EAAA,CADpBxB,GACoB4iB,GAArB,CAAApI,EAAArZ,UAAqBO,EAAAP,QAAAyhB,u9ECPrB,IAAAlb,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,qBACAwS,EAAAxS,EAAA,YACAyS,EAAAzS,EAAA,0BACA0S,EAAA1S,EAAA,qCACA2S,EAAA3S,EAAA,2BACA+H,EAAA/H,EAAA,0BACAgkB,EAAAhkB,EAAA,4BACAD,EAAAC,EAAA,kCACA0Y,EAAA1Y,EAAA,0BACA6a,EAAA7a,EAAA,yBACAikB,EAAAjkB,EAAA,2BACAuJ,EAAAvJ,EAAA,+BACAkkB,EAAAlkB,EAAA,WACAmkB,EAAAnkB,EAAA,gBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SASN+jB,EAAA,SAAA7jB,GAAA,SAAA6jB,IAAA,IAAA5jB,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAIWF,EAAA6jB,cAAA,KAGA7jB,EAAA8jB,cAAA,KAEP9jB,EAAA+jB,oBAAA,EAGA/jB,EAAAgkB,OAAA,KACAhkB,EAAAikB,SAAA,KAEAjkB,EAAAkkB,YAAA,KAEAlkB,EAAAmkB,IAAA,KAEAnkB,EAAAokB,MAAA,KAEApkB,EAAAqkB,YAAA,KACArkB,EAAAskB,aAAA,KAGAtkB,EAAAukB,kBAAA,KACAvkB,EAAAwkB,cAAA,KAEAxkB,EAAAykB,kBAAA,EAEAzkB,EAAA0kB,YAAA,EAEA1kB,EAAA2kB,WAAA,EAEA3kB,EAAA4kB,SAAA,EAEA5kB,EAAA6kB,QAAA,EAEA7kB,EAAA8kB,YAAA,EAEA9kB,EAAA+kB,kBAAA,EAGA/kB,EAAAglB,gBAAA,EAiBAhlB,EAAAilB,mBAAA,KACAjlB,EAAAklB,gBAAA,KACAllB,EAAAmlB,kBAAA,KAEAnlB,EAAAolB,8BAAA,KAEAplB,EAAAqlB,6BAAA,KACArlB,EAAAslB,0BAAA,KACAtlB,EAAAulB,6BAAA,KAGAvlB,EAAAwlB,0BAAA,KACAxlB,EAAAylB,uBAAA,KACAzlB,EAAA0lB,0BAAA,KAEA1lB,EAAA2lB,wBAAA,KACA3lB,EAAA4lB,mBAAA,KACA5lB,EAAA6lB,wBAAA,KACA7lB,EAAA8lB,wBAAA,KACA9lB,EAAA+lB,wBAAA,KACA/lB,EAAAgmB,wBAAA,KACAhmB,EAAAimB,wBAAA,KAEAjmB,EAAAkmB,6BAAA,KACAlmB,EAAAmmB,6BAAA,KACAnmB,EAAAomB,6BAAA,KAGApmB,EAAAqmB,0BAAA,KACArmB,EAAAsmB,uBAAA,KACAtmB,EAAAumB,0BAAA,KAEAvmB,EAAAwmB,wBAAA,KACAxmB,EAAAymB,wBAAA,KACAzmB,EAAA0mB,wBAAA,KACA1mB,EAAA2mB,wBAAA,KACA3mB,EAAA4mB,wBAAA,KACA5mB,EAAA6mB,wBAAA,KAEA7mB,EAAA8mB,6BAAA,KACA9mB,EAAA+mB,6BAAA,KACA/mB,EAAAgnB,6BAAA,KAIAhnB,EAAAinB,mBAAA,KACAjnB,EAAAknB,gBAAA,KAEAlnB,EAAAmnB,QAAA,KACAnnB,EAAAonB,iBAAA,KAEApnB,EAAAqnB,uBAAA,EACArnB,EAAAsnB,2BAAA,EAEAtnB,EAAAunB,sBAAA,KACAvnB,EAAAwnB,6BAAA,KACAxnB,EAAAynB,kBAAA,KACAznB,EAAA0nB,kBAAA,KACA1nB,EAAA2nB,yBAAA,KACA3nB,EAAA4nB,yBAAA,KAEA5nB,EAAA6nB,gBAAA,EAkQA7nB,EAAA8nB,aAAA,OAgyCJ,OA3pDmCxnB,EAAAsjB,EAAA7jB,GA6C/B6jB,EAAArjB,UAAAwnB,uBAAA,iBACI,OAAA,GAAA,QAAAtoB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAAwoB,iBAGJrE,EAAArjB,UAAA2nB,oBAAA,iBACI,OAAA,GAAA,QAAAzoB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAA0oB,cAGJvE,EAAArjB,UAAA6nB,4BAAA,iBACI,OAAA,GAAA,QAAA3oB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAA4oB,sBAsEJzE,EAAArjB,UAAA+C,KAAA,WACIpD,KAAA2nB,gBAAA,EACA3nB,KAAA4kB,YAAA,EACA5kB,KAAA8kB,gBAAA,EACA9kB,KAAA8jB,OAAAtkB,GAAAmb,KAAA,SAAA3a,KAAAuM,MACAvM,KAAA+jB,SAAAvkB,GAAAmb,KAAA,YAAA3a,KAAAuM,MACAvM,KAAAmkB,YAAA3kB,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAAqkB,kBAAA7kB,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAskB,cAAA9kB,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAikB,IAAAzkB,GAAAmb,KAAA,WAAA3a,KAAAuM,MACAvM,KAAAkkB,MAAA1kB,GAAAmb,KAAA,QAAA3a,KAAAuM,MAEAvM,KAAA+mB,mBAAAvnB,GAAAmb,KAAA,qBAAA3a,KAAAuM,MACAvM,KAAAgnB,gBAAAxnB,GAAAmb,KAAA,kBAAA3a,KAAAuM,MAEAvM,KAAAgkB,YAAAxkB,GAAAmb,KAAA,cAAA3a,KAAAuM,MAEAvM,KAAAokB,aAAA5kB,GAAAmb,KAAA,eAAA3a,KAAAuM,MAEAvM,KAAAskB,cAAA7jB,aAAAjB,GAAAkB,OAAAM,OAAA,GAAAqG,EAAAxG,QAAAC,SAAAuV,SAEArW,KAAAqnB,sBAAA7nB,GAAAmb,KAAA,qBAAA3a,KAAAuM,MACAvM,KAAAsnB,6BAAA9nB,GAAAmb,KAAA,+BAAA3a,KAAAuM,MAIAvM,KAAA+kB,mBAAAvlB,GAAAmb,KAAA,gBAAA3a,KAAA8jB,QACA9jB,KAAAilB,kBAAAzlB,GAAAmb,KAAA,aAAA3a,KAAA8jB,QACA9jB,KAAAglB,gBAAAxlB,GAAAmb,KAAA,aAAA3a,KAAA8jB,QAEA9jB,KAAAklB,8BAAA1lB,GAAAmb,KAAA,aAAA3a,KAAA+kB,oBAEA/kB,KAAAmlB,6BAAA3lB,GAAAmb,KAAA,eAAA3a,KAAA+kB,oBAAAtkB,aAAAjB,GAAAkB,OACAV,KAAAolB,0BAAA5lB,GAAAmb,KAAA,eAAA3a,KAAAglB,iBAAAvkB,aAAAjB,GAAAkB,OACAV,KAAAqlB,6BAAA7lB,GAAAmb,KAAA,eAAA3a,KAAAilB,mBAAAxkB,aAAAjB,GAAAkB,OAGAV,KAAAslB,0BAAA9lB,GAAAmb,KAAA,4BAAA3a,KAAAuM,MACAvM,KAAAulB,uBAAA/lB,GAAAmb,KAAA,yBAAA3a,KAAAuM,MACAvM,KAAAwlB,0BAAAhmB,GAAAmb,KAAA,4BAAA3a,KAAAuM,MAEAvM,KAAAylB,wBAAAjmB,GAAAmb,KAAA,0BAAA3a,KAAAslB,2BACAtlB,KAAA0lB,mBAAAlmB,GAAAmb,KAAA,uBAAA3a,KAAAslB,2BACAtlB,KAAA2lB,wBAAAnmB,GAAAmb,KAAA,kBAAA3a,KAAAslB,2BACAtlB,KAAAgmB,6BAAAxmB,GAAAmb,KAAA,yBAAA3a,KAAAslB,2BAAA7kB,aAAAjB,GAAAkB,OAEAV,KAAA4lB,wBAAApmB,GAAAmb,KAAA,0BAAA3a,KAAAulB,wBACAvlB,KAAA6lB,wBAAArmB,GAAAmb,KAAA,kBAAA3a,KAAAulB,wBACAvlB,KAAAimB,6BAAAzmB,GAAAmb,KAAA,yBAAA3a,KAAAulB,wBAAA9kB,aAAAjB,GAAAkB,OAEAV,KAAA8lB,wBAAAtmB,GAAAmb,KAAA,0BAAA3a,KAAAwlB,2BACAxlB,KAAA+lB,wBAAAvmB,GAAAmb,KAAA,kBAAA3a,KAAAwlB,2BACAxlB,KAAAkmB,6BAAA1mB,GAAAmb,KAAA,yBAAA3a,KAAAwlB,2BAAA/kB,aAAAjB,GAAAkB,OAGAV,KAAAmmB,0BAAA3mB,GAAAmb,KAAA,4BAAA3a,KAAAuM,MACAvM,KAAAomB,uBAAA5mB,GAAAmb,KAAA,yBAAA3a,KAAAuM,MACAvM,KAAAqmB,0BAAA7mB,GAAAmb,KAAA,4BAAA3a,KAAAuM,MAEAvM,KAAAsmB,wBAAA9mB,GAAAmb,KAAA,+BAAA3a,KAAAmmB,2BACAnmB,KAAAumB,wBAAA/mB,GAAAmb,KAAA,8BAAA3a,KAAAmmB,2BACAnmB,KAAA4mB,6BAAApnB,GAAAmb,KAAA,yBAAA3a,KAAAmmB,2BAAA1lB,aAAAjB,GAAAkB,OAEAV,KAAAwmB,wBAAAhnB,GAAAmb,KAAA,+BAAA3a,KAAAomB,wBACApmB,KAAAymB,wBAAAjnB,GAAAmb,KAAA,8BAAA3a,KAAAomB,wBACApmB,KAAA6mB,6BAAArnB,GAAAmb,KAAA,yBAAA3a,KAAAomB,wBAAA3lB,aAAAjB,GAAAkB,OAEAV,KAAA0mB,wBAAAlnB,GAAAmb,KAAA,+BAAA3a,KAAAqmB,2BACArmB,KAAA2mB,wBAAAnnB,GAAAmb,KAAA,8BAAA3a,KAAAqmB,2BACArmB,KAAA8mB,6BAAAtnB,GAAAmb,KAAA,yBAAA3a,KAAAqmB,2BAAA5lB,aAAAjB,GAAAkB,OAGAV,KAAAunB,kBAAA/nB,GAAAmb,KAAA,+BAAA3a,KAAAqnB,uBACArnB,KAAAwnB,kBAAAhoB,GAAAmb,KAAA,kBAAA3a,KAAAqnB,uBAEArnB,KAAAynB,yBAAAjoB,GAAAmb,KAAA,+BAAA3a,KAAAsnB,8BACAtnB,KAAA0nB,yBAAAloB,GAAAmb,KAAA,kBAAA3a,KAAAsnB,8BAEAtnB,KAAAinB,QAAAznB,GAAAmb,KAAA,mBAAA3a,KAAAuM,MACAvM,KAAAknB,iBAAA1nB,GAAAmb,KAAA,gCAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OAEAV,KAAAooB,iBACApoB,KAAAqoB,sBACAroB,KAAAsoB,iBAAA,GAEAtoB,KAAAuoB,UAAA,GACAvoB,KAAAwoB,UAAA,GAEAxoB,KAAAyoB,gBACAzoB,KAAA0oB,oBAIJhF,EAAArjB,UAAA+nB,eAAA,WACI,IAAA,IAAA7W,EAAA,EAAAA,EAAAoX,GAAApX,IAAA,CACI,IACAqX,EADA5Q,EAAAnX,QAAAC,SAAAwX,QAAA,QAAAtY,KAAAgkB,aACAvjB,aAAA+iB,EAAA3iB,SACA6N,EAAAma,KAAAC,MAAAvX,EAnOZ,GAoOY5C,EAAA4C,EApOZ,EAqOYqX,EAAAxlB,KAAAsL,EAAAC,EAAA4C,GAGJ,GAAAlK,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OAAAtM,EAAAxG,QAAAC,SAAAwV,YAAA,CACU,IAAA/W,EAAA8H,EAAAxG,QAAAC,SAAAwV,YAAAyS,EAAAxpB,EAAAwpB,KAAA3U,EAAA7U,EAAA6U,MAAA4U,EAAAzpB,EAAAypB,YAAAlE,EAAAvlB,EAAAulB,eACN,IAAAvT,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,KAEIqX,EADA5oB,KAAAgkB,YAAAiF,SAAA1X,GACA9Q,aAAA+iB,EAAA3iB,UACAqN,WAAA6a,EAAAxX,IAEJlK,EAAAxG,QAAAC,SAAAsT,MAAAA,EACApU,KAAA4kB,YAAAoE,EACAhpB,KAAA8kB,eAAAA,EAEJ9kB,KAAAqkB,kBAAA5jB,aAAAjB,GAAAkB,OAAAM,OAAA,GAAAqG,EAAAxG,QAAAC,SAAAsT,OAIJsP,EAAArjB,UAAA6oB,uBAAA,WAAA,IAAAppB,EAAAE,KAEIA,KAAA4jB,cAAAlH,oBAEA,IAAS,IAAAyM,EAAA,SAAA5X,GACL,IACA6X,EADAC,EAAAjF,aAAA6E,SAAA1X,GAAA9Q,aAAAgjB,EAAA5iB,SACA6M,MAIA4b,EAAAtR,EAAAnX,QAAAC,SAAAwX,QAAA,YAAA+Q,EAAAzF,eACA0F,EAAA1W,GAAA,QAAA,WAAA9S,EAAAypB,yBAAAhY,IAAA8X,GACA,IAAAG,EAAAxR,EAAAnX,QAAAC,SAAAwX,QAAA,aAAA8Q,GACAI,EAAArR,OAAAmR,EACA,IAAAG,EAAAD,EAAA/oB,aAAAgjB,EAAA5iB,SACA4oB,EAAArmB,KAAAmO,EAAA/R,GAAAiO,GAAA,EAAA,IACAgc,EAAAvb,WAAA9G,EAAA2G,mBAAAC,cAZJuD,EAAA,EAAAA,EAAAvR,KAAAokB,aAAAsF,cAAAnY,IAAS4X,EAAA5X,IAiBbmS,EAAArjB,UAAAgoB,oBAAA,WAAA,IAAAvoB,EAAAE,KACIA,KAAA2jB,cAAAjH,oBAEA,IAAS,IAAAiN,EAAA,SAAApY,GACL,IAAA7D,EAAA6D,EACA+X,EAAAtR,EAAAnX,QAAAC,SAAAwX,QAAA,YAAAsR,EAAAjG,eACA2F,EAAA1W,GAAA,QAAA,WAAA9S,EAAA+pB,sBAAAnc,IAAAkc,GACA,IAAAJ,EAAAxR,EAAAnX,QAAAC,SAAAwX,QAAA,aAAA/G,GACAiY,EAAArR,OAAAmR,EACA,IAAAG,EAAAD,EAAA/oB,aAAAgjB,EAAA5iB,SACA4oB,EAAArmB,KAAAmO,EAAA/R,GAAAiO,GAAA,EAAA,IACAgc,EAAAvb,WAAA9G,EAAA2G,mBAAAC,cARJuD,EAAA,EAAAA,EA7QR,GA6QQA,IAASoY,EAAApY,IAabmS,EAAArjB,UAAAkpB,yBAAA,SAAA7b,GACI1N,KAAAmnB,sBAAAzZ,EACA1N,KAAAonB,2BAAA,EACApnB,KAAAgnB,gBAAAxa,QAAA,EACAxM,KAAA+mB,mBAAAva,QAAA,GAGJkX,EAAArjB,UAAAwpB,sBAAA,SAAAnc,GACI1N,KAAAonB,0BAAA1Z,EAMA,IAHA,IAAAoc,EAAA,GACAC,EAAA,GAEAxY,EAAA,EAAAA,EAAAvR,KAAAokB,aAAAsF,cAAAnY,IAAA,CACI,IAAAyY,EAAAhqB,KAAAokB,aAAA6E,SAAA1X,GAAA9Q,aAAAgjB,EAAA5iB,SACA0Q,GAAAvR,KAAAmnB,uBACI2C,EAAAtQ,KAAA9L,GACAqc,EAAAvQ,MAAA,KAGAsQ,EAAAtQ,KAAAwQ,EAAAtc,OACAqc,EAAAvQ,KAAAwQ,EAAAnc,WAMR,IAFA7N,KAAAokB,aAAA1H,oBAEAnL,EAAA,EAAAA,EAAAuY,EAAAtY,OAAAD,IAAA,CACI,IAAA6X,EAAAU,EAAAvY,GAGAiY,GAFAO,EAAAxY,GAEAyG,EAAAnX,QAAAC,SAAAwX,QAAA,aAAA8Q,EAAAppB,KAAAokB,eACA6F,EAAAjqB,KAAAmkB,YAAA8E,SAAA1X,GAEAkY,EAAAD,EAAA/oB,aAAAgjB,EAAA5iB,SACA4oB,EAAArmB,KAAAgmB,EAAA5pB,GAAAiO,GAAAwc,EAAAvb,EAAAub,EAAAtb,IACA8a,EAAAvb,WAAA9G,EAAA2G,mBAAAC,MAMJhO,KAAA+mB,mBAAAva,QAAA,EACAxM,KAAAgnB,gBAAAxa,QAAA,EAEAxM,KAAAkqB,oBAGJxG,EAAArjB,UAAAioB,gBAAA,SAAA6B,GAAA,IAAArqB,EAAAE,UAAgB,IAAAmqB,IAAAA,GAAA,GACZnqB,KAAAokB,aAAA1H,oBACA1c,KAAAukB,kBAAA,EACA,IAAA,IAAAhT,EAAA,EAAAA,EA/UR,EA+UQA,IAEI,GAAA4Y,GAAA9iB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OAAAtM,EAAAxG,QAAAC,SAAAwV,YAAA,CACY,IAAA8T,EAAA/iB,EAAAxG,QAAAC,SAAAwV,YAAA8T,MACR,KAAAA,EAAA7Y,IAAA,GAOI,SANA,IAAA7D,EAAA0c,EAAA7Y,GACAiY,EAAAxR,EAAAnX,QAAAC,SAAAwX,QAAA,aAAA5K,EAAA1N,KAAAokB,cACA6F,EAAAjqB,KAAAmkB,YAAA8E,SAAA1X,GACAiY,EAAA/oB,aAAAgjB,EAAA5iB,SAAAuC,KAAAsK,EAAAlO,GAAAiO,GAAAwc,EAAAvb,EAAAub,EAAAtb,IACA6a,EAAA7c,MAAA,OAKJe,EAAAoE,EAAAuY,OAAA,EA5VhB,IA8VgBb,EAAAxR,EAAAnX,QAAAC,SAAAwX,QAAA,aAAA5K,EAAA1N,KAAAokB,cACA6F,EAAAjqB,KAAAmkB,YAAA8E,SAAA1X,GACAiY,EAAA/oB,aAAAgjB,EAAA5iB,SAAAuC,KAAAsK,EAAAlO,GAAAiO,GAAAwc,EAAAvb,EAAAub,EAAAtb,IACA6a,EAAA7c,MAAA,EAIR3M,KAAAkqB,mBAEA,IAAA,IAAAI,EAAA,EAAAA,EAAAtqB,KAAAokB,aAAA6E,SAAAzX,OAAA8Y,IAAA,CACI,IACAC,GADAf,EAAAxpB,KAAAokB,aAAA6E,SAAAqB,IACA7pB,aAAAgjB,EAAA5iB,SACArB,GAAAwN,MAAAwc,GAAA9N,GAAA,GAAA,CAAA/O,MAAA4d,EAAA5d,QAAAM,QAEJjN,KAAAyc,aAAA,WACI3c,EAAAykB,kBAAA,GACJ,KAGJb,EAAArjB,UAAAkoB,SAAA,SAAA9Z,QAAS,IAAAA,IAAAA,GAAA,GACLA,GACIzO,KAAAuM,KAAAqG,GAAA,aAAA5S,KAAAwqB,aAAAxqB,MACAA,KAAAuM,KAAAqG,GAAA,YAAA5S,KAAAyqB,YAAAzqB,MACAA,KAAAuM,KAAAqG,GAAA,WAAA5S,KAAA0qB,YAAA1qB,MACAA,KAAAuM,KAAAqG,GAAA,cAAA5S,KAAA0qB,YAAA1qB,QAEAA,KAAAuM,KAAAkN,IAAA,aAAAzZ,KAAAwqB,aAAAxqB,MACAA,KAAAuM,KAAAkN,IAAA,YAAAzZ,KAAAyqB,YAAAzqB,MACAA,KAAAuM,KAAAkN,IAAA,WAAAzZ,KAAA0qB,YAAA1qB,MACAA,KAAAuM,KAAAkN,IAAA,cAAAzZ,KAAA0qB,YAAA1qB,QAMR0jB,EAAArjB,UAAAsqB,uBAAA,WACI,MAAA3qB,KAAA4nB,aACI5nB,KAAA4nB,aAAApoB,GAAAwN,MAAAhN,KAAA+kB,oBACCrJ,GAAA,EAAA,CAAA/O,MAAA,OACA+O,GAAA,EAAA,CAAA/O,MAAA,IACAie,QACAC,gBACA5d,QAGDjN,KAAA4nB,aAAA3a,SAIRyW,EAAArjB,UAAAyqB,sBAAA,WACI9qB,KAAA4nB,cACI5nB,KAAA4nB,aAAAxf,OAEJpI,KAAA+kB,qBACI/kB,KAAA+kB,mBAAApY,MAAA,IAMR+W,EAAArjB,UAAAmoB,SAAA,SAAA/Z,QAAS,IAAAA,IAAAA,GAAA,GACLA,GAEIzO,KAAA+kB,mBAAAnS,GAAA,QAAA5S,KAAA+qB,wBAAA/qB,MACAA,KAAAglB,gBAAApS,GAAA,QAAA5S,KAAAgrB,qBAAAhrB,MACAA,KAAAilB,kBAAArS,GAAA,QAAA5S,KAAAirB,uBAAAjrB,MAGAA,KAAA0lB,mBAAA9S,GAAA,QAAA5S,KAAAkrB,iCAAAlrB,MAEAA,KAAAylB,wBAAA7S,GAAA,QAAA5S,KAAAmrB,oCAAAnrB,MACAA,KAAA4lB,wBAAAhT,GAAA,QAAA5S,KAAAorB,iCAAAprB,MACAA,KAAA8lB,wBAAAlT,GAAA,QAAA5S,KAAAqrB,mCAAArrB,MAEAA,KAAA2lB,wBAAA/S,GAAA,QAAA5S,KAAAsrB,gBAAAtrB,MACAA,KAAA6lB,wBAAAjT,GAAA,QAAA5S,KAAAurB,gBAAAvrB,MACAA,KAAA+lB,wBAAAnT,GAAA,QAAA5S,KAAAwrB,gBAAAxrB,MAGAA,KAAAsmB,wBAAA1T,GAAA,QAAA5S,KAAAyrB,oCAAAzrB,MACAA,KAAAwmB,wBAAA5T,GAAA,QAAA5S,KAAA0rB,iCAAA1rB,MACAA,KAAA0mB,wBAAA9T,GAAA,QAAA5S,KAAA2rB,mCAAA3rB,MAEAA,KAAAumB,wBAAA3T,GAAA,QAAA5S,KAAA4rB,gBAAA5rB,MACAA,KAAAymB,wBAAA7T,GAAA,QAAA5S,KAAA6rB,gBAAA7rB,MACAA,KAAA2mB,wBAAA/T,GAAA,QAAA5S,KAAA8rB,gBAAA9rB,MAIAA,KAAAinB,QAAArU,GAAA,QAAA5S,KAAA+rB,SAAA/rB,MAEAA,KAAAunB,kBAAA3U,GAAA,QAAA5S,KAAAgsB,uBAAAhsB,MACAA,KAAAwnB,kBAAA5U,GAAA,QAAA5S,KAAAisB,qBAAAjsB,MACAA,KAAAynB,yBAAA7U,GAAA,QAAA5S,KAAAksB,8BAAAlsB,MACAA,KAAA0nB,yBAAA9U,GAAA,QAAA5S,KAAAisB,qBAAAjsB,QAKAA,KAAA+kB,mBAAAtL,IAAA,QAAAzZ,KAAA+qB,wBAAA/qB,MACAA,KAAAglB,gBAAAvL,IAAA,QAAAzZ,KAAAgrB,qBAAAhrB,MACAA,KAAAilB,kBAAAxL,IAAA,QAAAzZ,KAAAirB,uBAAAjrB,MAGAA,KAAA0lB,mBAAAjM,IAAA,QAAAzZ,KAAAkrB,iCAAAlrB,MAEAA,KAAAylB,wBAAAhM,IAAA,QAAAzZ,KAAAmrB,oCAAAnrB,MACAA,KAAA4lB,wBAAAnM,IAAA,QAAAzZ,KAAAorB,iCAAAprB,MACAA,KAAA8lB,wBAAArM,IAAA,QAAAzZ,KAAAqrB,mCAAArrB,MAEAA,KAAA2lB,wBAAAlM,IAAA,QAAAzZ,KAAAsrB,gBAAAtrB,MACAA,KAAA6lB,wBAAApM,IAAA,QAAAzZ,KAAAurB,gBAAAvrB,MACAA,KAAA+lB,wBAAAtM,IAAA,QAAAzZ,KAAAwrB,gBAAAxrB,MAGAA,KAAAsmB,wBAAA7M,IAAA,QAAAzZ,KAAAyrB,oCAAAzrB,MACAA,KAAAwmB,wBAAA/M,IAAA,QAAAzZ,KAAA0rB,iCAAA1rB,MACAA,KAAA0mB,wBAAAjN,IAAA,QAAAzZ,KAAA2rB,mCAAA3rB,MAEAA,KAAAumB,wBAAA9M,IAAA,QAAAzZ,KAAA4rB,gBAAA5rB,MACAA,KAAAymB,wBAAAhN,IAAA,QAAAzZ,KAAA6rB,gBAAA7rB,MACAA,KAAA2mB,wBAAAlN,IAAA,QAAAzZ,KAAA8rB,gBAAA9rB,MAIAA,KAAAinB,QAAAxN,IAAA,QAAAzZ,KAAA+rB,SAAA/rB,MAEAA,KAAAunB,kBAAA9N,IAAA,QAAAzZ,KAAAgsB,uBAAAhsB,MACAA,KAAAwnB,kBAAA/N,IAAA,QAAAzZ,KAAAisB,qBAAAjsB,MACAA,KAAAynB,yBAAAhO,IAAA,QAAAzZ,KAAAksB,8BAAAlsB,MACAA,KAAA0nB,yBAAAjO,IAAA,QAAAzZ,KAAAisB,qBAAAjsB,QAKR0jB,EAAArjB,UAAAmqB,aAAA,SAAApa,GAEI,GADApQ,KAAAwkB,YAAA,IACAnd,EAAAxG,QAAAC,SAAA+D,QAAAuC,EAAAqO,iBAAAC,UAAA1V,KAAAukB,kBACAvkB,KAAA2nB,gBAAA,CAGA3nB,KAAA2nB,gBAAA,EACA,IAAAwE,EAAA/b,EAAAgc,cAEA,GAAApsB,KAAA2kB,OAAA,CAGI,IAFA,IAAA0H,EAAArsB,KAAAgkB,YAAA5U,qBAAA+c,GACAnC,EAAA,KACAzY,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IAAA2M,EAAAle,KAAAgkB,YAAAiF,SAAA1X,GAEA,GADA2M,EAAAoO,iBACAC,SAAAF,GAAA,CACIrC,EAAA9L,EACA,OAGR,GAAA8L,EAAA,CACI,IAAApB,EAAAoB,EAAAvpB,aAAA+iB,EAAA3iB,SACA2rB,EAAA3D,KAAAC,MAAAF,EAAAlb,MA7fhB,GA8fgBA,EAAAkb,EAAAlb,MA9fhB,EA+fgB+e,EAAA,CAAA7D,EAAAlb,OAEAgf,EAAAhf,EAAA,EACAgf,GAAA,GACID,EAAAjT,KAngBpB,EAmgBoBgT,EAAAE,GAGJ,IAAAC,EAAAjf,EAAA,EACAif,EAvgBhB,GAwgBoBF,EAAAjT,KAxgBpB,EAwgBoBgT,EAAAG,GAGJ,IAAAC,EAAAJ,EAAA,EACA,GAAAI,EA5gBhB,EA4gBgB,CACIH,EAAAjT,KA7gBpB,EA6gBoBoT,EAAAlf,GACA,IAAAmf,EAAAnf,EAAA,EACAmf,GAAA,GACIJ,EAAAjT,KAhhBxB,EAghBwBoT,EAAAC,GAEJ,IAAAC,EAAApf,EAAA,EACAof,EAnhBpB,GAohBwBL,EAAAjT,KAphBxB,EAohBwBoT,EAAAE,GAIR,IAAAC,EAAAP,EAAA,EACA,GAAAO,GAAA,EAAA,CACIN,EAAAjT,KA1hBpB,EA0hBoBuT,EAAArf,GACA,IAAAsf,EAAAtf,EAAA,EACAsf,GAAA,GACIP,EAAAjT,KA7hBxB,EA6hBwBuT,EAAAC,GAEJ,IAAAC,EAAAvf,EAAA,EACAuf,EAhiBpB,GAiiBwBR,EAAAjT,KAjiBxB,EAiiBwBuT,EAAAE,GAOR,IAHAhb,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAAilB,YACArkB,EAAAK,eAAAC,SAAAgkB,oBAEA5b,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IAAA6b,EAAAptB,KAAAgkB,YAAAiF,SAAA1X,GACA8b,EAAAD,EAAA3sB,aAAA+iB,EAAA3iB,SACA4rB,EAAAa,SAAAD,EAAA3f,SACI2f,EAAAxoB,QAAAuC,EAAAkI,kBAAAtB,MAAgDhO,KAAAutB,WAChDF,EAAA7e,WAAA,GACA6e,EAAAnf,WAAA9G,EAAAkI,kBAAAnB,MACAmV,EAAAziB,QAAAC,SAAAiH,KAAA,aAAA/H,KAAAikB,IAAA,CAAAtW,IAAAyf,EAAAI,iBAGRxtB,KAAA2kB,QAAA,EACA3kB,KAAA+jB,SAAAvX,QAAA,OAKR,CAAA,IAAAihB,EAAAztB,KAAAokB,aAAAhV,qBAAA+c,GACA,IAAA5a,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CACI,IAAAiY,EAAAxpB,KAAAokB,aAAA6E,SAAA1X,GACAgZ,EAAAf,EAAA/oB,aAAAgjB,EAAA5iB,SACA2oB,EAAA8C,iBACAC,SAAAkB,IAAAlD,EAAA1lB,QAAAuC,EAAA2G,mBAAAC,OACIiE,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAAylB,cACAnD,EAAA/b,WAAA,QAKZkV,EAAArjB,UAAAoqB,YAAA,SAAAra,GACI,IAAA,IAAAmB,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CACI,IACAgZ,EADAvqB,KAAAokB,aAAA6E,SAAA1X,GACA9Q,aAAAgjB,EAAA5iB,SACA,GAAA0pB,EAAA1c,SAAA,CACI,IAAA8f,EAAAvd,EAAAwd,WACArD,EAAAzb,QAAA6e,EAAAjf,EAAAif,EAAAhf,GAEA3O,KAAA6tB,gBAKZnK,EAAArjB,UAAAqqB,YAAA,WACI,IAAA,IAAAnZ,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CACI,IAAAiY,EAAAxpB,KAAAokB,aAAA6E,SAAA1X,GACAgZ,EAAAf,EAAA/oB,aAAAgjB,EAAA5iB,SACA0pB,EAAA1c,WACIoE,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA6lB,gBACAjlB,EAAAK,eAAAC,SAAA4kB,oBAEA/tB,KAAAwkB,YAAAxkB,KAAAguB,gBAIIxE,EAAA/Q,mBAEAzY,KAAAiuB,mBAEAjuB,KAAAkuB,yBAGA3D,EAAA/b,WAAA,IAKZxO,KAAAmuB,YAEAnuB,KAAAkqB,mBAEAlqB,KAAAouB,kBAEA/mB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OACI3T,KAAAquB,iBAGJruB,KAAA2nB,gBAAA,EAEAziB,QAAAC,IAAA2M,EAAAwc,YAEAxc,EAAAwc,YAIJ5K,EAAArjB,UAAA6tB,sBAAA,WACIluB,KAAA6kB,oBAEA7kB,KAAA6jB,oBASJH,EAAArjB,UAAAkuB,iBAAA,WACIvuB,KAAA6jB,oBAGC9R,EAAAoB,kBAAAhK,SAAAtF,oBAGL6f,EAAArjB,UAAA6qB,iCAAA,WAAA,IAAAprB,EAAAE,KACIA,KAAA4kB,aA5oBR,IAgpBQ7S,EAAAoB,kBAAAhK,SAAAiK,2BACCrP,KAAA,WAEGmB,QAAAC,IAAA,4BACArF,EAAAwrB,kBACAxrB,EAAA0uB,mBAEHxqB,MAAA,SAAA/C,GAEGiE,QAAAjE,MAAA,4BAAAA,GAEA8Q,EAAAoB,kBAAAhK,SAAAmK,6BACCvP,KAAA,WAEGmB,QAAAC,IAAA,4BACArF,EAAAwrB,kBACAxrB,EAAA0uB,mBAEHxqB,MAAA,SAAA/C,GAEGiE,QAAAjE,MAAA,8BAAAA,QAKZyiB,EAAArjB,UAAAouB,8BAAA,WAAA,IAAA3uB,EAAAE,KACI+R,EAAAoB,kBAAAhK,SAAAiK,2BACCrP,KAAA,WAEGmB,QAAAC,IAAA,4BACArF,EAAAyrB,kBACAzrB,EAAA4uB,aAAA,KAEH1qB,MAAA,SAAA/C,GAEGiE,QAAAjE,MAAA,4BAAAA,GACAnB,EAAA6uB,gBAKRjL,EAAArjB,UAAAwtB,WAAA,WAII,IAFA,IAAAe,EAAA,EACAC,EAAA,KACAtd,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CACI,IACAgZ,EADAvqB,KAAAokB,aAAA6E,SAAA1X,GACA9Q,aAAAgjB,EAAA5iB,SACA0pB,EAAA1c,WACI+gB,EAAArE,EAAA7c,MACAmhB,EAAAtE,EAAAtb,UAAAjP,KAAAgkB,cAIR,IAAAzS,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,KAEIqX,GADAoB,EAAAhqB,KAAAgkB,YAAAiF,SAAA1X,IACA9Q,aAAA+iB,EAAA3iB,UACAgE,QAAAuC,EAAAkI,kBAAAwf,KAA+ClG,EAAA1a,WAAA9G,EAAAkI,kBAAAnB,MAGnD,IAAAoD,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IAAAyY,EACApB,GADAoB,EAAAhqB,KAAAgkB,YAAAiF,SAAA1X,IACA9Q,aAAA+iB,EAAA3iB,SAEAkuB,EAAAjd,EAAAkd,YAAAhF,EAAAwD,cAAAqB,GACA,GAAAjG,EAAA/jB,QAAAuC,EAAAkI,kBAAAnB,MAAA4gB,EAAAE,GAAA,CAEI,IAAAC,EAAA,GACA,OAAAN,GACI,KAAA,EACIM,EAAA,CAAA,GACA,MACJ,KAAA,EACItG,EAAAla,EA5tBxB,GA4tBwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,EAAA,IAClD,MACJ,KAAA,EACItG,EAAAla,EAAAia,GAAAC,EAAAja,EA/tBxB,IA+tB0EugB,EAAA,CAAA,EA/tB1E,EA+tB0EvG,KAClD,MACJ,KAAA,EAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAAvG,EAnuBjG,EAmuBiGA,GAAAA,KACzE,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAtuB9E,EAsuB8EvG,GAAAA,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EA5uB9E,EA4uB8EvG,GAAAA,GAAAA,GAAAA,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EA/uBxB,IA+uB0EugB,EAAA,CAAA,EA/uB1E,EA+uB0EvG,GAAAA,KAClD,MACJ,KAAA,EACIC,EAAAla,EAlvBxB,GAkvBwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,EAAA,EAAA,IAClD,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAA,IAA+CugB,EAAA,CAAA,EAAAvG,EAAAA,KAC/C,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EA5vB9E,EA4vB8EvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EA/vBxB,GA+vBwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,IAClD,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAlwBxB,IAkwB0EugB,EAAA,CAAA,EAlwB1E,IAmwBwB,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EArwB9E,IAswBwB,MACJ,KAAA,GAEItG,EAAAla,EAAAia,GAAAC,EAAAja,EAzwBxB,GAywBwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EAzwB7F,IA0wBwB,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EA5wB9E,EA4wB8EvG,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAA,EAAAvG,EAhxBjG,IAixBwB,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EApxBxB,GAoxBwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EApxB7F,EAoxB6FA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EA1xB9E,EA0xB8EvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EA7xB9E,EA6xB8EvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAhyB9E,EAgyB8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EApyBxB,GAoyBwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EApyB7F,EAoyB6FvG,GAAAA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EA7yB9E,IA8yBwB,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAhzB9E,EAgzB8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAA,IAA+CugB,EAAA,CAAA,EAAAvG,EAAAA,EApzBvE,IAqzBwB,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAvzB9E,EAuzB8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAAvG,EA3zBjG,EA2zBiGA,KACzE,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EA/zBxB,GA+zBwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EA/zB7F,EA+zB6FA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,GAAAA,KAG9D3oB,KAAAmvB,aAAAD,EAAA3d,GACA,MAEAvR,KAAAwkB,YAAA,EAIRxkB,KAAAykB,WAAAzkB,KAAAovB,gBAIJ1L,EAAArjB,UAAA8uB,aAAA,SAAAE,EAAAC,GAGI,IAFA,IAAAC,EAAA,EACAC,EAAAxvB,KAAAgkB,YAAAiF,SACA1X,EAAA,EAAAA,EAAA8d,EAAA7d,OAAAD,KACI7D,EAAA4hB,EAAAD,EAAA9d,IACAoX,IACI6G,EAAA9hB,GACAjN,aAAA+iB,EAAA3iB,SACAgE,QAAAuC,EAAAkI,kBAAAnB,OAAgDohB,GAAA,GAGxD,GAAAA,GAAAF,EAAA7d,OAAA,CACI,IAAA,IAAA8Y,EAAA,EAAAA,EAAA+E,EAAA7d,OAAA8Y,IAAA,CACI,IAAA5c,GAAAA,EAAA4hB,EAAAD,EAAA/E,IACA3B,IACI6G,EAAA9hB,GACAjN,aAAA+iB,EAAA3iB,SACAqN,WAAA9G,EAAAkI,kBAAAwf,KAGR9uB,KAAAwkB,YAAA,OAEAxkB,KAAAwkB,YAAA,GAKRd,EAAArjB,UAAA2tB,aAAA,WAEI,IADA,IAAAyB,GAAA,EACAle,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IACAqX,EADA5oB,KAAAgkB,YAAAiF,SAAA1X,GACA9Q,aAAA+iB,EAAA3iB,SACA+nB,EAAA/jB,QAAAuC,EAAAkI,kBAAAwf,MACIlG,EAAA1a,WAAA9G,EAAAkI,kBAAAtB,MACAyhB,GAAA,EAEApoB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OACI3T,KAAAutB,YAKZ,OAAAkC,GAIJ/L,EAAArjB,UAAAktB,SAAA,WACIlmB,EAAAxG,QAAAC,SAAAsT,OAAA,EACApU,KAAAqkB,kBAAA5jB,aAAAjB,GAAAkB,OAAAM,OAAA,GAAAqG,EAAAxG,QAAAC,SAAAsT,MACA/M,EAAAxG,QAAAC,SAAAsT,MAAA/M,EAAAxG,QAAAC,SAAAuV,WACIhP,EAAAxG,QAAAC,SAAAuV,SAAAhP,EAAAxG,QAAAC,SAAAsT,MACA/M,EAAAxG,QAAAC,SAAAiW,SAKR2M,EAAArjB,UAAA6pB,iBAAA,WAII,IAFA,IAAAwF,GAAA,EAEAne,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CAKI,IAJA,IACAgZ,EADAvqB,KAAAokB,aAAA6E,SAAA1X,GACA9Q,aAAAgjB,EAAA5iB,SACA+tB,EAAArE,EAAA7c,MACAiiB,GAAA,EACArF,EAAA,EAAAA,EAAAtqB,KAAAgkB,YAAAiF,SAAAzX,OAAA8Y,IAAA,CACI,IACA1B,EADA5oB,KAAAgkB,YAAAiF,SAAAqB,GACA7pB,aAAA+iB,EAAA3iB,SACAquB,EAAA,GACA,OAAAN,GACI,KAAA,EACIM,EAAA,CAAA,GACA,MACJ,KAAA,EACItG,EAAAla,EAh6BxB,GAg6BwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,EAAA,IAClD,MACJ,KAAA,EACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAn6BxB,IAm6B0EugB,EAAA,CAAA,EAn6B1E,EAm6B0EvG,KAClD,MACJ,KAAA,EAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAAvG,EAv6BjG,EAu6BiGA,GAAAA,KACzE,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EA16B9E,EA06B8EvG,GAAAA,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAh7B9E,EAg7B8EvG,GAAAA,GAAAA,GAAAA,GAAAA,KACtD,MACJ,KAAA,EACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAn7BxB,IAm7B0EugB,EAAA,CAAA,EAn7B1E,EAm7B0EvG,GAAAA,KAClD,MACJ,KAAA,EACIC,EAAAla,EAt7BxB,GAs7BwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,EAAA,EAAA,IAClD,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAA,IAA+CugB,EAAA,CAAA,EAAAvG,EAAAA,KAC/C,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAh8B9E,EAg8B8EvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EAn8BxB,GAm8BwBka,EAAAja,EAAAga,IAAkDuG,EAAA,CAAA,EAAA,IAClD,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAt8BxB,IAs8B0EugB,EAAA,CAAA,EAt8B1E,IAu8BwB,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAz8B9E,IA08BwB,MACJ,KAAA,GAEItG,EAAAla,EAAAia,GAAAC,EAAAja,EA78BxB,GA68BwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EA78B7F,IA88BwB,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAh9B9E,EAg9B8EvG,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAA,EAAAvG,EAp9BjG,IAq9BwB,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAx9BxB,GAw9BwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EAx9B7F,EAw9B6FA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EA99B9E,EA89B8EvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAj+B9E,EAi+B8EvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAp+B9E,EAo+B8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAx+BxB,GAw+BwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAx+B7F,EAw+B6FvG,GAAAA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAj/B9E,IAk/BwB,MACJ,KAAA,GACItG,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAp/B9E,EAo/B8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAA,IAA+CugB,EAAA,CAAA,EAAAvG,EAAAA,EAx/BvE,IAy/BwB,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EA3/B9E,EA2/B8EvG,GAAAA,KACtD,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,GAAAC,EAAAja,EAAA,IAAyEugB,EAAA,CAAA,EAAAvG,EA//BjG,EA+/BiGA,KACzE,MACJ,KAAA,GAEIC,EAAAla,EAAAia,GAAAC,EAAAja,EAngCxB,GAmgCwBia,EAAAja,EAAA,IAAqEugB,EAAA,CAAA,EAAAvG,EAngC7F,EAmgC6FA,KACrE,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAA,EAAAvG,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,KACtD,MACJ,KAAA,GACIC,EAAAla,EAAAia,GAAAC,EAAAja,EAAAga,IAAsDuG,EAAA,CAAA,EAAA,EAAAvG,GAAAA,GAAAA,KAI9DuG,EAAA1d,QACIxR,KAAA4vB,oBAAAV,EAAA5E,KAAgDqF,GAAA,GAGxDA,EAAApF,EAAArc,WAAA9G,EAAA2G,mBAAAC,MAAAuc,EAAArc,WAAA9G,EAAA2G,mBAAAI,MAGAwhB,IACID,GAAA,GAIRA,EACI1vB,KAAA2qB,yBAGA3qB,KAAA8qB,yBAKRpH,EAAArjB,UAAAuvB,oBAAA,SAAAP,EAAAC,GAGI,IAFA,IAAAC,EAAA,EACAC,EAAAxvB,KAAAgkB,YAAAiF,SACA1X,EAAA,EAAAA,EAAA8d,EAAA7d,OAAAD,IAAA,CACI,IAAA7D,EAAA4hB,EAAAD,EAAA9d,GACA7D,EAAAib,IACI6G,EAAA9hB,GACAjN,aAAA+iB,EAAA3iB,SACAgE,QAAAuC,EAAAkI,kBAAAnB,OAAgDohB,GAAA,GAGxD,OAAAA,GAAAF,EAAA7d,QAOJkS,EAAArjB,UAAA4tB,iBAAA,WAEI,GADAjuB,KAAAokB,aAAA6E,SAAAzX,QACA,EAGI,IAFAxR,KAAAsoB,mBAEAtoB,KAAA6vB,oBACI7vB,KAAAsoB,mBAMZ5E,EAAArjB,UAAAwvB,iBAAA,WAEI,IADA,IAAAhrB,GAAA,EACA0M,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAGI,GAFAvR,KAAAokB,aAAA6E,SAAA1X,GACA9Q,aAAAgjB,EAAA5iB,SACAgE,QAAAuC,EAAA2G,mBAAAC,KAAA,CACInJ,GAAA,EACA,MAGR,OAAAA,GAIJ6e,EAAArjB,UAAA+uB,aAAA,WAGI,IAFA,IAAA3K,EAAA,EACA+K,EAAAxvB,KAAAgkB,YAAAiF,SACA1X,EAAA,EAAAA,EAAAie,EAAAhe,OAAAD,KAEIqX,EADA4G,EAAAje,GACA9Q,aAAA+iB,EAAA3iB,UACA0O,WAAA,EAGJ,IAAAgC,EAAA,EAAAA,EA1lCR,EA0lCQA,IAAA,CAEI,IADA,IAAAhC,GAAA,EACA+a,EAAA,EAAAA,EA5lCZ,EA4lCYA,KAEI1B,EADA4G,EA7lChB,EA6lCgBje,EAAA+Y,GACA7pB,aAAA+iB,EAAA3iB,UACAgE,QAAAuC,EAAAkI,kBAAAnB,OACIoB,GAAA,GAGR,GAAAA,EACI,IAAA+a,EAAA,EAAAA,EApmChB,EAomCgBA,KAEI1B,EADA4G,EArmCpB,EAqmCoBje,EAAA+Y,GACA7pB,aAAA+iB,EAAA3iB,UACA0O,WAAA,EAKZ,IAAAgC,EAAA,EAAAA,EA5mCR,EA4mCQA,IAAA,CAEI,IADAhC,GAAA,EACA+a,EAAA,EAAAA,EA9mCZ,EA8mCYA,KAEI1B,EADA4G,EAAAje,EA/mChB,EA+mCgB+Y,GACA7pB,aAAA+iB,EAAA3iB,UACAgE,QAAAuC,EAAAkI,kBAAAnB,OACIoB,GAAA,GAGR,GAAAA,EACI,IAAA+a,EAAA,EAAAA,EAtnChB,EAsnCgBA,KAEI1B,EADA4G,EAAAje,EAvnCpB,EAunCoB+Y,GACA7pB,aAAA+iB,EAAA3iB,UACA0O,WAAA,EAMZ,IAAAgC,EAAA,EAAAA,EA/nCR,EA+nCQA,GAAA,EAEI,IAAA+Y,EAAA,EAAAA,EAjoCZ,EAioCYA,GAAA,EAAA,CAEI/a,GAAA,EAEA,IAFA,IAEAb,EAAA,EAAAA,EAAA,EAAAA,IACI,IAAA,IAAAC,EAAA,EAAAA,EAAA,EAAAA,KAMIia,EADA4G,EAHAje,EAAA7C,EAxoCxB,GAyoCwB4b,EAAA3b,IAGAlO,aAAA+iB,EAAA3iB,UACAgE,QAAAuC,EAAAkI,kBAAAnB,OACIoB,GAAA,GAMZ,GAAAA,EAIA,IAAAb,EAAA,EAAAA,EAAA,EAAAA,IACI,IAAAC,EAAA,EAAAA,EAAA,EAAAA,KAKIia,EADA4G,EAHAje,EAAA7C,EA1pCxB,GA2pCwB4b,EAAA3b,IAGAlO,aAAA+iB,EAAA3iB,UACA0O,WAAA,EAMhB,IAAAgC,EAAA,EAAAA,EAAAie,EAAAhe,OAAAD,IAAA,CACI,IACAqX,GAAAA,EADA4G,EAAAje,GACA9Q,aAAA+iB,EAAA3iB,UACA2N,UAAAoa,EAAArZ,WACAqZ,EAAArZ,YAAyBkV,GAAA,GAE7B,OAAAA,GAIJf,EAAArjB,UAAA8tB,UAAA,WAQI,GAPAnuB,KAAAwkB,aACIxkB,KAAAykB,WACIzkB,KAAA0kB,UAAA,EAEA1kB,KAAA0kB,SAAA,GAGR1kB,KAAAykB,WAAA,CACI,IAAA,IAAAlT,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IAAAyY,EAAAhqB,KAAAgkB,YAAAiF,SAAA1X,GACAqX,EAAAoB,EAAAvpB,aAAA+iB,EAAA3iB,SACA+nB,GAAAA,EAAArZ,YACIqZ,EAAApa,WAAA,GACAoa,EAAA1a,WAAA9G,EAAAkI,kBAAAnB,MACAmV,EAAAziB,QAAAC,SAAAiH,KAAA,aAAA/H,KAAAikB,IAAA,CAAAtW,IAAAqc,EAAAwD,gBACA3kB,EAAAK,eAAAC,SAAA2mB,2BACA9vB,KAAAutB,YAIRvtB,KAAA0kB,UAAA,IAAwB1kB,KAAA0kB,SAAA,GACxB1kB,KAAA+vB,SAAA/vB,KAAA0kB,UAGAzS,EAAApR,QAAAC,SAAAuH,UAAA,aACA,IAAA2nB,EAAAnH,KAAAC,MAAA9oB,KAAAykB,WAzsCZ,GA0sCY,GAAA,GAAAuL,EAAA,CACI,IAAAtiB,EAAAoE,EAAAuY,OAAA,EAAA,GACApY,EAAApR,QAAAC,SAAAuH,UAAA,WAAAqF,GAEJsiB,GAAA,IACItiB,EAAAoE,EAAAuY,OAAA,EAAA,GACApY,EAAApR,QAAAC,SAAAuH,UAAA,WAAAqF,IAGJ1N,KAAAykB,WAAA,EACAzkB,KAAAwkB,YAAA,IAKRd,EAAArjB,UAAA+tB,gBAAA,WAAA,MAAAtuB,EAAAE,KACIA,KAAA6vB,qBAII7vB,KAAA8kB,eACI9kB,KAAA2uB,aAIA,QAAApvB,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA0J,uBAAAlF,KAAA,SAAAa,GACI,IAAAC,EAAAD,EAAAuC,OAAAtC,OACA,UAAAA,GAAA,iBAAAA,GAAA,WAAAA,EACI/E,EAAAmwB,yBAGAnwB,EAAAowB,kCAGRlsB,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,GACAnB,EAAAmwB,6BAQRvM,EAAArjB,UAAAsuB,WAAA,WACJ9c,EAAA+B,eAAAS,YAAA4H,WAAA7U,EAAA6M,aAAAkI,MACAtT,EAAAK,eAAAC,SAAAgnB,0BACAnwB,KAAAuuB,oBAIJ7K,EAAArjB,UAAA0vB,SAAA,SAAAC,GAAA,IAAAlwB,EAAAE,KACI,KAAAgwB,EAAA,GAAA,CAEA,IADA,IAAAI,EAAApwB,KAAAkkB,MAAA1U,eAAA,UACA+B,EAAA,EAAAA,EAAA6e,EAAAnH,SAAAzX,OAAAD,IAAA,CACI,IAAA8e,EAAAD,EAAAnH,SAAA1X,GACA8e,EAAA7jB,OAAA8jB,SAAAD,EAAAlqB,OAAA6pB,EAAA,EAEJhwB,KAAAkkB,MAAAqM,iBACAvwB,KAAAkkB,MAAAxV,EAAA,IACA1O,KAAAkkB,MAAA1X,QAAA,EACA,IAAAY,EAAA5N,GAAAgxB,OAAA,GAAA,EAAAxwB,KAAAkkB,MAAAvV,GACAtB,EAAA7N,GAAAixB,UAAA,GACAC,EAAAlxB,GAAAgxB,OAAA,IAAA,IAAAxwB,KAAAkkB,MAAAvV,GACAgiB,EAAAnxB,GAAAoxB,SAAA,WACI9wB,EAAAokB,MAAA1X,QAAA,IAEJM,EAAAtN,GAAA8N,SAAAF,EAAAC,EAAAqjB,EAAAC,GACAnxB,GAAAwN,MAAAhN,KAAAkkB,OAAAngB,KAAA+I,GAAAG,UAGJyW,EAAArjB,UAAAwwB,oBAAA,WACI7wB,KAAAgmB,6BAAAhlB,OACAhB,KAAAimB,6BAAAjlB,OACAhB,KAAAkmB,6BAAAllB,OACAhB,KAAA4mB,6BAAA5lB,OACAhB,KAAA6mB,6BAAA7lB,OACAhB,KAAA8mB,6BAAA9lB,OACA3B,EAAAwB,QAAAC,SAAAC,mBAAA,eAAAf,KAAA4kB,YAAA,QAGJlB,EAAArjB,UAAAqoB,iBAAA,WACI,IAAAoI,EAAAtxB,GAAAuxB,MAAA,IAAA,IAAA,KACAC,EAAAxxB,GAAAuxB,MAAA,IAAA,IAAA,KACAA,EAAA/wB,KAAA4kB,aA3xCR,GA2xCQoM,EAAAF,EAEA9wB,KAAAklB,8BAAA6L,MACA/wB,KAAAmlB,6BAAA5Y,KAAA4L,OAAA4Y,MACA/wB,KAAAolB,0BAAA7Y,KAAA4L,OAAA4Y,MACA/wB,KAAAqlB,6BAAA9Y,KAAA4L,OAAA4Y,MACA/wB,KAAA+kB,mBAAAgM,MACA/wB,KAAAglB,gBAAA+L,MACA/wB,KAAAilB,kBAAA8L,MAAAA,EAGA/wB,KAAAklB,8BAAA3W,QACAvO,KAAAmlB,6BAAA5Y,KAAA4L,OAAA5J,QACAvO,KAAAolB,0BAAA7Y,KAAA4L,OAAA5J,QACAvO,KAAAqlB,6BAAA9Y,KAAA4L,OAAA5J,QACAvO,KAAA+kB,mBAAAxW,QACAvO,KAAAglB,gBAAAzW,QACAvO,KAAAilB,kBAAA1W,QAAAvO,KAAA4kB,aA5yCR,GA4yCQ,IAAA,IAEA5kB,KAAAmlB,6BAAAnkB,OAAAhB,KAAA6nB,yBAAA5c,WACAjL,KAAAolB,0BAAApkB,OAAAhB,KAAAgoB,sBAAA/c,WACAjL,KAAAqlB,6BAAArkB,OAAAhB,KAAAkoB,8BAAAjd,WAEAjL,KAAAmlB,6BAAA5Y,KAAA4L,OAAA3L,OAAAxM,KAAA6nB,yBAAA,EACA7nB,KAAAolB,0BAAA7Y,KAAA4L,OAAA3L,OAAAxM,KAAAgoB,sBAAA,EACAhoB,KAAAqlB,6BAAA9Y,KAAA4L,OAAA3L,OAAAxM,KAAAkoB,8BAAA,GAGJxE,EAAArjB,UAAA4wB,sBAAA,WACI,IAAAC,EAAA7xB,EAAAwB,QAAAC,SAAAC,mBAAA,eAAAf,KAAA4kB,YAAA,OACArB,EAAA1iB,QAAAC,SAAAgD,KAAAotB,EAAA,CAAAC,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,GAAA,IAAA,OACA/wB,KAAA6wB,uBAGJnN,EAAArjB,UAAA0qB,wBAAA,WACI9Y,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA4kB,aA/zCR,GAg0CY5kB,KAAAixB,yBAIJjxB,KAAA6wB,sBACA7wB,KAAA6nB,yBAAA,EACI7nB,KAAAmmB,0BAAA3Z,QAAA,EAGAxM,KAAAslB,0BAAA9Y,QAAA,IAIRkX,EAAArjB,UAAA2qB,qBAAA,WACI/Y,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA4kB,aA/0CR,GAg1CY5kB,KAAAixB,yBAIJjxB,KAAA6wB,sBACA7wB,KAAAgoB,sBAAA,EACIhoB,KAAAomB,uBAAA5Z,QAAA,EAGAxM,KAAAulB,uBAAA/Y,QAAA,IAIRkX,EAAArjB,UAAA4qB,uBAAA,WACIhZ,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA4kB,aA/1CR,GAg2CY5kB,KAAAixB,yBAGJjxB,KAAA6wB,sBACA7wB,KAAAkoB,8BAAA,EACIloB,KAAAqmB,0BAAA7Z,QAAA,EAGAxM,KAAAwlB,0BAAAhZ,QAAA,IAIRkX,EAAArjB,UAAAirB,gBAAA,WACItrB,KAAAslB,0BAAA9Y,QAAA,GAGJkX,EAAArjB,UAAAkrB,gBAAA,WACIvrB,KAAAulB,uBAAA/Y,QAAA,GAGJkX,EAAArjB,UAAAmrB,gBAAA,WACIxrB,KAAAwlB,0BAAAhZ,QAAA,GAGJkX,EAAArjB,UAAAurB,gBAAA,WACI5rB,KAAAmmB,0BAAA3Z,QAAA,GAGJkX,EAAArjB,UAAAwrB,gBAAA,WACI7rB,KAAAomB,uBAAA5Z,QAAA,GAGJkX,EAAArjB,UAAAyrB,gBAAA,WACI9rB,KAAAqmB,0BAAA7Z,QAAA,GAGJkX,EAAArjB,UAAA8qB,oCAAA,WAAA,IAAArrB,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,QAAAuC,EAAAqO,iBAAAC,UAEA1D,EAAAlJ,eAAAK,SAAAgB,qBAAA,eAAApG,KAAA,SAAAstB,GACInsB,QAAAC,IAAA,uBAAAksB,GACAvxB,EAAAwrB,kBACAxrB,EAAA0uB,mBACJxqB,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACAnB,EAAA2oB,gBACA3oB,EAAAwxB,SAAA,MAKR5N,EAAArjB,UAAA+qB,iCAAA,WAAA,IAAAtrB,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,QAAAuC,EAAAqO,iBAAAC,UAEA1D,EAAAlJ,eAAAK,SAAAgB,qBAAA,YAAApG,KAAA,SAAAstB,GACInsB,QAAAC,IAAA,uBAAAksB,GACAvxB,EAAAyrB,kBACAzrB,EAAA4uB,gBACJ1qB,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACAnB,EAAA2oB,gBACA3oB,EAAAwxB,SAAA,MAKR5N,EAAArjB,UAAAgrB,mCAAA,WAAA,IAAAvrB,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,QAAAuC,EAAAqO,iBAAAC,UAEA1D,EAAAlJ,eAAAK,SAAAgB,qBAAA,oBAAApG,KAAA,SAAAstB,GACInsB,QAAAC,IAAA,uBAAAksB,GACAvxB,EAAA0rB,kBACA1rB,EAAAyxB,0BACJvtB,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACAnB,EAAA2oB,gBACA3oB,EAAAwxB,SAAA,MAIF5N,EAAArjB,UAAAorB,oCAAA,mGAGC,OAFHxZ,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEG/S,KAAA6nB,yBAAA,EACC,CAAA,EAAA7nB,KAAAwxB,6BADD,CAAA,EAAA,UACCjyB,EAAAgE,OACAvD,KAAAwuB,yCAGJxuB,KAAA4rB,kBACA5rB,KAAA0oB,6BAGEhF,EAAArjB,UAAAqrB,iCAAA,mGAGC,OAFHzZ,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEG/S,KAAAgoB,sBAAA,EACC,CAAA,EAAAhoB,KAAAyxB,2BADD,CAAA,EAAA,UACClyB,EAAAgE,OACAvD,KAAA0uB,sCAGJ1uB,KAAA6rB,kBACA7rB,KAAA0oB,6BAGEhF,EAAArjB,UAAAsrB,mCAAA,mGAGC,OAFH1Z,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEG/S,KAAAkoB,8BAAA,EACC,CAAA,EAAAloB,KAAA0xB,iCADD,CAAA,EAAA,UACCnyB,EAAAgE,OACAvD,KAAAuxB,gDAGJvxB,KAAA8rB,kBACA9rB,KAAA0oB,6BAKIhF,EAAArjB,UAAAquB,YAAA,SAAAiD,GAAR,IAAA7xB,EAAAE,UAAoB,IAAA2xB,IAAAA,GAAA,GAEhBA,GACI3xB,KAAA4kB,cAGJzK,EAAAtZ,QAAAC,SAAA8wB,YAAA,WACIzX,EAAAtZ,QAAAC,SAAA+wB,eACItO,EAAA1iB,QAAAC,SAAAgD,KAAA,oCAAA,CAAAqtB,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,IAAA,GAAA,OAEJjxB,EAAA6kB,QAAA,EACA7kB,EAAAikB,SAAAvX,QAAA,GACJ,SAAA0kB,GACI3N,EAAA1iB,QAAAC,SAAAgD,KAAAotB,EAAA,CAAAC,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,GAAA,IAAA,SAGJ/wB,KAAAyoB,gBACAzoB,KAAA0oB,mBAEArhB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OACI3T,KAAAquB,kBAOA3K,EAAArjB,UAAAmuB,eAAA,WAAR,IAAA1uB,EAAAE,KACIA,KAAA4kB,cACA3S,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA6pB,eACA3X,EAAAtZ,QAAAC,SAAA8wB,YAAA,WAKI,IAJAzX,EAAAtZ,QAAAC,SAAA+wB,eACItO,EAAA1iB,QAAAC,SAAAgD,KAAA,oCAAA,CAAAqtB,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,IAAA,GAAA,OAEJjxB,EAAAwoB,mBACAxoB,EAAA+vB,oBACI/vB,EAAAwoB,mBAER,SAAA4I,GACI3N,EAAA1iB,QAAAC,SAAAgD,KAAAotB,EAAA,CAAAC,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,GAAA,IAAA,SAGJ/wB,KAAAyoB,gBACAzoB,KAAA0oB,mBAEArhB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OACI3T,KAAAquB,kBAIA3K,EAAArjB,UAAAkxB,sBAAA,WACJvxB,KAAA4kB,cAEA3S,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA6pB,eAEA9xB,KAAAkpB,yBACAlpB,KAAA+mB,mBAAAva,QAAA,EAEAxM,KAAAyoB,gBACAzoB,KAAA0oB,mBAEArhB,EAAAxG,QAAAC,SAAA2S,MAAArM,EAAAsM,eAAAC,OACI3T,KAAAquB,kBAIR3K,EAAArjB,UAAAguB,eAAA,WACI,GAAAhnB,EAAAxG,QAAAC,SAAA+D,QAAAuC,EAAAqO,iBAAAC,SAAA,CAEA,IADA,IAAAqc,EAAA,GACAxgB,EAAA,EAAAA,EAAAvR,KAAAgkB,YAAAiF,SAAAzX,OAAAD,IAAA,CACI,IACAqX,EADA5oB,KAAAgkB,YAAAiF,SAAA1X,GACA9Q,aAAA+iB,EAAA3iB,SACAkxB,EAAAvY,KAAAoP,EAAA/jB,QAGJ,IAAAmtB,EAAA,GACAC,EAAA,GACA,IAAA1gB,EAAA,EAAAA,EAAAvR,KAAAokB,aAAA6E,SAAAzX,OAAAD,IAAA,CACI,IACAgZ,EADAvqB,KAAAokB,aAAA6E,SAAA1X,GACA9Q,aAAAgjB,EAAA5iB,SACAoxB,EAAAzY,KAAA+Q,GAEK,IAAA2H,EAAA,SAAA3gB,GACL,IAAA0Y,EAAAkI,EAAAhO,YAAA8E,SAAA1X,GACA7D,EAAAukB,EAAAtY,UAAA,SAAAyY,GAAA,OAAAA,EAAAzkB,IAAAe,GAAAub,EAAAvb,IACAhB,GAAA,EACIskB,EAAAxY,KAAAyY,EAAAvkB,GAAAA,OAEAskB,EAAAxY,MAAA,WANR,IAAAjI,EAAA,EAAAA,EA7iDR,EA6iDQA,IAAS2gB,EAAA3gB,GASTlK,EAAAxG,QAAAC,SAAAwV,YAAA,CAAAyS,KAAAgJ,EAAA3H,MAAA4H,EAAA5d,MAAA/M,EAAAxG,QAAAC,SAAAsT,MAAA4U,YAAAhpB,KAAA4kB,YAAAE,eAAA9kB,KAAA8kB,gBACAzd,EAAAxG,QAAAC,SAAAiW,SAGJ2M,EAAArjB,UAAA0rB,SAAA,WACI9Z,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoe,OAGJ3O,EAAArjB,UAAAixB,SAAA,SAAAxnB,GAAA,MAAAhK,EAAAE,KACI,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA8L,iBAAAvB,GAAA/F,KAAA,SAAAa,GACIM,QAAAC,IAAAP,EAAA0tB,cAEAzpB,EAAAK,eAAAC,SAAAopB,YAAA3tB,EAAA0tB,aAAA,SAAAztB,EAAA4B,GACIvB,QAAAC,IAAA,oBACAD,QAAAC,IAAAN,GACAK,QAAAC,IAAAsB,GAEA3G,EAAA2oB,oBAGRzkB,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,MAIRyiB,EAAArjB,UAAAooB,cAAA,WAAA,MAAA3oB,EAAAE,KACI,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACI9E,EAAAonB,iBAAAlmB,OAAA4D,EAAAE,KAAA0tB,cAAAvnB,WACAnL,EAAA+jB,mBAAAjf,EAAAE,KAAA2tB,WACAprB,EAAAxG,QAAAC,SAAAwU,SAAA1Q,EAAAE,OAEJd,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAIRyiB,EAAArjB,UAAA4vB,uBAAA,WACIjwB,KAAA8kB,gBAAA,EACA9kB,KAAAqnB,sBAAA7a,QAAA,GAGJkX,EAAArjB,UAAA6vB,8BAAA,WACIlwB,KAAA8kB,gBAAA,EACA9kB,KAAAsnB,6BAAA9a,QAAA,GAGJkX,EAAArjB,UAAAqyB,mBAAA,WACI1yB,KAAAqnB,sBAAA7a,QAAA,EACAxM,KAAAsnB,6BAAA9a,QAAA,GAGJkX,EAAArjB,UAAA2rB,uBAAA,WAEIhsB,KAAA0yB,qBACA1yB,KAAAyuB,iCAGJ/K,EAAArjB,UAAA6rB,8BAAA,WAAA,MAAApsB,EAAAE,KAGI,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA0J,uBAAAlF,KAAA,SAAAa,GACI,IAAAC,EAAAD,EAAAuC,OAAAtC,OACA,UAAAA,GAAA,iBAAAA,GAAA,WAAAA,GACI/E,EAAA4yB,qBACA5yB,EAAAyrB,kBACAzrB,EAAA+rB,kBACA/rB,EAAA4uB,aAAA,IAIA7lB,EAAAK,eAAAC,SAAAqK,4BAGRxP,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAIRyiB,EAAArjB,UAAA4rB,qBAAA,WAEIjsB,KAAA0yB,qBACA1yB,KAAA2uB,cAGEjL,EAAArjB,UAAAmxB,0BAAA,yGACC,OAAA,QAAAjyB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAAwoB,iBACC1gB,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAC,iBACA,CAAA,EAAAjW,EAAA6gB,uBAFD,CAAA,EAAA,UAECrvB,EAAAC,wCAIFmgB,EAAArjB,UAAAoxB,wBAAA,yGACC,OAAA,QAAAlyB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAA0oB,cACC5gB,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAG,cACA,CAAA,EAAAnW,EAAA6gB,uBAFD,CAAA,EAAA,UAECrvB,EAAAC,wCAIFmgB,EAAArjB,UAAAqxB,8BAAA,yGACC,OAAA,QAAAnyB,EAAA8H,EAAAxG,QAAAC,SAAAwU,SAAAwS,eAAA,IAAAvoB,OAAA,EAAAA,EAAA4oB,sBACC9gB,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAK,sBACA,CAAA,EAAArW,EAAA6gB,uBAFD,CAAA,EAAA,UAECrvB,EAAAC,wCAppDRrC,EAAA,CADCvB,EAAAH,GAAA4V,OAC2CsO,EAAArjB,UAAA,qBAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAA4V,OAC2CsO,EAAArjB,UAAA,qBAAA,GAP3Ba,EAAA,CADpBxB,GACoBgkB,GAArB,CAAAlkB,GAAA2B,WAAqBC,EAAAP,QAAA6iB,g5CC9BrB,IAAAtc,EAAA9H,EAAA,WACA+H,EAAA/H,EAAA,0BACA4a,EAAA5a,EAAA,eACAuS,EAAAvS,EAAA,qBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNizB,EAAA,SAAA/yB,GAAA,SAAA+yB,IAAA,IAAA9yB,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAGIF,EAAAI,MAAA,KAGAJ,EAAA+yB,SAAA,KAGA/yB,EAAAgzB,SAAA,KAGAhzB,EAAAizB,QAAA,KAGAjzB,EAAAkzB,aAAA,OAkCJ,OAjD0C5yB,EAAAwyB,EAAA/yB,GAiBtC+yB,EAAAvyB,UAAA4M,MAAA,WAEIzN,GAAAwN,MAAAhN,KAAAgzB,cACCC,GAAA,EAAA,CAAAC,OAAA,MACArI,gBACA5d,SAGL2lB,EAAAvyB,UAAA8yB,OAAA,WACInzB,KAAA6yB,UAAA7yB,KAAAuM,KAAAC,SACIxM,KAAA6yB,SAAAjhB,UAAAvK,EAAAxG,QAAAC,SAAA6U,YACAtO,EAAAxG,QAAAC,SAAA6U,aAAA,IAEI9D,EAAA+B,eAAAG,UAAAlG,SAAAzG,EAAA6M,aAAAqH,OAAA,MAAAjU,EAAAxG,QAAAC,SAAAwU,SACItV,KAAAyM,QAGAzM,KAAA8yB,SAAAtmB,QAAA,EACAxM,KAAA+yB,QAAAvmB,QAAA,MAShBomB,EAAAvyB,UAAA+yB,UAAA,SAAAC,GACIrzB,KAAAE,QACIF,KAAAE,MAAAc,OAAAqyB,IA3CRnyB,EAAA,CADCvB,EAAAH,GAAAkB,QACqBkyB,EAAAvyB,UAAA,aAAA,GAGtBa,EAAA,CADCvB,EAAAH,GAAAsM,SACyB8mB,EAAAvyB,UAAA,gBAAA,GAG1Ba,EAAA,CADCvB,EAAAH,GAAA4V,OACuBwd,EAAAvyB,UAAA,gBAAA,GAGxBa,EAAA,CADCvB,EAAAH,GAAA4V,OACsBwd,EAAAvyB,UAAA,eAAA,GAGvBa,EAAA,CADCvB,EAAAH,GAAA4V,OAC2Bwd,EAAAvyB,UAAA,oBAAA,GAfXa,EAAA,CADpBxB,GACoBkzB,GAArB,CAAA1Y,EAAArZ,SAAqBO,EAAAP,QAAA+xB,sUCRrB,IAAAU,EAAAh0B,EAAA,gCACA+H,EAAA/H,EAAA,iBAEAi0B,EAAA,WAAA,SAAAA,KA8DA,OA1DWA,EAAAhtB,YAAA,WAMH,OALA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,KACAA,KAAAmD,UAAAC,QAGJpD,KAAAmD,WAGJH,OAAAC,eAAAswB,EAAA,WAAA,CAAArwB,IAAA,WACI,OAAAlD,KAAAuG,+CAGJgtB,EAAAlzB,UAAA+C,KAAA,aAIAmwB,EAAAlzB,UAAAsgB,eAAA,SAAA6S,GACIh0B,GAAA2F,IAAA,wBAAAquB,GACAnsB,EAAAxG,QAAAC,SAAA0V,SAAAgd,EACAnsB,EAAAxG,QAAAC,SAAAiW,OACA/W,KAAAyzB,aAGJF,EAAAlzB,UAAAU,mBAAA,SAAA2yB,GACI,IAAA9yB,EAAAQ,EAAAuyB,iBAAAD,GAEA,IAAA9yB,EACI,MAAA,OAGJ,OAAAyG,EAAAxG,QAAAC,SAAA0V,UACI,IAAA,KACI,OAAA5V,EAAAgzB,GACJ,IAAA,KACA,IAAA,KACI,OAAAhzB,EAAAizB,GACJ,IAAA,KACI,OAAAjzB,EAAAkzB,GACJ,IAAA,KACI,OAAAlzB,EAAAmzB,GACJ,IAAA,KACI,OAAAnzB,EAAAozB,GACJ,QACI,OAAApzB,EAAAgzB,KAIZL,EAAAlzB,UAAAozB,UAAA,WAEIvuB,QAAAC,IAAA,aAAAkC,EAAAxG,QAAAC,SAAA0V,UAGAhX,GAAAmb,KAAA,UAAAsZ,wBAAAX,EAAAzyB,SACAmZ,QAAA,SAAA9Z,GACIA,EAAAK,iBAzDOgzB,EAAApwB,UAAA,KA4DnBowB,EA9DA,GAAqBnyB,EAAAP,QAAA0yB,EAgEVnyB,EAAAuyB,iBAAA,CACPO,QAAA,CACIN,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,UAKJG,QAAA,CACIP,GAAA,aACAC,GAAA,sDACAC,GAAA,WACAC,GAAA,cACAC,GAAA,uDAGJI,cAAA,CACIR,GAAA,UACAC,GAAA,uCACAC,GAAA,UACAC,GAAA,UACAC,GAAA,wCAGJK,QAAA,CACIT,GAAA,MACAC,GAAA,qBACAC,GAAA,KACAC,GAAA,QACAC,GAAA,gBAGJM,OAAA,CACIV,GAAA,KACAC,GAAA,eACAC,GAAA,OACAC,GAAA,KACAC,GAAA,sBAKJO,eAAA,CACIX,GAAA,aACAC,GAAA,4EACAC,GAAA,gBACAC,GAAA,gBACAC,GAAA,iEAGJQ,kBAAA,CACIZ,GAAA,UACAC,GAAA,6CACAC,GAAA,gBACAC,GAAA,UACAC,GAAA,wCAGJS,kBAAA,CACIb,GAAA,cACAC,GAAA,yDACAC,GAAA,cACAC,GAAA,mBACAC,GAAA,0DAGJU,kBAAA,CACId,GAAA,QACAC,GAAA,mDACAC,GAAA,WACAC,GAAA,SACAC,GAAA,8CAGJW,kBAAA,CACIf,GAAA,UACAC,GAAA,6CACAC,GAAA,SACAC,GAAA,SACAC,GAAA,8CAKJY,eAAA,CACIhB,GAAA,WACAC,GAAA,2EACAC,GAAA,gBACAC,GAAA,UACAC,GAAA,0DAGJa,gBAAA,CACIjB,GAAA,SACAC,GAAA,iCACAC,GAAA,SACAC,GAAA,UACAC,GAAA,kCAGJc,eAAA,CACIlB,GAAA,QACAC,GAAA,uCACAC,GAAA,QACAC,GAAA,YACAC,GAAA,wCAKJe,kBAAA,CACInB,GAAA,WACAC,GAAA,2BACAC,GAAA,UACAC,GAAA,YACAC,GAAA,4BAGJgB,iBAAA,CACIpB,GAAA,+DACAC,GAAA,+DACAC,GAAA,+DACAC,GAAA,+DACAC,GAAA,gEAGJiB,iBAAA,CACIrB,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,WAGJkB,iBAAA,CACItB,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,WAGJmB,iBAAA,CACIvB,GAAA,aACAC,GAAA,aACAC,GAAA,aACAC,GAAA,aACAC,GAAA,cAGJoB,iBAAA,CACIxB,GAAA,6CACAC,GAAA,6CACAC,GAAA,6CACAC,GAAA,6CACAC,GAAA,8CAKJqB,kBAAA,CACIzB,GAAA,cACAC,GAAA,yDACAC,GAAA,cACAC,GAAA,mBACAC,GAAA,0DAGJsB,qBAAA,CACI1B,GAAA,WACAC,GAAA,mDACAC,GAAA,cACAC,GAAA,QACAC,GAAA,oDAGJuB,6BAAA,CACI3B,GAAA,UACAC,GAAA,yDACAC,GAAA,UACAC,GAAA,UACAC,GAAA,gEAGJwB,mBAAA,CACI5B,GAAA,SACAC,GAAA,2BACAC,GAAA,SACAC,GAAA,SACAC,GAAA,kCAGJyB,qBAAA,CACI7B,GAAA,WACAC,GAAA,oDACAC,GAAA,eACAC,GAAA,oBACAC,GAAA,+FAKJ0B,eAAA,CACI9B,GAAA,yBACAC,GAAA,uHACAC,GAAA,oCACAC,GAAA,+BACAC,GAAA,oIAGJ2B,oBAAA,CACI/B,GAAA,sBACAC,GAAA,0IACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,kHAGJ4B,kBAAA,CACIhC,GAAA,qFACAC,GAAA,4aACAC,GAAA,wGACAC,GAAA,gJACAC,GAAA,wXAGJ6B,kBAAA,CACIjC,GAAA,qGACAC,GAAA,oZACAC,GAAA,qHACAC,GAAA,2HACAC,GAAA,scAGJ8B,kBAAA,CACIlC,GAAA,kCACAC,GAAA,2LACAC,GAAA,oCACAC,GAAA,sCACAC,GAAA,kPAGJ+B,kBAAA,CACInC,GAAA,kCACAC,GAAA,2LACAC,GAAA,oCACAC,GAAA,sCACAC,GAAA,kPAIJgC,iBAAA,CACIpC,GAAA,kBACAC,GAAA,yCACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,0CAGJiC,iBAAA,CACIrC,GAAA,kBACAC,GAAA,yCACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,0CAGJkC,iBAAA,CACItC,GAAA,kBACAC,GAAA,yCACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,0CAGJmC,iBAAA,CACIvC,GAAA,kBACAC,GAAA,yCACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,0CAGJoC,iBAAA,CACIxC,GAAA,iBACAC,GAAA,wCACAC,GAAA,gBACAC,GAAA,iBACAC,GAAA,yCAGJqC,iBAAA,CACIzC,GAAA,sBACAC,GAAA,sEACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,iEAIJsC,yBAAA,CACI1C,GAAA,sCACAC,GAAA,kMACAC,GAAA,iDACAC,GAAA,8CACAC,GAAA,uLAMJuC,YAAA,CACI3C,GAAA,QACAC,GAAA,mDACAC,GAAA,WACAC,GAAA,SACAC,GAAA,8CAGJwC,YAAA,CACI5C,GAAA,QACAC,GAAA,6CACAC,GAAA,uBACAC,GAAA,UACAC,GAAA,gEAGJyC,aAAA,CACI7C,GAAA,cACAC,GAAA,+DACAC,GAAA,cACAC,GAAA,eACAC,GAAA,sEAGJ0C,mBAAA,CACI9C,GAAA,kBACAC,GAAA,4EACAC,GAAA,wBACAC,GAAA,oBACAC,GAAA,mFAGJ2C,sBAAA,CACI/C,GAAA,OACAC,GAAA,sEACAC,GAAA,WACAC,GAAA,OACAC,GAAA,kEAGJ4C,sBAAA,CACIhD,GAAA,oBACAC,GAAA,oFACAC,GAAA,wBACAC,GAAA,sBACAC,GAAA,qFAGJ6C,oBAAA,CACIjD,GAAA,iBACAC,GAAA,8FACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,yFAKJhjB,OAAA,CACI4iB,GAAA,SACAC,GAAA,mDACAC,GAAA,YACAC,GAAA,aACAC,GAAA,8CAGJ8C,YAAA,CACIlD,GAAA,cACAC,GAAA,gHACAC,GAAA,uBACAC,GAAA,qBACAC,GAAA,2GAGJ+C,yBAAA,CACInD,GAAA,kBACAC,GAAA,0IACAC,GAAA,8BACAC,GAAA,kCACAC,GAAA,2IAGJgD,kBAAA,CACIpD,GAAA,cACAC,GAAA,gEACAC,GAAA,oBACAC,GAAA,iBACAC,GAAA,8EAOJiD,cAAA,CACIrD,GAAA,UACAC,GAAA,6CACAC,GAAA,SACAC,GAAA,SACAC,GAAA,8CAGJkD,sBAAA,CACItD,GAAA,gBACAC,GAAA,wFACAC,GAAA,eACAC,GAAA,2BACAC,GAAA,qGAGJmD,gBAAA,CACIvD,GAAA,UACAC,GAAA,8FACAC,GAAA,UACAC,GAAA,UACAC,GAAA,+FAGJoD,gBAAA,CACIxD,GAAA,iBACAC,GAAA,oJACAC,GAAA,wBACAC,GAAA,4BACAC,GAAA,iKAGJqD,oBAAA,CACIzD,GAAA,sBACAC,GAAA,sHACAC,GAAA,yBACAC,GAAA,4BACAC,GAAA,6HAKJsD,eAAA,CACI1D,GAAA,cACAC,GAAA,gHACAC,GAAA,uBACAC,GAAA,sBACAC,GAAA,2GAGJuD,wBAAA,CACI3D,GAAA,eACAC,GAAA,2GACAC,GAAA,wBACAC,GAAA,2BACAC,GAAA,sGAGJwD,8BAAA,CACI5D,GAAA,qEACAC,GAAA,0TACAC,GAAA,qFACAC,GAAA,uEACAC,GAAA,uUAGJyD,wBAAA,CACI7D,GAAA,eACAC,GAAA,0GACAC,GAAA,sBACAC,GAAA,wBACAC,GAAA,qGAGJ0D,8BAAA,CACI9D,GAAA,2DACAC,GAAA,mRACAC,GAAA,yEACAC,GAAA,8DACAC,GAAA,oRAKJ2D,WAAA,CACI/D,GAAA,OACAC,GAAA,6CACAC,GAAA,OACAC,GAAA,SACAC,GAAA,8CAGJ4D,iBAAA,CACIhE,GAAA,6DACAC,GAAA,sUACAC,GAAA,sFACAC,GAAA,6EACAC,GAAA,ySAMJ6D,WAAA,CACIjE,GAAA,QACAC,GAAA,iCACAC,GAAA,QACAC,GAAA,QACAC,GAAA,kCAGJ8D,iBAAA,CACIlE,GAAA,YACAC,GAAA,0DACAC,GAAA,eACAC,GAAA,oBACAC,GAAA,2DAGJ+D,oBAAA,CACInE,GAAA,UACAC,GAAA,6CACAC,GAAA,WACAC,GAAA,YACAC,GAAA,8CAMJgE,WAAA,CACIpE,GAAA,YACAC,GAAA,4EACAC,GAAA,gBACAC,GAAA,kBACAC,GAAA,mFAGJiE,WAAA,CACIrE,GAAA,SACAC,GAAA,8CACAC,GAAA,eACAC,GAAA,iBACAC,GAAA,4BAGJkE,gBAAA,CACItE,GAAA,cACAC,GAAA,qGACAC,GAAA,sBACAC,GAAA,uBACAC,GAAA,kEAGJmE,qBAAA,CACIvE,GAAA,WACAC,GAAA,8CACAC,GAAA,cACAC,GAAA,cACAC,GAAA,2DAMJoE,cAAA,CACIxE,GAAA,OACAC,GAAA,yDACAC,GAAA,YACAC,GAAA,QACAC,GAAA,wCAGJqE,kBAAA,CACIzE,GAAA,QACAC,GAAA,+DACAC,GAAA,WACAC,GAAA,SACAC,GAAA,gEAGJsE,WAAA,CACI1E,GAAA,eACAC,GAAA,8HACAC,GAAA,uBACAC,GAAA,kBACAC,GAAA,2IAGJuE,WAAA,CACI3E,GAAA,8BACAC,GAAA,4JACAC,GAAA,sCACAC,GAAA,uCACAC,GAAA,6JAGJwE,WAAA,CACI5E,GAAA,qBACAC,GAAA,8JACAC,GAAA,uBACAC,GAAA,oCACAC,GAAA,2KAGJyE,WAAA,CACI7E,GAAA,2BACAC,GAAA,oIACAC,GAAA,yBACAC,GAAA,mCACAC,GAAA,2IAGJ0E,mBAAA,CACI9E,GAAA,eACAC,GAAA,iFACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,kFAGJ2E,oBAAA,CACI/E,GAAA,+DACAC,GAAA,8UACAC,GAAA,iFACAC,GAAA,yEACAC,GAAA,2VAGJ4E,oBAAA,CACIhF,GAAA,0DACAC,GAAA,sVACAC,GAAA,4EACAC,GAAA,wEACAC,GAAA,qXAGJ6E,oBAAA,CACIjF,GAAA,+DACAC,GAAA,4TACAC,GAAA,iFACAC,GAAA,+EACAC,GAAA,qVAGJ8E,wBAAA,CACIlF,GAAA,iEACAC,GAAA,gWACAC,GAAA,8EACAC,GAAA,uEACAC,GAAA,mXAGJ+E,wBAAA,CACInF,GAAA,yDACAC,GAAA,gVACAC,GAAA,uFACAC,GAAA,8EACAC,GAAA,+WAGJgF,wBAAA,CACIpF,GAAA,uEACAC,GAAA,4TACAC,GAAA,kFACAC,GAAA,2FACAC,GAAA,qVAGJiF,yBAAA,CACIrF,GAAA,4BACAC,GAAA,uHACAC,GAAA,kCACAC,GAAA,oCACAC,GAAA,wHAGJkF,oBAAA,CACItF,GAAA,0BACAC,GAAA,sGACAC,GAAA,0BACAC,GAAA,gCACAC,GAAA,6GAGJmF,oBAAA,CACIvF,GAAA,qBACAC,GAAA,2GACAC,GAAA,6BACAC,GAAA,6BACAC,GAAA,4GAKJoF,mBAAA,CACIxF,GAAA,iBACAC,GAAA,yDACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,0DAGJqF,mBAAA,CACIzF,GAAA,4CACAC,GAAA,gLACAC,GAAA,4CACAC,GAAA,4DACAC,GAAA,0MAGJsF,uBAAA,CACI1F,GAAA,YACAC,GAAA,6CACAC,GAAA,YACAC,GAAA,cACAC,GAAA,oDAGJuF,sBAAA,CACI3F,GAAA,YACAC,GAAA,8CACAC,GAAA,oBACAC,GAAA,kBACAC,GAAA,+CAKJwF,uBAAA,CACI5F,GAAA,UACAC,GAAA,yDACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,gEAGJyF,wBAAA,CACI7F,GAAA,qCACAC,GAAA,kMACAC,GAAA,4CACAC,GAAA,6CACAC,GAAA,kOAKJ0F,oBAAA,CACI9F,GAAA,gBACAC,GAAA,2GACAC,GAAA,kBACAC,GAAA,iBACAC,GAAA,gGAGJ2F,qBAAA,CACI/F,GAAA,gDACAC,GAAA,ySACAC,GAAA,6EACAC,GAAA,oEACAC,GAAA,qTAGJ4F,aAAA,CACIhG,GAAA,cACAC,GAAA,0GACAC,GAAA,qBACAC,GAAA,iBACAC,GAAA,+FAGJ6F,+BAAA,CACIjG,GAAA,kFACAC,GAAA,4UACAC,GAAA,mGACAC,GAAA,oGACAC,GAAA,yVAGJ8F,kBAAA,CACIlG,GAAA,gBACAC,GAAA,oGACAC,GAAA,mBACAC,GAAA,sBACAC,GAAA,2GAGJ+F,YAAA,CACInG,GAAA,UACAC,GAAA,6CACAC,GAAA,gBACAC,GAAA,aACAC,GAAA,oDAGJgG,YAAA,CACIpG,GAAA,UACAC,GAAA,8FACAC,GAAA,mBACAC,GAAA,UACAC,GAAA,+FAGJiG,mBAAA,CACIrG,GAAA,0BACAC,GAAA,6FACAC,GAAA,8BACAC,GAAA,uBACAC,GAAA,qGAGJkG,oBAAA,CACItG,GAAA,gEACAC,GAAA,gVACAC,GAAA,4GACAC,GAAA,gGACAC,GAAA,sXAGJmG,mBAAA,CACIvG,GAAA,sBACAC,GAAA,iHACAC,GAAA,wBACAC,GAAA,0BACAC,GAAA,sGAGJoG,oBAAA,CACIxG,GAAA,yDACAC,GAAA,qWACAC,GAAA,wEACAC,GAAA,uEACAC,GAAA,sXAGJqG,mBAAA,CACIzG,GAAA,cACAC,GAAA,wFACAC,GAAA,mBACAC,GAAA,gBACAC,GAAA,2GAGJsG,oBAAA,CACI1G,GAAA,sEACAC,GAAA,4QACAC,GAAA,gFACAC,GAAA,qFACAC,GAAA,iQAGJuG,mBAAA,CACI3G,GAAA,yBACAC,GAAA,0GACAC,GAAA,2BACAC,GAAA,6BACAC,GAAA,uJAGJwG,oBAAA,CACI5G,GAAA,wEACAC,GAAA,iTACAC,GAAA,0FACAC,GAAA,+EACAC,GAAA,uTAKJyG,kBAAA,CACI7G,GAAA,0EACAC,GAAA,oTACAC,GAAA,8EACAC,GAAA,oFACAC,GAAA,kUAGJ0G,mBAAA,CACI9G,GAAA,YACAC,GAAA,oDACAC,GAAA,cACAC,GAAA,qBACAC,GAAA,iEAGJ2G,oBAAA,CACI/G,GAAA,6BACAC,GAAA,wFACAC,GAAA,sCACAC,GAAA,uCACAC,GAAA,s3ECr8BR,IAAA5sB,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA6a,EAAA7a,EAAA,yBACAikB,EAAAjkB,EAAA,2BACA+H,EAAA/H,EAAA,0BAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNk7B,GAHMr7B,EAAAI,SAGN,SAAAE,GAAA,SAAA+6B,IAAA,IAAA96B,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAya,WAAA,KACAza,EAAA+6B,UAAA,KACA/6B,EAAAg7B,QAAA,KACAh7B,EAAAkf,IAAA,KACAlf,EAAAsU,MAAA,KACAtU,EAAAi7B,WAAA,OAkEJ,OA1EuC36B,EAAAw6B,EAAA/6B,GAUnC+6B,EAAAv6B,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAAua,WAAA/a,GAAAmb,KAAA,sBAAA3a,KAAAqa,OACAra,KAAA66B,UAAAr7B,GAAAmb,KAAA,qBAAA3a,KAAAqa,OACAra,KAAA86B,QAAAt7B,GAAAmb,KAAA,mBAAA3a,KAAAqa,OACAra,KAAAua,WAAA3H,GAAA,QAAA5S,KAAA6a,eAAA7a,MACAA,KAAA66B,UAAAjoB,GAAA,QAAA5S,KAAAg7B,cAAAh7B,MACAA,KAAA86B,QAAAloB,GAAA,QAAA5S,KAAAsf,YAAAtf,MACAA,KAAAgf,IAAAxf,GAAAmb,KAAA,MAAA3a,KAAAqa,OACAra,KAAAoU,MAAA5U,GAAAmb,KAAA,oBAAA3a,KAAAqa,OACAra,KAAA+6B,WAAAv7B,GAAAmb,KAAA,yBAAA3a,KAAAqa,QAGJugB,EAAAv6B,UAAAyS,UAAA,WACI9S,KAAAua,WAAAd,IAAA,QAAAzZ,KAAA6a,eAAA7a,MACAA,KAAA66B,UAAAphB,IAAA,QAAAzZ,KAAAg7B,cAAAh7B,MACAA,KAAA86B,QAAArhB,IAAA,QAAAzZ,KAAAsf,YAAAtf,OAGJ46B,EAAAv6B,UAAAG,SAAA,WAGIR,KAAAi7B,UAGJL,EAAAv6B,UAAA+a,UAAA,aAIAwf,EAAAv6B,UAAA46B,OAAA,WACIj7B,KAAAoU,MAAA3T,aAAAjB,GAAAkB,OAAAM,OAAAhB,KAAAgf,IAAAve,aAAAjB,GAAAkB,OAAAM,OAAA,GAAAqG,EAAAxG,QAAAC,SAAAsT,MACApU,KAAA+6B,WAAAt6B,aAAAjB,GAAAkB,OAAAM,OAAA,GAAAqG,EAAAxG,QAAAC,SAAAuV,UAGEukB,EAAAv6B,UAAAwa,eAAA,mGAEF,OADA5I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA,CAAA,EAAAlB,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAkI,MAAA,GACA9U,EAAAxG,QAAAC,SAAAsT,MAAA,EACAvC,EAAA+B,eAAAS,YAAAC,wBAGJsmB,EAAAv6B,UAAA26B,cAAA,WAAA,IAAAl7B,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAoH,EAAAtZ,QAAAC,SAAA8wB,YAAA,WAAA,OAAAvuB,EAAAvD,OAAA,OAAA,EAAA,4DAII,OAHAqa,EAAAtZ,QAAAC,SAAA+wB,eACItO,EAAA1iB,QAAAC,SAAAgD,KAAA,oCAAA,CAAAqtB,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,IAAA,GAAA,OAEJ,CAAA,EAAAlf,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAkI,MAAA,GACAtK,EAAA+B,eAAAS,YAAAC,wBACH,SAAA4c,GACG3N,EAAA1iB,QAAAC,SAAAgD,KAAAotB,EAAA,CAAAC,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,GAAA,IAAA,UAIR6J,EAAAv6B,UAAAif,YAAA,WACIrN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+D,OAAAuC,EAAAqO,iBAAAC,SACA7D,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAE,MAAA,GACAtC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,MAAA,GACAxJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAkI,MAAA,GACAtK,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAxEapa,EAAA,CADpBxB,GACoBk7B,GAArB,CAAA1gB,EAAArZ,UAAqBO,EAAAP,QAAA+5B,olCCXrB,IAAAxzB,EAAA9H,EAAA,WACA2S,EAAA3S,EAAA,2BAEAuS,EAAAvS,EAAA,qBACA4a,EAAA5a,EAAA,eAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNw7B,GAHM37B,EAAAI,SAGN,SAAAE,GAAA,SAAAq7B,IAAA,IAAAp7B,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAq7B,SAAA,OAmBJ,OArBuC/6B,EAAA86B,EAAAr7B,GAInCq7B,EAAA76B,UAAAC,OAAA,WACIN,KAAAm7B,SAAA37B,GAAAmb,KAAA,YAAA3a,KAAAuM,MACAvM,KAAAm7B,SAAAvoB,GAAA,QAAA5S,KAAAo7B,aAAAp7B,OAGJk7B,EAAA76B,UAAAyS,UAAA,WACI9S,KAAAm7B,SAAA1hB,IAAA,QAAAzZ,KAAAo7B,aAAAp7B,OAGJk7B,EAAA76B,UAAAG,SAAA,aAEA06B,EAAA76B,UAAA+a,UAAA,aAEA8f,EAAA76B,UAAA+6B,aAAA,WACInpB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoH,OAnBana,EAAA,CADpBxB,GACoBw7B,GAArB,CAAAhhB,EAAArZ,UAAqBO,EAAAP,QAAAq6B,u1ECTrB,IAAA9zB,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA+H,EAAA/H,EAAA,0BACA0S,EAAA1S,EAAA,qCACAwS,EAAAxS,EAAA,YAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN27B,GAHM97B,EAAAI,SAGN,SAAAE,GAAA,SAAAw7B,IAAA,IAAAv7B,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAw7B,SAAA,KAGAx7B,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,KAEA1d,EAAAmnB,QAAA,KACAnnB,EAAAonB,iBAAA,KAEApnB,EAAAy7B,YAAA,KAEAz7B,EAAA07B,SAAA,KACA17B,EAAA27B,cAAA,KACA37B,EAAA47B,iBAAA,KAEA57B,EAAA67B,yBAAA,KACA77B,EAAA87B,sBAAA,KAEA97B,EAAA+7B,8BAAA,KACA/7B,EAAAg8B,2BAAA,KAEAh8B,EAAAi8B,eAAA,KACAj8B,EAAAk8B,iBAAA,KACAl8B,EAAAm8B,oBAAA,KAEAn8B,EAAAo8B,qBAAA,KACAp8B,EAAAq8B,uBAAA,KAEAr8B,EAAAs8B,0BAAA,KACAt8B,EAAAu8B,4BAAA,KACAv8B,EAAAw8B,8BAAA,OA8LJ,OAhOuCl8B,EAAAi7B,EAAAx7B,GAqCnCw7B,EAAAh7B,UAAAC,OAAA,WACIN,KAAAs7B,SAAA97B,GAAAmb,KAAA,iBAAA3a,KAAAuM,MAEAvM,KAAAinB,QAAAznB,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAknB,iBAAA1nB,GAAAmb,KAAA,qCAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OAEAV,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAIAvM,KAAAu7B,YAAA/7B,GAAAmb,KAAA,oBAAA3a,KAAAuM,MACAvM,KAAAw7B,SAAAh8B,GAAAmb,KAAA,WAAA3a,KAAAuM,MACAvM,KAAAy7B,cAAAj8B,GAAAmb,KAAA,QAAA3a,KAAAw7B,UACAx7B,KAAA07B,iBAAAl8B,GAAAmb,KAAA,YAAA3a,KAAAy7B,eAEAz7B,KAAA27B,yBAAAn8B,GAAAmb,KAAA,qCAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OACAV,KAAA47B,sBAAAp8B,GAAAmb,KAAA,8BAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OAEAV,KAAA67B,8BAAAr8B,GAAAmb,KAAA,kBAAA3a,KAAAy7B,eAAAh7B,aAAAjB,GAAAkB,OACAV,KAAA87B,2BAAAt8B,GAAAmb,KAAA,mBAAA3a,KAAAy7B,eAAAh7B,aAAAjB,GAAAkB,OAIAV,KAAA+7B,eAAAv8B,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAm8B,uBAAA38B,GAAAmb,KAAA,SAAA3a,KAAA+7B,gBAAAt7B,aAAAjB,GAAAkB,OACAV,KAAAk8B,qBAAA18B,GAAAmb,KAAA,gBAAA3a,KAAA+7B,gBAAAt7B,aAAAjB,GAAAsM,QAEA9L,KAAAg8B,iBAAAx8B,GAAAmb,KAAA,eAAA3a,KAAAuM,MACAvM,KAAAi8B,oBAAAz8B,GAAAmb,KAAA,QAAA3a,KAAAg8B,kBAEAh8B,KAAAo8B,0BAAA58B,GAAAmb,KAAA,mCAAA3a,KAAAg8B,kBAAAv7B,aAAAjB,GAAAsM,QACA9L,KAAAq8B,4BAAA78B,GAAAmb,KAAA,4BAAA3a,KAAAg8B,kBAAAv7B,aAAAjB,GAAAkB,OACAV,KAAAs8B,8BAAA98B,GAAAmb,KAAA,yBAAA3a,KAAAg8B,kBAAAv7B,aAAAjB,GAAAkB,OAEAV,KAAAu8B,qBAAA,EAAA,GAEAv8B,KAAAs7B,SAAA1oB,GAAA,QAAA5S,KAAAw8B,aAAAx8B,MAEAA,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,MACAA,KAAAinB,QAAArU,GAAA,QAAA5S,KAAAy8B,YAAAz8B,MAEAA,KAAAu7B,YAAA3oB,GAAA,QAAA5S,KAAA08B,gBAAA18B,MACAA,KAAAy7B,cAAA7oB,GAAA,QAAA5S,KAAA28B,qBAAA38B,MACAA,KAAA07B,iBAAA9oB,GAAA,QAAA5S,KAAA28B,qBAAA38B,MAEAA,KAAA+7B,eAAAnpB,GAAA,QAAA5S,KAAA48B,mBAAA58B,MACAA,KAAAi8B,oBAAArpB,GAAA,QAAA5S,KAAA68B,wBAAA78B,OAIJq7B,EAAAh7B,UAAAk8B,qBAAA,SAAAO,EAAAzrB,GACI,IAAAO,EAAAkrB,EAAAzrB,EACArR,KAAAq8B,4BAAAr7B,OAAAhB,KAAAm8B,uBAAAn7B,OAAA87B,EAAA,IAAAzrB,EACArR,KAAAo8B,0BAAAxqB,UAAA5R,KAAAk8B,qBAAAtqB,UAAAA,GAGJypB,EAAAh7B,UAAAyS,UAAA,WACI9S,KAAAs7B,SAAA7hB,IAAA,QAAAzZ,KAAAw8B,aAAAx8B,MAEAA,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,MACAA,KAAAinB,QAAAxN,IAAA,QAAAzZ,KAAAy8B,YAAAz8B,MAEAA,KAAAu7B,YAAA9hB,IAAA,QAAAzZ,KAAA08B,gBAAA18B,MACAA,KAAAy7B,cAAAhiB,IAAA,QAAAzZ,KAAA28B,qBAAA38B,MACAA,KAAA07B,iBAAAjiB,IAAA,QAAAzZ,KAAA28B,qBAAA38B,OAGEq7B,EAAAh7B,UAAAG,SAAA,sHACFR,KAAAw7B,SAAAhvB,QAAA,EAEAnF,EAAAxG,QAAAC,SAAAwU,WACItV,KAAAknB,iBAAAlmB,OAAAqG,EAAAxG,QAAAC,SAAAwU,SAAAkd,cAAAvnB,YAGJ,QAAA1L,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIyC,EAAAxG,QAAAC,SAAAwU,SAAA1Q,EAAAE,KACAhF,EAAAonB,iBAAAlmB,OAAA4D,EAAAE,KAAA0tB,cAAAvnB,aACJjH,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,sBAIG,OAAA,MAAAoG,EAAAxG,QAAAC,SAAAwU,SAAA,CAAA,EAAA,GACH,CAAA,EAAA,IAAAhU,QAAA,SAAAC,GAAA,OAAA8f,WAAA9f,EAAA,qBAAAwT,EAAAxR,2BAGJ,QAAAD,EAAA0O,EAAAlJ,eAAAK,gBAAA,IAAA7F,GAAAA,EAAAiH,sBAAAxG,KAAA,SAAAa,GAEI,IAAAm4B,EAAAn4B,EAAAE,KAAAk4B,uBACAxnB,EAAA,IAAAb,KACAa,EAAAynB,WAAAznB,EAAA0nB,aAAAH,GACA11B,EAAAxG,QAAAC,SAAA0U,WAAAA,EAEA1V,EAAA+7B,8BAAA76B,OACAlB,EAAA67B,yBAAA36B,OAAA4D,EAAAE,KAAA2Z,qBAAAxB,QAAA,KACJjZ,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,KAGJ+Q,EAAAlJ,eAAAK,SAAAwB,oBAAA5G,KAAA,SAAAa,GACIM,QAAAC,IAAAP,GACA9E,EAAAy8B,qBAAA33B,EAAAu4B,MAAA,KAGJnrB,EAAAlJ,eAAAK,SAAAuB,oBAAA3G,KAAA,SAAAa,GACIM,QAAAC,IAAAP,GACAyC,EAAAxG,QAAAC,SAAAuV,SAAA,iBAAAzR,EAAAwG,OAAAxG,EAAAwG,OAAA,cAIRiwB,EAAAh7B,UAAA+a,UAAA,aAEUigB,EAAAh7B,UAAA8yB,OAAA,WACN9rB,EAAAxG,QAAAC,SAAA0U,aACIxV,KAAA47B,sBAAA56B,OAAA8Q,EAAAsrB,8BAAA/1B,EAAAxG,QAAAC,SAAA0U,YACAxV,KAAAs8B,8BAAAt7B,OAAAhB,KAAA87B,2BAAA96B,OAAA8Q,EAAAurB,8BAAAh2B,EAAAxG,QAAAC,SAAA0U,cAIF6lB,EAAAh7B,UAAAm8B,aAAA,mGAGF,OAFAvqB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA2S,KAAArM,EAAAsM,eAAAC,MACA,CAAA,EAAA9B,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAE,MACA9M,EAAAxG,QAAAC,SAAAsT,MAAA,EACAvC,EAAA+B,eAAAS,YAAAC,wBAGJ+mB,EAAAh7B,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJ+f,EAAAh7B,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJ0c,EAAAh7B,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJmnB,EAAAh7B,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,UAGJyc,EAAAh7B,UAAAo8B,YAAA,WACIxqB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoe,OAGJgJ,EAAAh7B,UAAAq8B,gBAAA,WACIzqB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAAw7B,SAAAhvB,QAAA,GAGJ6uB,EAAAh7B,UAAAs8B,qBAAA,WACI1qB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAAw7B,SAAAhvB,QAAA,GAGJ6uB,EAAAh7B,UAAAu8B,mBAAA,WACI3qB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAAg8B,iBAAAxvB,QAAA,GAGJ6uB,EAAAh7B,UAAAw8B,wBAAA,WACI5qB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAAg8B,iBAAAxvB,QAAA,GA9NatL,EAAA,CADpBxB,GACoB27B,GAArB,CAAAnhB,EAAArZ,UAAqBO,EAAAP,QAAAw6B,6nECbrB,IAAArpB,EAAA1S,EAAA,wCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAEN49B,GAFM/9B,EAAAI,SAEN,IAAA2B,QAAA,SAAAC,EAAAC,GACI,GAAAhC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAE,gBAAAnC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAG,gBAAA,CACI,IAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAG,IAAA,mCACAH,EAAA07B,QAAAC,KAAA,UACA37B,EAAA07B,QAAAE,IAAA,eACA57B,EAAAI,OAAA,EACAJ,EAAAK,OAAA,WACIX,GAAA,IAEJM,EAAAW,QAAA,WAAA,OAAAhB,EAAA,IAAAiB,MAAA,oDACAX,SAAAY,KAAAC,YAAAd,OAKR67B,EAAA,IAAAp8B,QAAA,SAAAC,EAAAC,GACI,GAAAhC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAE,gBAAAnC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAG,gBAAA,CACI,IAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAG,IAAA,mCACAH,EAAA07B,QAAAC,KAAA,UACA37B,EAAA07B,QAAAE,IAAA,eACA57B,EAAAI,OAAA,EACAJ,EAAAK,OAAA,WACIX,GAAA,IAEJM,EAAAW,QAAA,WAAA,OAAAhB,EAAA,IAAAiB,MAAA,oDACAX,SAAAY,KAAAC,YAAAd,MAKRsR,EAAA,WAEI,SAAAA,IAWQnT,KAAA29B,WAAA,KACA39B,KAAA49B,aAAA,WAoDZ,OAlEaC,EAAA1qB,EAMTnQ,OAAAC,eAAAkQ,EAAA,WAAA,CAAAjQ,IAAA,WAII,OAHA26B,EAAA16B,YACI06B,EAAA16B,UAAA,IAAA06B,GAEJA,EAAA16B,2CAOSgQ,EAAA9S,UAAA+C,KAAA,WAAQ,OAAAC,EAAArD,UAAA,EAAAsB,QAAA,oEACC,OAAlB/B,EAAAS,KAAkB,CAAA,EAAAs9B,UACE,OADpB/9B,EAAAo+B,WAAA5oB,EAAAxR,OACAD,EAAAtD,KAAoB,CAAA,EAAA09B,UAEpB,OAFAp6B,EAAAs6B,aAAA7oB,EAAAxR,OAEAvD,KAAA29B,YAAA39B,KAAA49B,aACI,CAAA,EAAAt8B,QAAAC,QAAA,CAAAiC,SAAA,KAEA,CAAA,EAAAlC,QAAAC,QAAA,CAAAiC,SAAA,WAID2P,EAAA9S,UAAAwD,iBAAA,WAAP,IAAA/D,EAAAE,KACKqC,OAAAy7B,eAAA/5B,KAAA,iBAGGmB,QAAAC,IAAA,wBACA,IAAK,QAAA5F,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA+J,UAET,YAAAtF,MAAA,WACIlE,EAAAi+B,wBAID5qB,EAAA9S,UAAA09B,mBAAA,WACF17B,OAAA27B,eAAAj6B,KAAA,iBAGGmB,QAAAC,IAAA,wBACA,IAAK,QAAA5F,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA+J,UACT,aAGG6J,EAAA9S,UAAA+S,yBAAA,WACH,OAAA/Q,OAAAy7B,eAAA/5B,KAAA,iBAGImB,QAAAC,IAAA,wBACA,IAAK,QAAA5F,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA+J,UACT,aAGG6J,EAAA9S,UAAAiT,2BAAA,WACH,OAAAjR,OAAA27B,eAAAj6B,KAAA,iBAGImB,QAAAC,IAAA,wBACA,IAAK,QAAA5F,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA+J,UACT,aAhEKu0B,EAAA38B,EAAA,CADZxB,EAAA,sBACYyT,GAAb,GAAa/R,EAAA+R,kBAAAA,s7BCpCb,IAAA/L,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eAEA0S,EAAA1S,EAAA,qCACAuJ,EAAAvJ,EAAA,+BAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNu+B,GAHM1+B,EAAAI,SAGN,SAAAE,GAAA,SAAAo+B,IAAA,IAAAn+B,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAgf,WAAA,KACAhf,EAAAif,WAAA,KAEAjf,EAAAkf,IAAA,KACAlf,EAAAkW,MAAA,OAsCJ,OA7CoD5V,EAAA69B,EAAAp+B,GAShDo+B,EAAA59B,UAAA+C,KAAA,aAIA66B,EAAA59B,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,QAAA3a,KAAAuM,MACAvM,KAAA8e,WAAAtf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OACAra,KAAA+e,WAAAvf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OAEAra,KAAAgf,IAAAxf,GAAAmb,KAAA,MAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OACAV,KAAAgW,MAAAxW,GAAAmb,KAAA,QAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OAEAV,KAAA8e,WAAAlM,GAAA,QAAA5S,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAnM,GAAA,QAAA5S,KAAAmf,eAAAnf,OAIJi+B,EAAA59B,UAAAyS,UAAA,WACI9S,KAAA8e,WAAArF,IAAA,QAAAzZ,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAtF,IAAA,QAAAzZ,KAAAmf,eAAAnf,OAGJi+B,EAAA59B,UAAA6e,eAAA,iBACIjN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAA6f,2BAGJ6e,EAAA59B,UAAA8e,eAAA,WACIlN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEAf,EAAAlJ,eAAAK,SAAAH,UAAAjF,KAAA,WAEI8N,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAiqB,qBAAA,MA1CSh9B,EAAA,CADpBxB,GACoBu+B,GAArB,CAAA/jB,EAAArZ,UAAqBO,EAAAP,QAAAo9B,qYCTrB,IAAAE,EAAA,WAAA,SAAAA,IAgBYn+B,KAAAo+B,UAAA,GACAp+B,KAAAq+B,YAAA,GA6GZ,OA1HWF,EAAA53B,YAAA,WAKH,OAJA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,MAGJA,KAAAmD,WAGJH,OAAAC,eAAAk7B,EAAA,WAAA,CAAAj7B,IAAA,WACI,OAAAlD,KAAAuG,+CAOG43B,EAAA99B,UAAAi+B,SAAA,SAAAC,EAAApmB,GACH,IAAAhS,EAAAo4B,EAAAp4B,KACAnG,KAAAq+B,YAAAl4B,GAAAo4B,EACA,IAAAhyB,EAAA,KACA,GAAAvM,KAAAo+B,UAAAI,eAAAr4B,GAGQoG,GAFJkyB,EAAAz+B,KAAAo+B,UAAAj4B,IACAyH,OAAA,EACI6wB,EAAAv7B,MAEA1D,GAAAk/B,YAAAH,OAED,CAEH,IAAAE,EAAA,IAAAj/B,GAAAm/B,SACA3+B,KAAAo+B,UAAAj4B,GAAAs4B,EAEAlyB,EAAA/M,GAAAk/B,YAAAH,GAMJ,OAJApmB,IACI5L,EAAA4L,OAAAA,EACA5L,EAAAC,QAAA,GAEJD,GAIG4xB,EAAA99B,UAAAiY,QAAA,SAAAsmB,EAAAzmB,EAAAxK,GACH,IAAAkxB,EACA14B,EACA,GAAA,iBAAAy4B,GAGI,GADAz4B,EAAAy4B,IADAC,EAAA7+B,KAAAq+B,YAAAO,IAII,OADA15B,QAAAC,IAAA,8BAAAgB,GACA,UAIJ04B,EAAAD,EACAz4B,EAAAy4B,EAAA95B,KAAAqB,KAGJ,IAAAoG,EAAA,KACA,GAAAvM,KAAAo+B,UAAAI,eAAAr4B,GAIQoG,GAFJkyB,EAAAz+B,KAAAo+B,UAAAj4B,IACAyH,OAAA,EACI6wB,EAAAv7B,MAEA1D,GAAAk/B,YAAAG,OAED,CAEH,IAAAJ,EAAA,IAAAj/B,GAAAm/B,SACA3+B,KAAAo+B,UAAAj4B,GAAAs4B,EAEAlyB,EAAA/M,GAAAk/B,YAAAG,GAQJ,OALA1mB,IACI5L,EAAA4L,OAAAA,EACA5L,EAAAC,QAAA,EACAmB,IAASpB,EAAA4W,SAAAxV,IAEbpB,GAIG4xB,EAAA99B,UAAAy+B,QAAA,SAAAvyB,EAAAsB,GACH,QADiC,IAAAA,IAAAA,GAAA,GACjCtB,EAAA,CAKA,IAAApG,EAAAoG,EAAApG,KACAs4B,EAAA,KAEAz+B,KAAAo+B,UAAAI,eAAAr4B,GAEIs4B,EAAAz+B,KAAAo+B,UAAAj4B,IAGAs4B,EAAA,IAAAj/B,GAAAm/B,SACA3+B,KAAAo+B,UAAAj4B,GAAAs4B,GAGJA,EAAAM,IAAAxyB,KAIG4xB,EAAA99B,UAAA2+B,UAAA,SAAA74B,GACHnG,KAAAo+B,UAAAI,eAAAr4B,IACInG,KAAAo+B,UAAAj4B,GACA8T,SAKDkkB,EAAA99B,UAAA4+B,UAAA,SAAA94B,EAAAy4B,GACH5+B,KAAAq+B,YAAAl4B,GAAAy4B,GAIGT,EAAA99B,UAAA6+B,UAAA,SAAA/4B,GACH,OAAAnG,KAAAq+B,YAAAl4B,IA1HWg4B,EAAAh7B,UAAA,KA4HnBg7B,EA9HA,GAAqB/8B,EAAAP,QAAAs9B,22BCFrB,IAAA/2B,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eAGAuJ,EAAAvJ,EAAA,+BACA0S,EAAA1S,EAAA,qCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNy/B,GAHM5/B,EAAAI,SAGN,SAAAE,GAAA,SAAAs/B,IAAA,IAAAr/B,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAs/B,WAAA,KACAt/B,EAAAu/B,SAAA,KAGAv/B,EAAAw/B,YAAA,KACAx/B,EAAAy/B,YAAA,KACAz/B,EAAA0/B,WAAA,KACA1/B,EAAAgf,WAAA,KACAhf,EAAA2/B,WAAA,KAGA3/B,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,KACA1d,EAAA4/B,cAAA,KAGA5/B,EAAA6/B,uBAAA,KACA7/B,EAAA8/B,wBAAA,KACA9/B,EAAA+/B,iBAAA,KACA//B,EAAAggC,wBAAA,KAEAhgC,EAAAigC,gBAAA,KACAjgC,EAAAkgC,gBAAA,OAmMJ,OA7N0C5/B,EAAA++B,EAAAt/B,GA4BtCs/B,EAAA9+B,UAAAC,OAAA,WACIN,KAAAo/B,WAAA5/B,GAAAmb,KAAA,iCAAA3a,KAAAuM,MACAvM,KAAAq/B,SAAA7/B,GAAAmb,KAAA,2BAAA3a,KAAAuM,MAEAvM,KAAAs/B,YAAA9/B,GAAAmb,KAAA,oBAAA3a,KAAAuM,MACAvM,KAAAu/B,YAAA//B,GAAAmb,KAAA,iCAAA3a,KAAAuM,MACAvM,KAAAw/B,WAAAhgC,GAAAmb,KAAA,iCAAA3a,KAAAuM,MACAvM,KAAA8e,WAAAtf,GAAAmb,KAAA,gCAAA3a,KAAAuM,MACAvM,KAAAy/B,WAAAjgC,GAAAmb,KAAA,+BAAA3a,KAAAuM,MACAvM,KAAA0/B,cAAAlgC,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAA2/B,uBAAAngC,GAAAmb,KAAA,kBAAA3a,KAAAuM,MAEAvM,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAEAvM,KAAA+/B,gBAAAvgC,GAAAmb,KAAA,oBAAA3a,KAAAuM,MACAvM,KAAA4/B,wBAAApgC,GAAAmb,KAAA,oCAAA3a,KAAAuM,MACAvM,KAAA6/B,iBAAArgC,GAAAmb,KAAA,kCAAA3a,KAAAuM,MAEAvM,KAAAggC,gBAAAxgC,GAAAmb,KAAA,oBAAA3a,KAAAuM,MACAvM,KAAA8/B,wBAAAtgC,GAAAmb,KAAA,kCAAA3a,KAAAuM,MAGAvM,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,MAEAA,KAAA2/B,uBAAA/sB,GAAA,QAAA5S,KAAAigC,sBAAAjgC,MACAA,KAAA4/B,wBAAAhtB,GAAA,QAAA5S,KAAAkgC,uBAAAlgC,MACAA,KAAA6/B,iBAAAjtB,GAAA,QAAA5S,KAAAmgC,qBAAAngC,MACAA,KAAA8/B,wBAAAltB,GAAA,QAAA5S,KAAAogC,uBAAApgC,MAEAA,KAAAs/B,YAAA1sB,GAAA,QAAA5S,KAAAqgC,gBAAArgC,MACAA,KAAAu/B,YAAA3sB,GAAA,QAAA5S,KAAAsgC,gBAAAtgC,MACAA,KAAAw/B,WAAA5sB,GAAA,QAAA5S,KAAAugC,eAAAvgC,MACAA,KAAA8e,WAAAlM,GAAA,QAAA5S,KAAAkf,eAAAlf,MACAA,KAAAy/B,WAAA7sB,GAAA,QAAA5S,KAAAwgC,eAAAxgC,MACAA,KAAA0/B,cAAA9sB,GAAA,QAAA5S,KAAAygC,mBAAAzgC,OAMJm/B,EAAA9+B,UAAAyS,UAAA,WACI9S,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,MAEAA,KAAA2/B,uBAAAlmB,IAAA,QAAAzZ,KAAAigC,sBAAAjgC,MACAA,KAAA4/B,wBAAAnmB,IAAA,QAAAzZ,KAAAkgC,uBAAAlgC,MACAA,KAAA6/B,iBAAApmB,IAAA,QAAAzZ,KAAAmgC,qBAAAngC,MACAA,KAAA8/B,wBAAArmB,IAAA,QAAAzZ,KAAAogC,uBAAApgC,MAGAA,KAAAs/B,YAAA7lB,IAAA,QAAAzZ,KAAAqgC,gBAAArgC,MACAA,KAAAu/B,YAAA9lB,IAAA,QAAAzZ,KAAAsgC,gBAAAtgC,MACAA,KAAAw/B,WAAA/lB,IAAA,QAAAzZ,KAAAugC,eAAAvgC,MACAA,KAAA8e,WAAArF,IAAA,QAAAzZ,KAAAkf,eAAAlf,MACAA,KAAAy/B,WAAAhmB,IAAA,QAAAzZ,KAAAwgC,eAAAxgC,MACAA,KAAA0/B,cAAAjmB,IAAA,QAAAzZ,KAAAygC,mBAAAzgC,OAGJm/B,EAAA9+B,UAAAG,SAAA,WAAA,MAAAV,EAAAE,KACK,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACG9E,EAAAu/B,SAAA5+B,aAAAjB,GAAAkB,OAAAM,OAAA,IAAA4D,EAAAE,KAAAyZ,WACJva,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAIRk+B,EAAA9+B,UAAA+a,UAAA,aAEA+jB,EAAA9+B,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJ6jB,EAAA9+B,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJwgB,EAAA9+B,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJirB,EAAA9+B,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,UAGJugB,EAAA9+B,UAAAggC,gBAAA,WACIpuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,UAGJvB,EAAA9+B,UAAAigC,gBAAA,WACIruB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,QAGJosB,EAAA9+B,UAAAkgC,eAAA,WACItuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,QAGJosB,EAAA9+B,UAAA6e,eAAA,iBACIjN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAA6f,2BAGJ+f,EAAA9+B,UAAAmgC,eAAA,iBACIvuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAAohC,mBAGJxB,EAAA9+B,UAAAogC,mBAAA,iBACIxuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAAqhC,uBAGJzB,EAAA9+B,UAAA4/B,sBAAA,WAAA,MAAAngC,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIA,EAAAE,KAAA2tB,WAII3yB,EAAAkgC,gBAAAxzB,QAAA,EAHA1M,EAAA+gC,wBAKR78B,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAKRk+B,EAAA9+B,UAAA6/B,uBAAA,WACIjuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA+/B,gBAAAvzB,QAAA,GAGJ2yB,EAAA9+B,UAAA+/B,uBAAA,WACInuB,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAAggC,gBAAAxzB,QAAA,GAGJ2yB,EAAA9+B,UAAAwgC,oBAAA,WACI7gC,KAAA+/B,gBAAAvzB,QAAA,GAGJ2yB,EAAA9+B,UAAA8/B,qBAAA,WAAA,MAAArgC,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAiM,qBAAAzH,KAAA,SAAAa,GACIM,QAAAC,IAAAP,EAAA0tB,cAEAzpB,EAAAK,eAAAC,SAAAopB,YAAA3tB,EAAA0tB,aAAA,SAAAztB,EAAA4B,GAEI,SAAA5B,IACI/E,EAAAigC,gBAAAvzB,QAAA,EACA1M,EAAAkgC,gBAAAxzB,QAAA,GAGJtH,QAAAC,IAAA,oBACAD,QAAAC,IAAAN,GACAK,QAAAC,IAAAsB,OAGRzC,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,MA1NSC,EAAA,CADpBxB,GACoBy/B,GAArB,CAAAjlB,EAAArZ,UAAqBO,EAAAP,QAAAs+B,2wDCXrB,IAAA93B,EAAA/H,EAAA,iBACA0Y,EAAA1Y,EAAA,iBAEAwhC,EAAA,WAAA,SAAAA,IAEW9gC,KAAA+gC,QAAA,GAEA/gC,KAAAghC,UAAA,GAEAhhC,KAAAihC,QAAA,GAqEX,OAjEWH,EAAAv6B,YAAA,WAKH,OAJA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,MAGJA,KAAAmD,WAGJH,OAAAC,eAAA69B,EAAA,WAAA,CAAA59B,IAAA,WACI,OAAAlD,KAAAuG,+CAGSu6B,EAAAzgC,UAAA2f,QAAA,SAAAD,EAAA/G,eAAuB,IAAAA,IAAAA,EAAA,uEAChC,MAAA,CAAA,EAAA,IAAA1X,QAAA,SAAAC,EAAAC,GACI,IAAA0/B,EAAA75B,EAAAxG,QAAAC,SAAA6U,YACAnW,GAAA2hC,UAAAC,QAAArhB,EAAAhH,KAAAgH,EAAAlH,QAAA,SAAAwoB,EAAAC,GAEI,GAAAvhB,EAAA/G,MAAA,EAAA,CAEI,IAAArD,EAAAkT,KAAAC,MAAA,KAAAoY,EAAAnhB,EAAA/G,MAAAqoB,EAAAC,IAAA,IACAj6B,EAAAxG,QAAAC,SAAA6U,YAAAkT,KAAA0Y,IAAA5rB,EAAAtO,EAAAxG,QAAAC,SAAA6U,eAER,SAAA1J,EAAAu1B,GAEI,IAAAC,EACA,GAFAx1B,GAASzK,GAAAA,IAET,SAAAue,EAAA7V,KACI,IAAA,IAAAqH,EAAA,EAAAA,EAAAiwB,EAAAhwB,OAAAD,IACIkwB,EAAAD,EAAAjwB,GACAzR,EAAAihC,QAAAU,EAAAt7B,QAA+BrG,EAAAihC,QAAAU,EAAAt7B,MAAAs7B,GAGvC,GAAA,UAAA1hB,EAAA7V,KACI,IAAAqH,EAAA,EAAAA,EAAAiwB,EAAAhwB,OAAAD,IACIkwB,EAAAD,EAAAjwB,GACAyG,EAAAnX,QAAAC,SAAAm+B,UAAAwC,EAAA38B,KAAAqB,KAAAs7B,GAGR,GAAA,UAAA1hB,EAAA7V,KACI,IAAAqH,EAAA,EAAAA,EAAAiwB,EAAAhwB,OAAAD,IACIkwB,EAAAD,EAAAjwB,GACAzR,EAAAkhC,UAAAS,EAAAt7B,QAAiCrG,EAAAkhC,UAAAS,EAAAt7B,MAAAs7B,GAGzC,GAAA,QAAA1hB,EAAA7V,KACI,IAAAqH,EAAA,EAAAA,EAAAiwB,EAAAhwB,OAAAD,IACIkwB,EAAAD,EAAAjwB,GACAzR,EAAAmhC,QAAAQ,EAAAt7B,QAA+BrG,EAAAmhC,QAAAQ,EAAAt7B,MAAAs7B,EAAA76B,MAGvCrF,GAAAA,cAKLu/B,EAAAzgC,UAAA2H,QAAA,SAAA7B,GACH,OAAAnG,KAAA+gC,QAAA56B,IAGG26B,EAAAzgC,UAAAqhC,UAAA,SAAAv7B,GACH,OAAAnG,KAAAghC,UAAA76B,IAGG26B,EAAAzgC,UAAAshC,QAAA,SAAAx7B,GACH,OAAAnG,KAAAihC,QAAA96B,IAjEW26B,EAAA39B,UAAA,KAmEnB29B,EA3EA,GAAqB1/B,EAAAP,QAAAigC,+NCJrB,IAAAhvB,EAAAxS,EAAA,YACA2S,EAAA3S,EAAA,kBAGAsiC,EAAA,WAAA,SAAAA,IAUI5hC,KAAA6hC,WAAA,yDACA7hC,KAAA8hC,SAAA,GAEA9hC,KAAA+hC,QAAA,GACQ/hC,KAAAgiC,QAAA,KAERhiC,KAAAiiC,eAAA,GACQjiC,KAAAkiC,eAAA,KAERliC,KAAAmiC,SAAA,GACQniC,KAAAoiC,SAAA,KAERpiC,KAAAqiC,YAAA,GACQriC,KAAAsiC,YAAA,KAERtiC,KAAAuiC,YAAA,GACQviC,KAAAwiC,YAAA,KAERxiC,KAAAyiC,cAAA,KACAziC,KAAA0iC,iBAAA,EACA1iC,KAAA2iC,eAAA,KACA3iC,KAAA4iC,gBAAA,IACA5iC,KAAA6iC,UAAA,KACA7iC,KAAA8iC,aAAA,EACA9iC,KAAA+iC,YAAA,GA4fJ,OA3hBI//B,OAAAC,eAAA2+B,EAAA,WAAA,CAAA1+B,IAAA,WAII,OAHA,MAAAlD,KAAAmD,YACInD,KAAAmD,UAAA,IAAAy+B,GAEJ5hC,KAAAmD,2CA8BJy+B,EAAAvhC,UAAAwxB,YAAA,WACI,IAAAnwB,EAAA,KAMA,OALAlC,GAAAiC,IAAAC,UAAAlC,GAAAiC,IAAAuhC,YACIthC,EAAAW,OAAA,GACG7C,GAAAiC,IAAAC,UAAAlC,GAAAiC,IAAAwhC,iBACHvhC,EAAAW,OAAA,IAEJX,GAKJkgC,EAAAvhC,UAAA6iC,YAAA,SAAA9qB,QAAY,IAAAA,IAAAA,EAAA,CAAApC,MAAA,GAAAmtB,SAAA,GAAAC,MAAA,KACR,IAAA1hC,EAAA1B,KAAA6xB,cACAnwB,IAIA0W,EAAApC,MAAAoC,EAAApC,OAAAhW,KAAA6hC,WACAzpB,EAAA+qB,SAAA/qB,EAAA+qB,UAAAnjC,KAAA8hC,SACApgC,EAAA2hC,gBAAAjrB,KAIJwpB,EAAAvhC,UAAA6f,aAAA,SAAA9H,QAAa,IAAAA,IAAAA,EAAA,CAAApC,MAAA,GAAAmtB,SAAA,GAAAC,MAAA,KACT,IAAA1hC,EAAA1B,KAAA6xB,cACAnwB,IAIAA,EAAA4hC,cAAA,CACI9/B,QAAA,aACA+/B,KAAA,eAEJnrB,EAAApC,MAAAoC,EAAApC,OAAAhW,KAAA6hC,WACAzpB,EAAA+qB,SAAA/qB,EAAA+qB,UAAAnjC,KAAA8hC,SACApgC,EAAA8hC,kBAAA,WACI,OAAAprB,MAKRwpB,EAAAvhC,UAAAojC,cAAA,SAAA/P,GACI,IAAAhyB,EAAA1B,KAAA6xB,cACA,GAAAnwB,EAAA,CAIA,IACA0hC,EADA1hC,EAAAgiC,uBACAN,MACAt+B,EAAA,KAIA,OAHAs+B,GAAAA,EAAA1P,KACI5uB,EAAAs+B,EAAA1P,IAEJ5uB,IAIJ88B,EAAAvhC,UAAAsjC,UAAA,SAAAC,GACI,GAAA,IAAAA,EAAA,CACA,IAAAliC,EAAA1B,KAAA6xB,cACAnwB,EAIAA,EAAAmiC,sBAAA,CACID,MAAAA,IAJA5jC,KAAA8jC,cAAAF,KASRhC,EAAAvhC,UAAAyjC,cAAA,SAAAr9B,GACIpE,OAAA0hC,KAAAt9B,IAIJm7B,EAAAvhC,UAAA4f,qBAAA,gBACI,IAAA5d,OAAA,IAIAA,OAAA,GAAA2hC,uBAAA,WAEI/xB,EAAApR,QAAAC,SAAA8G,eAKRg6B,EAAAvhC,UAAA+f,aAAA,WAAA,IAAAtgB,EAAAE,KACI0B,EAAA1B,KAAA6xB,cACA,GAAAnwB,GAIA,IAAA1B,KAAAmiC,SAAA,CAIA,IAAA8B,EAAAviC,EAAAwiC,oBACA,MAAAlkC,KAAAoiC,WACIpiC,KAAAoiC,SAAA1gC,EAAAyiC,eAAA,CACIC,SAAApkC,KAAAmiC,SACAkC,YAAA,GACAC,MAAA,CACItiB,OAAAiiB,EAAAM,aAAA,GACAC,KAAA,EACAC,IAAA,IACA1iB,MAAAkiB,EAAAS,eAGR1kC,KAAAoiC,SAAAuC,SAAA,WACI7kC,EAAAsiC,SAAAkC,MAAAG,IAAAR,EAAAM,aAAAzkC,EAAAsiC,SAAAkC,MAAAM,WACA9kC,EAAAsiC,SAAAkC,MAAAE,KAAAP,EAAAS,YAAA,EAAA5kC,EAAAsiC,SAAAkC,MAAAO,UAAA,IAEJ7kC,KAAAoiC,SAAA0C,QAAA,iBAORlD,EAAAvhC,UAAA4a,eAAA,SAAA0U,GACI3vB,KAAA6xB,eAKA7xB,KAAAoiC,WACIzS,EAAA3vB,KAAAoiC,SAAAt+B,OAAA9D,KAAAoiC,SAAA31B,SAKRm1B,EAAAvhC,UAAAggB,mBAAA,WACI,IAAA3e,EAAA1B,KAAA6xB,cACAnwB,GAIA,IAAA1B,KAAAiiC,gBAIA,MAAAjiC,KAAAkiC,iBACIliC,KAAAkiC,eAAAxgC,EAAAqjC,qBAAA,CACIX,SAAApkC,KAAAiiC,iBAEJjiC,KAAAkiC,eAAA4C,QAAA,gBAORlD,EAAAvhC,UAAA2kC,mBAAA,WACIhlC,KAAA6xB,eAKA7xB,KAAAkiC,gBACIliC,KAAAkiC,eAAAp+B,OAAAE,MAAA,eAOR49B,EAAAvhC,UAAAigB,YAAA,WACI,IAAA5e,EAAA1B,KAAA6xB,cACAnwB,GAIA,IAAA1B,KAAA+hC,SAIA,MAAA/hC,KAAAgiC,UACIhiC,KAAAgiC,QAAAtgC,EAAAujC,sBAAA,CACIb,SAAApkC,KAAA+hC,UAEJ/hC,KAAAgiC,QAAA8C,QAAA,gBAORlD,EAAAvhC,UAAAuxB,YAAA,SAAApuB,EAAA+/B,GAAA,IAAAzjC,EAAAE,KAEI,OADAA,KAAA6xB,cAKA7xB,KAAAgiC,SACIhiC,KAAAgiC,QAAAkD,WACAllC,KAAAgiC,QAAAmD,QAAA,SAAA5oB,GAEI,OADAzc,EAAAkiC,QAAAkD,WACA3oB,GAAAA,EAAA6oB,cAAAC,IAAA9oB,EACI/Y,GAAAA,EAAA,8CAEA+/B,GAAAA,EAAA,+CAGRvjC,KAAAgiC,QAAAl+B,OAAAE,MAAA,WACIlE,EAAAkiC,QAAAsD,OACKvhC,KAAA,WAAA,OAAAjE,EAAAkiC,QAAAl+B,SACAE,MAAA,iBAMTu/B,GAAAA,EAAA,8CArBA//B,GAAAA,EAAA,6EA0BRo+B,EAAAvhC,UAAAkgB,gBAAA,WACI,IAAA7e,EAAA1B,KAAA6xB,cACA,GAAAnwB,GAIA,IAAA1B,KAAAqiC,YAAA,CAIA,IAAA4B,EAAAviC,EAAAwiC,oBACA,MAAAlkC,KAAAsiC,cACItiC,KAAAsiC,YAAA5gC,EAAA6jC,eAAA,CACInB,SAAApkC,KAAAqiC,YACAgC,YAAA,GACAC,MAAA,CACIviB,MAAA,IACAyiB,MAAAP,EAAAuB,YAAA,KAAA,EACAf,IAAAR,EAAAwB,aAAA,IACAC,MAAA,KAGR1lC,KAAAsiC,YAAAwC,QAAA,iBAORlD,EAAAvhC,UAAAslC,kBAAA,SAAAhW,QAAkB,IAAAA,IAAAA,GAAA,GACd3vB,KAAA6xB,eAKA7xB,KAAAsiC,cAAsB3S,EAAA3vB,KAAAsiC,YAAAx+B,OAAA9D,KAAAsiC,YAAA71B,SAI1Bm1B,EAAAvhC,UAAAmgB,gBAAA,WACI,IAAA9e,EAAA1B,KAAA6xB,cACA,GAAAnwB,GAIA,IAAA1B,KAAAuiC,YAAA,CAIA,IAAA0B,EAAAviC,EAAAwiC,oBACA,MAAAlkC,KAAAwiC,cACIxiC,KAAAwiC,YAAA9gC,EAAA6jC,eAAA,CACInB,SAAApkC,KAAAuiC,YACA8B,YAAA,GACAC,MAAA,CACIviB,MAAA,GACAyiB,KAAAP,EAAAuB,YAAA,GACAf,IAAA,GACAiB,MAAA,KAGR1lC,KAAAwiC,YAAAsC,QAAA,iBAORlD,EAAAvhC,UAAAulC,kBAAA,SAAAjW,QAAkB,IAAAA,IAAAA,GAAA,GACd3vB,KAAA6xB,eAKA7xB,KAAAwiC,cAAsB7S,EAAA3vB,KAAAwiC,YAAA1+B,OAAA9D,KAAAwiC,YAAA/1B,SAI1Bm1B,EAAAvhC,UAAA8f,QAAA,gBACI,IAAA9d,OAAA,IAIAA,OAAA,GAAAwjC,YAAA,KASJjE,EAAAvhC,UAAAylC,QAAA,SAAAhhC,QACI,IAAAzC,OAAA,IAIAA,OAAA,GAAAwjC,YAAA,CAEI/gC,KAAAA,KAKR88B,EAAAvhC,UAAA0lC,oBAAA,WAAA,IAAAjmC,EAAAE,UACI,IAAAqC,OAAA,KAIArC,KAAAyiC,cAAApgC,OAAA,GAAA2jC,yBACAhmC,KAAA0iC,iBAAA,EACA1iC,KAAA8iC,aAAA,EACA9iC,KAAA2iC,eAAAhuB,KAAA1E,OAAA,IAAA0E,MAAA1J,YAEAjL,KAAAyiC,cAAAwD,QAAA,cAKAjmC,KAAAyiC,cAAAx1B,MAAA,CACIi5B,SAAAlmC,KAAA4iC,kBAGJ5iC,KAAAyiC,cAAA0D,OAAA,SAAA5pB,GACIzc,EAAA4iC,iBAAA,EACA5iC,EAAA+iC,UAAAtmB,EAAAsmB,YAIJ7iC,KAAAyiC,cAAAqC,QAAA,gBAMJlD,EAAAvhC,UAAA+lC,kBAAA,gBACI,IAAA/jC,OAAA,IAIArC,KAAAyiC,iBACI9tB,KAAA1E,OAAA,IAAA0E,MAAA1J,YACAjL,KAAA2iC,gBAAA,KAAA,EACI3iC,KAAA8iC,aAAA,EAEA9iC,KAAA8iC,aAAA,EAEJ9iC,KAAAyiC,cAAAr6B,SASRw5B,EAAAvhC,UAAAgmC,oBAAA,SAAA7iC,EAAA+/B,QACI,IAAAlhC,OAAA,IAIA,GAAArC,KAAA8iC,eAIA9iC,KAAA0iC,iBAAA,EACArgC,OAAA,GAAAghC,gBAAA,CACIiD,QAAA,QACAtwB,MAAA,GACAmtB,SAAA,GACAC,MAAA,GACAmD,MAAA,CACI1D,UAAA7iC,KAAA6iC,UACAE,YAAA/iC,KAAA+iC,YACAyD,iBAAA,GAEJhjC,QAAA,WACIA,GAAAA,KAEJ+/B,KAAA,WACIA,GAAAA,SAMZ3B,EAAAvhC,UAAAomC,aAAA,WACI,OAAAzmC,KAAA8iC,cAIJlB,EAAAvhC,UAAAqmC,aAAA,SAAAC,GACI,IAAAC,EAAA,CAAA/hC,QAAA,EAAAC,KAAA,KAAAosB,IAAA,kCACA7uB,OAAA,GAAAwkC,MAAA,CACIrjC,QAAA,SAAA+Y,GACIA,EAAAuqB,MACIF,EAAA/hC,QAAA,EACA+hC,EAAA9hC,KAAAyX,EAAAuqB,KACAF,EAAA1V,IAAA,+BACAyV,GAAAA,EAAAC,IAEAD,GAAAA,EAAAC,IAGRrD,KAAA,WACIoD,GAAAA,EAAAC,OAMZhF,EAAAvhC,UAAA0mC,aAAA,SAAAJ,GACI,QAAA,IAAAtkC,OAAA,GAAA,CAIA,IAAAukC,EAAA,CAAA/hC,QAAA,EAAAC,KAAA,KAAAosB,IAAA,oBACA7uB,OAAA,GAAA2kC,WAAA,CACIxjC,QAAA,SAAA+Y,GACI,GAAAA,EAAA0qB,YAAA,kBACI5kC,OAAA,GAAA6kC,YAAA,CACI1jC,QAAA,SAAA+Y,GACI,IAAA4qB,EAAA5qB,EAAA6qB,SACAC,EAAA,CAAAC,OAAAx1B,EAAAy1B,OAAAC,SAAAL,EAAAM,SAAAC,OAAAP,EAAAO,OAAAC,OAAAR,EAAAS,WACAhB,EAAA/hC,QAAA,EACA+hC,EAAA9hC,KAAAuiC,EACAT,EAAA1V,IAAA,aACAyV,GAAAA,EAAAC,IAEJrD,KAAA,WACIoD,GAAAA,EAAAC,UAGL,CACH,IAAAnlC,EAAAY,OAAA,GAAA6hC,oBACAniB,EAAAtgB,EAAA+jC,YACAxjB,EAAAvgB,EAAAgkC,aACAoC,EAAAxlC,OAAA,GAAAylC,qBAAA,CACI59B,KAAA,OACAmpB,KAAA,GACAiR,MAAA,CACIE,KAAA,EACAC,IAAA,EACA1iB,MAAAA,EACAC,OAAAA,EACA+lB,gBAAA,YACAhX,MAAA,UACAiX,SAAA,GACAC,UAAA,SACAC,WAAAlmB,KAiBR6lB,EAAAM,MAdA,SAAA5rB,GAEI,GADAsrB,EAAAO,UACA7rB,EAAA6qB,SAAA,CACI,IAAAD,EAAA5qB,EAAA6qB,SACAC,EAAA,CAAAC,OAAAx1B,EAAAy1B,OAAAC,SAAAL,EAAAM,SAAAC,OAAAP,EAAAO,OAAAC,OAAAR,EAAAS,WACAhB,EAAA/hC,QAAA,EACA+hC,EAAA9hC,KAAAuiC,EACAT,EAAA1V,IAAA,uBACAyV,GAAAA,EAAAC,QAEAA,EAAA1V,IAAA,qBACAyV,GAAAA,EAAAC,OAMhBrD,KAAA,WACIoD,GAAAA,EAAAC,QAMZhF,EAAAvhC,UAAAgoC,kBAAA,SAAA1B,GACI,IAAAC,EAAA,CAAA/hC,QAAA,EAAAC,KAAA,KAAAosB,IAAA,sBAGAsW,EAAA,IADA,IAAA7yB,MAAAwC,UAEAqwB,EAAA,MAAAA,EAAAc,UAAAd,EAAAh2B,OAAA,GACA,IAAA61B,EAAA,CAAAC,OAAAx1B,EAAAy1B,OAAAC,SAAAA,EAAAE,OAAA,EAAAC,OAAA,IACAf,EAAA9hC,KAAAuiC,EACAV,GAAAA,EAAAC,IA3hBUhF,EAAAz+B,UAAA,KA6hBlBy+B,EA9hBA,GAAqBxgC,EAAAP,QAAA+gC,q7BCJrB,IAAAx6B,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eAEAuJ,EAAAvJ,EAAA,+BACA+H,EAAA/H,EAAA,0BAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAIN6oC,GAJMhpC,EAAAI,SAIN,SAAAE,GAAA,SAAA0oC,IAAA,IAAAzoC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAgf,WAAA,KACAhf,EAAAif,WAAA,KAEAjf,EAAAkf,IAAA,KACAlf,EAAAkW,MAAA,OAwCJ,OA/CsD5V,EAAAmoC,EAAA1oC,GASlD0oC,EAAAloC,UAAA+C,KAAA,aAIAmlC,EAAAloC,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,QAAA3a,KAAAuM,MACAvM,KAAA8e,WAAAtf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OACAra,KAAA+e,WAAAvf,GAAAmb,KAAA,sBAAA3a,KAAAqa,OAEAra,KAAAgf,IAAAxf,GAAAmb,KAAA,MAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OACAV,KAAAgW,MAAAxW,GAAAmb,KAAA,QAAA3a,KAAAqa,OAAA5Z,aAAAjB,GAAAkB,OAEAV,KAAA8e,WAAAlM,GAAA,QAAA5S,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAnM,GAAA,QAAA5S,KAAAmf,eAAAnf,OAIJuoC,EAAAloC,UAAAyS,UAAA,WACI9S,KAAA8e,WAAArF,IAAA,QAAAzZ,KAAAkf,eAAAlf,MACAA,KAAA+e,WAAAtF,IAAA,QAAAzZ,KAAAmf,eAAAnf,OAGJuoC,EAAAloC,UAAA6e,eAAA,iBACIjN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAsJ,EAAAK,eAAAC,gBAAA,IAAA5J,GAAAA,EAAA6f,2BAGJmpB,EAAAloC,UAAA8e,eAAA,WACIlN,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA1L,EAAAxG,QAAAC,SAAAwV,YACIzE,EAAA+B,eAAAS,YAAA4H,WAAA7U,EAAA6M,aAAAkI,MAGAtK,EAAA+B,eAAAS,YAAAC,eA5CSpT,EAAA,CADpBxB,GACoB6oC,GAArB,CAAAruB,EAAArZ,UAAqBO,EAAAP,QAAA0nC,4jCCVrB,IAAAnhC,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA+H,EAAA/H,EAAA,0BACA6a,EAAA7a,EAAA,yBACAD,EAAAC,EAAA,kCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN8oC,GAHMjpC,EAAAI,SAGN,SAAAE,GAAA,SAAA2oC,IAAA,IAAA1oC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAA0a,SAAA,KAEA1a,EAAA2a,SAAA,KACA3a,EAAA4a,SAAA,KAEA5a,EAAA2oC,UAAA,KACA3oC,EAAA4oC,UAAA,KACA5oC,EAAA6oC,UAAA,KACA7oC,EAAA8oC,UAAA,KACA9oC,EAAA+oC,UAAA,KAGA/oC,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,KAGA1d,EAAAgpC,gBAAA,KAEAhpC,EAAAipC,YAAA,KAGAjpC,EAAAkpC,cAAA,KACAlpC,EAAAmpC,cAAA,KACAnpC,EAAAopC,cAAA,KACAppC,EAAAqpC,cAAA,KACArpC,EAAAspC,cAAA,KAGAtpC,EAAAupC,SAAA,KACAvpC,EAAAwpC,SAAA,KACAxpC,EAAAypC,SAAA,KACAzpC,EAAA0pC,SAAA,KACA1pC,EAAA2pC,SAAA,OA2KJ,OA/M0CrpC,EAAAooC,EAAA3oC,GAsCtC2oC,EAAAnoC,UAAAC,OAAA,WACIN,KAAA+oC,YAAAvpC,GAAAmb,KAAA,4BAAA3a,KAAAuM,MACAvM,KAAA8oC,gBAAA9oC,KAAA+oC,YAAAtoC,aAAAjB,GAAAkqC,iBAEA1pC,KAAAipC,cAAAzpC,GAAAmb,KAAA,iBAAA3a,KAAA+oC,aACA/oC,KAAAgpC,cAAAxpC,GAAAmb,KAAA,iBAAA3a,KAAA+oC,aACA/oC,KAAAkpC,cAAA1pC,GAAAmb,KAAA,iBAAA3a,KAAA+oC,aACA/oC,KAAAmpC,cAAA3pC,GAAAmb,KAAA,iBAAA3a,KAAA+oC,aACA/oC,KAAAopC,cAAA5pC,GAAAmb,KAAA,iBAAA3a,KAAA+oC,aAGA7jC,QAAAC,IAAA,MAAAnF,KAAAipC,eACA/jC,QAAAC,IAAA,MAAAnF,KAAAgpC,eACA9jC,QAAAC,IAAA,MAAAnF,KAAAkpC,eACAhkC,QAAAC,IAAA,MAAAnF,KAAAmpC,eACAjkC,QAAAC,IAAA,MAAAnF,KAAAopC,eAEAppC,KAAAspC,SAAAtpC,KAAAipC,cAAAxoC,aAAAjB,GAAAmqC,QACA3pC,KAAAqpC,SAAArpC,KAAAgpC,cAAAvoC,aAAAjB,GAAAmqC,QACA3pC,KAAAupC,SAAAvpC,KAAAkpC,cAAAzoC,aAAAjB,GAAAmqC,QACA3pC,KAAAwpC,SAAAxpC,KAAAmpC,cAAA1oC,aAAAjB,GAAAmqC,QACA3pC,KAAAypC,SAAAzpC,KAAAopC,cAAA3oC,aAAAjB,GAAAmqC,QAEAzkC,QAAAC,IAAA,MAAAnF,KAAAspC,UACApkC,QAAAC,IAAA,MAAAnF,KAAAqpC,UACAnkC,QAAAC,IAAA,MAAAnF,KAAAupC,UACArkC,QAAAC,IAAA,MAAAnF,KAAAwpC,UACAtkC,QAAAC,IAAA,MAAAnF,KAAAypC,UAEAzpC,KAAA4pC,iBAEA5pC,KAAAya,SAAAjb,GAAAmb,KAAA,8BAAA3a,KAAAuM,MACAvM,KAAA0a,SAAAlb,GAAAmb,KAAA,8BAAA3a,KAAAuM,MACAvM,KAAAwa,SAAAhb,GAAAmb,KAAA,YAAA3a,KAAAuM,MAEAvM,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAEAvM,KAAAya,SAAA7H,GAAA,QAAA5S,KAAA+a,aAAA/a,MACAA,KAAA0a,SAAA9H,GAAA,QAAA5S,KAAAgb,aAAAhb,MACAA,KAAAwa,SAAA5H,GAAA,QAAA5S,KAAA8a,aAAA9a,MAEAA,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,MAEAA,KAAA6pC,yBAIJrB,EAAAnoC,UAAAyS,UAAA,WACI9S,KAAAya,SAAAhB,IAAA,QAAAzZ,KAAA+a,aAAA/a,MACAA,KAAA0a,SAAAjB,IAAA,QAAAzZ,KAAAgb,aAAAhb,MACAA,KAAAwa,SAAAf,IAAA,QAAAzZ,KAAA8a,aAAA9a,MAEAA,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,OAGJwoC,EAAAnoC,UAAAG,SAAA,WAEIR,KAAAkb,cACAlb,KAAAmb,cACAhB,EAAAtZ,QAAAC,SAAAkkC,sBAGJwD,EAAAnoC,UAAA+a,UAAA,aAEAotB,EAAAnoC,UAAAya,aAAA,WACI7I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,SAAA,GACA7uB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJktB,EAAAnoC,UAAA2a,aAAA,WACI/I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAAyH,WAAAlB,EAAAxG,QAAAC,SAAAyH,UACAlB,EAAAxG,QAAAC,SAAAiW,OACA/W,KAAAmb,eAGJqtB,EAAAnoC,UAAA0a,aAAA,WACI9I,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA1L,EAAAxG,QAAAC,SAAA+G,WAAAR,EAAAxG,QAAAC,SAAA+G,UACAR,EAAAxG,QAAAC,SAAAiW,OACA1P,EAAAxG,QAAAC,SAAA+G,UACIoK,EAAApR,QAAAC,SAAA8G,YAEAqK,EAAApR,QAAAC,SAAAqH,YAEJnI,KAAAkb,eAGJstB,EAAAnoC,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,SAAA,GACA7uB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJktB,EAAAnoC,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,SAAA,GACA7uB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJ6pB,EAAAnoC,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,SAAA,GACA7uB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJs0B,EAAAnoC,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,SAAA,GACA7uB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAysB,UAGJ8H,EAAAnoC,UAAA6a,YAAA,WACIlb,KAAAya,WAGAza,KAAAya,SAAAjL,eAAA,MAAAhD,OAAAnF,EAAAxG,QAAAC,SAAA+G,UACA7H,KAAAya,SAAAjL,eAAA,OAAAhD,QAAAnF,EAAAxG,QAAAC,SAAA+G,YAGJ2gC,EAAAnoC,UAAA8a,YAAA,WACInb,KAAA0a,WAEA1a,KAAA0a,SAAAlL,eAAA,MAAAhD,OAAAnF,EAAAxG,QAAAC,SAAAyH,UACAvI,KAAA0a,SAAAlL,eAAA,OAAAhD,QAAAnF,EAAAxG,QAAAC,SAAAyH,YAGJigC,EAAAnoC,UAAAwpC,sBAAA,WAEI7pC,KAAAqpC,SAAAS,UAAA,MAAAziC,EAAAxG,QAAAC,SAAA0V,SACAxW,KAAAspC,SAAAQ,UAAA,MAAAziC,EAAAxG,QAAAC,SAAA0V,UAAA,MAAAnP,EAAAxG,QAAAC,SAAA0V,SACAxW,KAAAupC,SAAAO,UAAA,MAAAziC,EAAAxG,QAAAC,SAAA0V,SACAxW,KAAAwpC,SAAAM,UAAA,MAAAziC,EAAAxG,QAAAC,SAAA0V,SACAxW,KAAAypC,SAAAK,UAAA,MAAAziC,EAAAxG,QAAAC,SAAA0V,UAGJgyB,EAAAnoC,UAAAupC,eAAA,WACI5pC,KAAAgpC,cAAAp2B,GAAA,SAAA,WAAA,OAAAvT,EAAAwB,QAAAC,SAAA6f,eAAA,QACA3gB,KAAAipC,cAAAr2B,GAAA,SAAA,WAAA,OAAAvT,EAAAwB,QAAAC,SAAA6f,eAAA,QACA3gB,KAAAkpC,cAAAt2B,GAAA,SAAA,WAAA,OAAAvT,EAAAwB,QAAAC,SAAA6f,eAAA,QACA3gB,KAAAmpC,cAAAv2B,GAAA,SAAA,WAAA,OAAAvT,EAAAwB,QAAAC,SAAA6f,eAAA,QACA3gB,KAAAopC,cAAAx2B,GAAA,SAAA,WAAA,OAAAvT,EAAAwB,QAAAC,SAAA6f,eAAA,SA7Mazf,EAAA,CADpBxB,GACoB8oC,GAArB,CAAAtuB,EAAArZ,UAAqBO,EAAAP,QAAA2nC,49ECbrB,IAAAx2B,EAAA1S,EAAA,qCACA8H,EAAA9H,EAAA,WACA2S,EAAA3S,EAAA,2BAEAuS,EAAAvS,EAAA,qBACAuJ,EAAAvJ,EAAA,+BACA4a,EAAA5a,EAAA,eAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNqqC,GAHMxqC,EAAAI,SAGN,SAAAE,GAAA,SAAAkqC,IAAA,IAAAjqC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAkqC,UAAA,KAEAlqC,EAAAmqC,WAAA,KACAnqC,EAAAoqC,WAAA,KACApqC,EAAAqqC,WAAA,KACArqC,EAAAsqC,mBAAA,OAiGJ,OAxGuChqC,EAAA2pC,EAAAlqC,GAUnCkqC,EAAA1pC,UAAAC,OAAA,WACIN,KAAAgqC,UAAAxqC,GAAAmb,KAAA,YAAA3a,KAAAuM,MACAvM,KAAAiqC,WAAAzqC,GAAAmb,KAAA,yBAAA3a,KAAAuM,MACAvM,KAAAkqC,WAAA1qC,GAAAmb,KAAA,yBAAA3a,KAAAuM,MACAvM,KAAAmqC,WAAA3qC,GAAAmb,KAAA,yBAAA3a,KAAAuM,MACAvM,KAAAoqC,mBAAA5qC,GAAAmb,KAAA,4BAAA3a,KAAAuM,MAAA9L,aAAAjB,GAAAkB,OAEAV,KAAAgqC,UAAAp3B,GAAA,QAAA5S,KAAAqqC,YAAArqC,MACAA,KAAAiqC,WAAAr3B,GAAA,QAAA5S,KAAAsqC,gBAAAtqC,MACAA,KAAAkqC,WAAAt3B,GAAA,QAAA5S,KAAAuqC,gBAAAvqC,MACAA,KAAAmqC,WAAAv3B,GAAA,QAAA5S,KAAAwqC,gBAAAxqC,OAGJ+pC,EAAA1pC,UAAAyS,UAAA,WACI9S,KAAAgqC,UAAAvwB,IAAA,QAAAzZ,KAAAqqC,YAAArqC,MACAA,KAAAiqC,WAAAxwB,IAAA,QAAAzZ,KAAAsqC,gBAAAtqC,MACAA,KAAAkqC,WAAAzwB,IAAA,QAAAzZ,KAAAuqC,gBAAAvqC,MACAA,KAAAmqC,WAAA1wB,IAAA,QAAAzZ,KAAAwqC,gBAAAxqC,OAGJ+pC,EAAA1pC,UAAAG,SAAA,WACGR,KAAAyqC,cAGHV,EAAA1pC,UAAA+a,UAAA,aAEA2uB,EAAA1pC,UAAAgqC,YAAA,WACIp4B,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAoe,MAAA,IAIJ0X,EAAA1pC,UAAAiqC,gBAAA,WACItqC,KAAA0qC,iBAAA,IAGJX,EAAA1pC,UAAAkqC,gBAAA,WACIvqC,KAAA0qC,iBAAA,MAGJX,EAAA1pC,UAAAmqC,gBAAA,WACIxqC,KAAA0qC,iBAAA,MAIJX,EAAA1pC,UAAAqqC,iBAAA,SAAA5gC,GAAA,MAAAhK,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAA8L,iBAAAvB,GAAA/F,KAAA,SAAAa,GACIM,QAAAC,IAAAP,EAAA0tB,cAEAzpB,EAAAK,eAAAC,SAAAopB,YAAA3tB,EAAA0tB,aAAA,SAAAztB,EAAA4B,GACIvB,QAAAC,IAAA,oBACAD,QAAAC,IAAAN,GACAK,QAAAC,IAAAsB,GACA3G,EAAA2qC,iBAGRzmC,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACAnB,EAAA2qC,gBAIRV,EAAA1pC,UAAAsqC,aAAA,WAAA,MAAA7qC,EAAAE,KACIiS,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OAEA,QAAAxT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAiM,qBAAAzH,KAAA,SAAAa,GACIM,QAAAC,IAAAP,EAAA0tB,cAEAzpB,EAAAK,eAAAC,SAAAopB,YAAA3tB,EAAA0tB,aAAA,SAAAztB,EAAA4B,GACIvB,QAAAC,IAAA,oBACAD,QAAAC,IAAAN,GACAK,QAAAC,IAAAsB,GACA3G,EAAA2qC,iBAGRzmC,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,sBAAAA,GACAnB,EAAA2qC,gBAIRV,EAAA1pC,UAAAoqC,WAAA,WAAA,MAAA3qC,EAAAE,KACI,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACI9E,EAAAsqC,mBAAAppC,OAAA4D,EAAAE,KAAA0tB,cAAAvnB,aACJjH,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,MAIK8oC,EAAA1pC,UAAAuqC,mBAAA,iBAAuB,OAAAvnC,EAAArD,UAAA,EAAAsB,QAAA,qDACxB,KAAA,EAAA,MAAA,CAAA,EAAA,QAAA/B,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,OAAA,EAAAA,EAAAyJ,WAAR,KAAA,EAAA,MAAA,CAAA,EAAA1F,EAAAC,OAAAuB,KAAA2tB,kBAtGavxB,EAAA,CADpBxB,GACoBqqC,GAArB,CAAA7vB,EAAArZ,UAAqBO,EAAAP,QAAAkpC,okCCXf,IAAAxqC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGNkrC,EAAA,SAAAhrC,GAAA,SAAAgrC,IAAA,IAAA/qC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAMIF,EAAAgrC,UAAA,EAMAhrC,EAAA8hB,WAAA,IAgCJ,OA5CwCxhB,EAAAyqC,EAAAhrC,GAcpCgrC,EAAAxqC,UAAAC,OAAA,WAAA,IAAAR,EAAAE,KACIR,GAAAigB,KAAAC,kBAAA,WAAA,OAAA5f,EAAAirC,QACA/qC,KAAA+qC,OAGJF,EAAAxqC,UAAA0qC,IAAA,WAEI,IAAAC,EAAAhrC,KAAAuM,KAAA9L,aAAAjB,GAAAmiB,QACAspB,EAAAzrC,GAAAigB,KAAA8B,0BACA2pB,EAAA1rC,GAAAigB,KAAAgC,eAGA0pB,EAAAF,EAAAlpB,MAAAkpB,EAAAjpB,OACAopB,EAAAF,EAAAnpB,MAAAmpB,EAAAlpB,OAGA,GAAAopB,EAAAD,EAAA,CAEIH,EAAAnpB,UAAA,EACAmpB,EAAAppB,WAAA,EAEA,IAAAypB,EAAAJ,EAAAjpB,OAAAopB,EACAJ,EAAAC,iBAAAzrC,GAAAoO,KAAAy9B,EAAAJ,EAAAjpB,aAGAgpB,EAAAnpB,UAAA,EACAmpB,EAAAppB,WAAA,GAlCR1gB,EAAA,CAJCvB,EAAA,CACGuK,KAAA1K,GAAA8rC,QACAC,YAAA,eAEqBV,EAAAxqC,UAAA,gBAAA,GAMzBa,EAAA,CAJCvB,EAAA,CACGuK,KAAA1K,GAAA8rC,QACAC,YAAA,gBAEsBV,EAAAxqC,UAAA,iBAAA,GAZTa,EAAA,CADpBxB,GACoBmrC,GAArB,CAAArrC,GAAA2B,WAAqBC,EAAAP,QAAAgqC,oMCGrB,IAAAj3B,EAAA,WAAA,SAAAA,KAgBA,OAXWA,EAAA43B,aAAA,SAAAlyB,GACH1F,EAAAG,UAAAuF,GAGG1F,EAAAmI,eAAA,SAAAzC,GACH1F,EAAAS,YAAAiF,GAGG1F,EAAA4H,eAAA,SAAAlC,GACH1F,EAAAC,YAAAyF,GAbG1F,EAAAG,eAAAsxB,EACAzxB,EAAAS,iBAAAgxB,EACAzxB,EAAAC,iBAAAwxB,EAaXzxB,EAhBA,GAAaxS,EAAAwS,eAAAA,iuECNb,IAAAxM,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA+H,EAAA/H,EAAA,0BACAuJ,EAAAvJ,EAAA,+BAEA0Y,EAAA1Y,EAAA,0BACAmsC,EAAAnsC,EAAA,uBACA0S,EAAA1S,EAAA,qCAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNgsC,GAHMnsC,EAAAI,SAGN,SAAAE,GAAA,SAAA6rC,IAAA,IAAA5rC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAA6rC,WAAA,KACA7rC,EAAA8rC,YAAA,KAEA9rC,EAAA+rC,YAAA,KACA/rC,EAAAgsC,aAAA,KACAhsC,EAAAisC,gBAAA,KAEAjsC,EAAAksC,kBAAA,KAGAlsC,EAAAud,QAAA,KACAvd,EAAAwd,eAAA,KACAxd,EAAAyd,SAAA,KACAzd,EAAA0d,WAAA,OA0HJ,OAzIwCpd,EAAAsrC,EAAA7rC,GAiBpC6rC,EAAArrC,UAAAC,OAAA,WACIN,KAAAqd,QAAA7d,GAAAmb,KAAA,sBAAA3a,KAAAuM,MACAvM,KAAAsd,eAAA9d,GAAAmb,KAAA,wBAAA3a,KAAAuM,MACAvM,KAAAud,SAAA/d,GAAAmb,KAAA,uBAAA3a,KAAAuM,MACAvM,KAAAwd,WAAAhe,GAAAmb,KAAA,yBAAA3a,KAAAuM,MAEAvM,KAAAqd,QAAAzK,GAAA,QAAA5S,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA1K,GAAA,QAAA5S,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA3K,GAAA,QAAA5S,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA5K,GAAA,QAAA5S,KAAA4d,eAAA5d,MAEAA,KAAA2rC,WAAAnsC,GAAAmb,KAAA,QAAA3a,KAAAuM,MACAvM,KAAA4rC,YAAApsC,GAAAmb,KAAA,SAAA3a,KAAAuM,MAEAvM,KAAAgsC,kBAAAxsC,GAAAmb,KAAA,gCAAA3a,KAAA2rC,YAEA3rC,KAAA6rC,YAAArsC,GAAAmb,KAAA,gBAAA3a,KAAA4rC,aACA5rC,KAAA8rC,aAAAtsC,GAAAmb,KAAA,iBAAA3a,KAAA2rC,YACA3rC,KAAA+rC,gBAAAvsC,GAAAmb,KAAA,yCAAA3a,KAAA4rC,aAEA5rC,KAAA6rC,YAAAj5B,GAAA,QAAA5S,KAAAisC,gBAAAjsC,MACAA,KAAA8rC,aAAAl5B,GAAA,QAAA5S,KAAAksC,iBAAAlsC,MACAA,KAAA+rC,gBAAAn5B,GAAA,QAAA5S,KAAAmsC,oBAAAnsC,OAGJ0rC,EAAArrC,UAAAyS,UAAA,WACI9S,KAAAqd,QAAA5D,IAAA,QAAAzZ,KAAAyd,YAAAzd,MACAA,KAAAsd,eAAA7D,IAAA,QAAAzZ,KAAA0d,mBAAA1d,MACAA,KAAAud,SAAA9D,IAAA,QAAAzZ,KAAA2d,aAAA3d,MACAA,KAAAwd,WAAA/D,IAAA,QAAAzZ,KAAA4d,eAAA5d,MAEAA,KAAA6rC,YAAApyB,IAAA,QAAAzZ,KAAAisC,gBAAAjsC,MACAA,KAAA8rC,aAAAryB,IAAA,QAAAzZ,KAAAksC,iBAAAlsC,MACAA,KAAA+rC,gBAAAtyB,IAAA,QAAAzZ,KAAAmsC,oBAAAnsC,OAGE0rC,EAAArrC,UAAAG,SAAA,mGACK,OAAA,MAAA6G,EAAAxG,QAAAC,SAAAwU,SAAA,CAAA,EAAA,GACH,CAAA,EAAA,IAAAhU,QAAA,SAAAC,GAAA,OAAA8f,WAAA9f,EAAA,qBAAAhC,EAAAgE,2BAGJ8D,EAAAxG,QAAAC,SAAAyU,WACIvV,KAAAosC,cAAA/kC,EAAAxG,QAAAC,SAAAyU,WAGJvV,KAAA0U,4BAGJg3B,EAAArrC,UAAAqU,gBAAA,WAAA,MAAA5U,EAAAE,KACI,QAAAT,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,GAAAA,EAAAiK,oBAAAzF,KAAA,SAAAa,GACIyC,EAAAxG,QAAAC,SAAAyU,UAAA3Q,EAAAE,KACAhF,EAAAssC,cAAAxnC,EAAAE,QACJd,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,yBAAAA,MAIRyqC,EAAArrC,UAAA+rC,cAAA,SAAAn7B,GACIjR,KAAAgsC,kBAAA7tB,qBAGA,IAFA,IAAAL,EAAA9F,EAAAnX,QAAAC,SAEAyQ,EAAA,EAAAA,EAAAN,EAAAo7B,MAAA76B,OAAAD,IACIuM,EAAAxF,QAAA,gBAAAtY,KAAAgsC,mBAAAvrC,aAAAgrC,EAAA5qC,SACAuC,KAAA6N,EAAAo7B,MAAA96B,KAIRm6B,EAAArrC,UAAA4rC,gBAAA,WACIh6B,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA2rC,WAAAn/B,QAAA,EACAxM,KAAA4rC,YAAAp/B,QAAA,GAGJk/B,EAAArrC,UAAA6rC,iBAAA,WACIj6B,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA/S,KAAA2rC,WAAAn/B,QAAA,EACAxM,KAAA4rC,YAAAp/B,QAAA,GAGJk/B,EAAArrC,UAAA8rC,oBAAA,WACIl6B,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlK,EAAAK,eAAAC,SAAAmjC,iBAGJZ,EAAArrC,UAAAod,YAAA,WACIxL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,OAGJowB,EAAArrC,UAAAqd,mBAAA,WACIzL,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,cAGJ+sB,EAAArrC,UAAAsd,aAAA,WACI1L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,QAGJw3B,EAAArrC,UAAAud,eAAA,WACI3L,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAlB,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAqH,MAAA,GACAzJ,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA0K,aAAA,GACA9M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAC,OAAA,GACArC,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,SAAA,GACA/M,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAA2K,UAtIa1d,EAAA,CADpBxB,GACoBgsC,GAArB,CAAAxxB,EAAArZ,UAAqBO,EAAAP,QAAA6qC,ovECRrB,IAAA/lC,EAAArG,EAAA,mBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAEN6sC,GAFMhtC,EAAAI,SAEN,IAAA2B,QAAA,SAAAC,EAAAC,GACI,GAAAhC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAE,gBAAAnC,GAAAiC,IAAAC,WAAAlC,GAAAiC,IAAAG,gBAAA,CACI,IAAAC,EAAAC,SAAAC,cAAA,UACAF,EAAAG,IAAA,8CACAH,EAAAI,OAAA,EACAJ,EAAAK,OAAA,WACI,IAAAC,EAAAC,YAAA,WACIC,OAAAmqC,UAAAnqC,OAAAmqC,SAAAC,SACIlrC,EAAAc,OAAAmqC,SAAAC,QACAlqC,cAAAJ,KAER,MAEJN,EAAAW,QAAA,WAAA,OAAAhB,EAAA,IAAAiB,MAAA,2DACAX,SAAAY,KAAAC,YAAAd,OAqCRqH,EAAA,WAEI,SAAAA,IAUQlJ,KAAA0sC,YAAA,WA0KZ,OAtLaC,EAAAzjC,EAKTlG,OAAAC,eAAAiG,EAAA,WAAA,CAAAhG,IAAA,WAII,OAHAypC,EAAAxpC,YACIwpC,EAAAxpC,UAAA,IAAAwpC,GAEJA,EAAAxpC,2CAIS+F,EAAA7I,UAAA+C,KAAA,WAAQ,OAAAC,EAAArD,UAAA,EAAAsB,QAAA,kEACE,OAAnB/B,EAAAS,KAAmB,CAAA,EAAAusC,UAEnB,OAFAhtC,EAAAmtC,YAAAppC,EAAAC,OAEAvD,KAAA0sC,YACI,CAAA,EAAAprC,QAAAC,QAAA,CAAAiC,SAAA,KAEA,CAAA,EAAAlC,QAAAC,QAAA,CAAAiC,SAAA,WAID0F,EAAA7I,UAAAmT,wBAAA,WAEHxT,KAAA4sC,iBAAAjnC,EAAAknC,qBAGG3jC,EAAA7I,UAAA+e,wBAAA,WACHpf,KAAA4sC,iBAAAjnC,EAAAmnC,cAGG5jC,EAAA7I,UAAAsgC,gBAAA,WACH3gC,KAAA+sC,SAAA,qCAGG7jC,EAAA7I,UAAAugC,oBAAA,WACH5gC,KAAA+sC,SAAA,mHAGG7jC,EAAA7I,UAAA0sC,SAAA,SAAAtmC,GACHzG,KAAA0sC,YAIA1sC,KAAA0sC,YAAAK,SAAAtmC,GAHIvB,QAAAjE,MAAA,oCAMDiI,EAAA7I,UAAAusC,iBAAA,SAAAnmC,GACHzG,KAAA0sC,YAIA1sC,KAAA0sC,YAAAE,iBAAAnmC,GAHIvB,QAAAjE,MAAA,oCAMDiI,EAAA7I,UAAA2sC,MAAA,SAAAvmC,EAAA4sB,GACH,IAAA4Z,EAAA,8BAAAC,mBAAAzmC,GAAA,SAAAymC,mBAAA7Z,GAAA,IACArzB,KAAA4sC,iBAAAK,IAGG/jC,EAAA7I,UAAA8sC,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACH,GAAAvtC,KAAA0sC,YAAA,CAIA,IAAAc,EAAA,CACIna,KAAAga,EACAG,YAAA,CACI/mC,IAAA6mC,EACAnnC,KAAAonC,IAGRvtC,KAAA0sC,YAAAS,aAAAC,EAAAI,QAVItoC,QAAAjE,MAAA,oCAcDiI,EAAA7I,UAAAisC,cAAA,WACH,GAAAtsC,KAAA0sC,YAAA,CAKA,IAAArF,EAAArnC,KAAAoJ,kBACA3C,EAAAd,EAAA8nC,aAAA,aAAApG,EAAAh+B,GAEArJ,KAAAgtC,MAAAvmC,EADA,+CANIvB,QAAAjE,MAAA,oCAaDiI,EAAA7I,UAAAqtC,kBAAA,WACH,OAAA1tC,KAAA0sC,aAGGxjC,EAAA7I,UAAAstC,0BAAA,WACH,OAAA3tC,KAAA0sC,YAIA1sC,KAAA0sC,YAAAkB,gBAHI1oC,QAAAjE,MAAA,mCACA,OAMDiI,EAAA7I,UAAA+I,gBAAA,WACH,OAAApJ,KAAA0sC,YAIA1sC,KAAA0sC,YAAAkB,eAAAvG,MAHIniC,QAAAjE,MAAA,mCACA,OAKDiI,EAAA7I,UAAAwtC,oBAAA,WACH,OAAA7tC,KAAA0sC,YAIA1sC,KAAA0sC,YAAAoB,UAHI5oC,QAAAjE,MAAA,mCACA,OAKDiI,EAAA7I,UAAAkyB,YAAA,SAAA9rB,EAAAkgC,GACH,IAAA3mC,KAAA0sC,YAEI,OADAxnC,QAAAjE,MAAA,mCACA,KAEJjB,KAAA0sC,YAAAna,YAAA9rB,EAAAkgC,IAGGz9B,EAAA7I,UAAAuf,kBAAA,WACH,IAAA5f,KAAA0sC,YAEI,OADAxnC,QAAAjE,MAAA,mCACA,KAGJ,IACIjB,KAAA0sC,YAAA9sB,oBAEJ,MAAArgB,MAMG2J,EAAA7I,UAAAwf,0BAAA,WACH,IAAA7f,KAAA0sC,YAEI,OADAxnC,QAAAjE,MAAA,mCACA,KAIJ,IACIjB,KAAA0sC,YAAA7sB,4BAEJ,MAAAtgB,MAKG2J,EAAA7I,UAAA0tC,MAAA,SAAA9nC,GACHjG,KAAA0sC,YAAAsB,UAAA/nC,IAGGiD,EAAA7I,UAAA0tB,kBAAA,WACH/tB,KAAA0sC,YAAAuB,eAAAC,eAAA,UAGGhlC,EAAA7I,UAAA8tC,mBAAA,WACHnuC,KAAA0sC,YAAAuB,eAAAC,eAAA,WAGGhlC,EAAA7I,UAAA8sB,kBAAA,WACHntB,KAAA0sC,YAAAuB,eAAAC,eAAA,UAGGhlC,EAAA7I,UAAAyvB,yBAAA,WACH9vB,KAAA0sC,YAAAuB,eAAAG,qBAAA,YAGGllC,EAAA7I,UAAA8vB,wBAAA,WACHnwB,KAAA0sC,YAAAuB,eAAAG,qBAAA,UApLKzB,EAAAzrC,EAAA,CADZxB,EAAA,mBACYwJ,GAAb,GAAa9H,EAAA8H,eAAAA,mlDCzDb,IAAAmlC,EAAA,WACI,SAAAA,EAAAtlC,GAA6B/I,KAAA+I,UAAAA,EAsBjC,OAhBiBslC,EAAAhuC,UAAAiuC,QAAA,WAAW,OAAAjrC,EAAArD,UAAA,EAAAsB,QAAA,oCACpB,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,kBAGSmrC,EAAAhuC,UAAAkuC,SAAA,WAAY,OAAAlrC,EAAArD,UAAA,EAAAsB,QAAA,0CAKrB,OAJMwD,EAAA,CACFuE,GAAA,EACAgqB,KAAA,iBAEJ,CAAA,EAAArzB,KAAA+I,UAAA9D,KAAA,QAAAH,SAISupC,EAAAhuC,UAAAgK,eAAA,WAAkB,OAAAhH,EAAArD,UAAA,EAAAsB,QAAA,oCAC3B,MAAA,CAAA,EAAAtB,KAAA+I,UAAA7F,IAAA,oCAjBUmrC,EAAAllC,SAAA,KAmBlBklC,EAvBA,GAAajtC,EAAAitC,YAAAA,ygCCJb,IAAAhnC,EAAA/H,EAAA,0BAGMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAC,EAAAJ,EAAAI,SAGN6uC,EAAA,SAAA3uC,GAAA,SAAA2uC,IAAA,IAAA1uC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAIWF,EAAA2uC,iBAAA,KAKA3uC,EAAA4uC,gBAAA,KAGA5uC,EAAA6uC,iBAAA,KAGA7uC,EAAA8uC,oBAAA,KAIA9uC,EAAA+uC,YAAA,KAGA/uC,EAAAgvC,oBAAA,KAGAhvC,EAAAivC,gBAAA,KAGAjvC,EAAAkvC,qBAAA,KAKAlvC,EAAAmvC,kBAAA,KAGAnvC,EAAAovC,aAAA,KAGApvC,EAAAqvC,oBAAA,KAGArvC,EAAAsvC,aAAA,KAGAtvC,EAAAuvC,oBAAA,KAGAvvC,EAAAwvC,oBAAA,KAGAxvC,EAAAyvC,oBAAA,KAIAzvC,EAAA0vC,iBAAA,KAGA1vC,EAAA2vC,sBAAA,KAGA3vC,EAAA4vC,YAAA,KAGA5vC,EAAA6vC,iBAAA,KAGA7vC,EAAA8vC,iBAAA,KAGA9vC,EAAA+vC,sBAAA,OAgEX,OAtIyCzvC,EAAAouC,EAAA3uC,GAwErC2uC,EAAAnuC,UAAAC,OAAA,WACIN,KAAAyuC,iBAAAliC,KAAAqG,GAAA,QAAA5S,KAAA8vC,mBAAA9vC,OAGJwuC,EAAAnuC,UAAAyS,UAAA,WACI9S,KAAAyuC,iBAAAliC,KAAAkN,IAAA,QAAAzZ,KAAA8vC,mBAAA9vC,OAGJwuC,EAAAnuC,UAAAG,SAAA,WACIR,KAAA+vC,SAAA1oC,EAAAxG,QAAAC,SAAA2V,gBAGJ+3B,EAAAnuC,UAAAyvC,mBAAA,WACI5qC,QAAAC,IAAA,uBAEAnF,KAAA+vC,UAAA1oC,EAAAxG,QAAAC,SAAA2V,gBAGJ+3B,EAAAnuC,UAAA0vC,SAAA,SAAAt5B,GACIvR,QAAAC,IAAA,aAAAsR,GACAzW,KAAAgwC,UAAAv5B,GACAzW,KAAAiwC,WAAAx5B,GACAzW,KAAAkwC,cAAAz5B,GAEAzW,KAAA0uC,gBAAAliC,OAAAiK,EACAzW,KAAA2uC,iBAAAniC,QAAAiK,EAEApP,EAAAxG,QAAAC,SAAA2V,cAAAA,GAGJ+3B,EAAAnuC,UAAA6vC,cAAA,SAAAz5B,GACI,IAAA05B,EAAA3wC,GAAAuxB,MAAA,GAAA,GAAA,KACAqf,EAAA5wC,GAAAuxB,MAAA,IAAA,IAAA,KAEA/wB,KAAAivC,kBAAA1iC,KAAAwkB,MAAAta,EAAA05B,EAAAC,GAGJ5B,EAAAnuC,UAAA2vC,UAAA,SAAAv5B,GACI,IAAA45B,EAAA7wC,GAAAuxB,MAAA,GAAA,GAAA,IACAuf,EAAA9wC,GAAAuxB,MAAA,IAAA,IAAA,KACAwf,EAAA/wC,GAAAuxB,MAAA,IAAA,IAAA,KAEA/wB,KAAA6uC,YAAAtiC,KAAAwkB,MAAAta,EAAA85B,EAAAF,EACArwC,KAAA8uC,oBAAAviC,KAAAwkB,MAAAta,EAAA85B,EAAAF,EAEArwC,KAAA+uC,gBAAAxiC,KAAAwkB,MAAAta,EAAA85B,EAAAD,EACAtwC,KAAAgvC,qBAAAziC,KAAAwkB,MAAAta,EAAA85B,EAAAD,EACAtwC,KAAA4uC,oBAAA7d,MAAAta,EAAA85B,EAAAD,GAGJ9B,EAAAnuC,UAAA4vC,WAAA,SAAAx5B,GACIzW,KAAAovC,aAAAjjC,YAAAsK,EAAAzW,KAAA2vC,iBAAA3vC,KAAA0vC,YAEA1vC,KAAAqvC,oBAAAljC,YACAnM,KAAAsvC,oBAAAnjC,YACAnM,KAAAuvC,oBAAApjC,YACIsK,EAAAzW,KAAA6vC,sBAAA7vC,KAAA4vC,iBAEJ5vC,KAAAkvC,aAAA/iC,YACAnM,KAAAmvC,oBAAAhjC,YACIsK,EAAAzW,KAAAyvC,sBAAAzvC,KAAAwvC,kBAhIRtuC,EAAA,CADCvB,EAAAH,GAAA2V,SACyCq5B,EAAAnuC,UAAA,wBAAA,GAK1Ca,EAAA,CADCvB,EAAAH,GAAA4V,OACsCo5B,EAAAnuC,UAAA,uBAAA,GAGvCa,EAAA,CADCvB,EAAAH,GAAA4V,OACuCo5B,EAAAnuC,UAAA,wBAAA,GAGxCa,EAAA,CADCvB,EAAAH,GAAA4V,OAC0Co5B,EAAAnuC,UAAA,2BAAA,GAI3Ca,EAAA,CADCvB,EAAAH,GAAAkB,QACmC8tC,EAAAnuC,UAAA,mBAAA,GAGpCa,EAAA,CADCvB,EAAAH,GAAAkB,QAC2C8tC,EAAAnuC,UAAA,2BAAA,GAG5Ca,EAAA,CADCvB,EAAAH,GAAAkB,QACuC8tC,EAAAnuC,UAAA,uBAAA,GAGxCa,EAAA,CADCvB,EAAAH,GAAAkB,QAC4C8tC,EAAAnuC,UAAA,4BAAA,GAK7Ca,EAAA,CADCvB,EAAAH,GAAAsM,SAC0C0iC,EAAAnuC,UAAA,yBAAA,GAG3Ca,EAAA,CADCvB,EAAAH,GAAAsM,SACqC0iC,EAAAnuC,UAAA,oBAAA,GAGtCa,EAAA,CADCvB,EAAAH,GAAAsM,SAC4C0iC,EAAAnuC,UAAA,2BAAA,GAG7Ca,EAAA,CADCvB,EAAAH,GAAAsM,SACqC0iC,EAAAnuC,UAAA,oBAAA,GAGtCa,EAAA,CADCvB,EAAAH,GAAAsM,SAC4C0iC,EAAAnuC,UAAA,2BAAA,GAG7Ca,EAAA,CADCvB,EAAAH,GAAAsM,SAC4C0iC,EAAAnuC,UAAA,2BAAA,GAG7Ca,EAAA,CADCvB,EAAAH,GAAAsM,SAC4C0iC,EAAAnuC,UAAA,2BAAA,GAI7Ca,EAAA,CADCvB,EAAAH,GAAA4M,cAC8CoiC,EAAAnuC,UAAA,wBAAA,GAG/Ca,EAAA,CADCvB,EAAAH,GAAA4M,cACmDoiC,EAAAnuC,UAAA,6BAAA,GAGpDa,EAAA,CADCvB,EAAAH,GAAA4M,cACyCoiC,EAAAnuC,UAAA,mBAAA,GAG1Ca,EAAA,CADCvB,EAAAH,GAAA4M,cAC8CoiC,EAAAnuC,UAAA,wBAAA,GAG/Ca,EAAA,CADCvB,EAAAH,GAAA4M,cAC8CoiC,EAAAnuC,UAAA,wBAAA,GAG/Ca,EAAA,CADCvB,EAAAH,GAAA4M,cACmDoiC,EAAAnuC,UAAA,6BAAA,GAtEnCa,EAAA,CADpBxB,GACoB8uC,GAArB,CAAAhvC,GAAA2B,WAAqBC,EAAAP,QAAA2tC,8MCJrB,IAAAgC,EAAA,WAAA,SAAAA,KA6FA,OAzFWA,EAAAjqC,YAAA,WAKH,OAJA,OAAAvG,KAAAmD,YACInD,KAAAmD,UAAA,IAAAnD,MAGJA,KAAAmD,WAGJH,OAAAC,eAAAutC,EAAA,WAAA,CAAAttC,IAAA,WACI,OAAAlD,KAAAuG,+CAGJiqC,EAAAnwC,UAAAyD,KAAA,SAAAuvB,EAAA9zB,QAAK,IAAA8zB,IAAAA,EAAA,IAAmB,IAAA/vB,OAAA,IAAA/D,EAAA,GAAAA,EAAAwV,EAAAzR,EAAA6tB,QAAAA,OAAA,IAAApc,EAAA,SAAAA,EAAA8C,EAAAvU,EAAA4iC,SAAAA,OAAA,IAAAruB,EAAA,EAAAA,EAAA44B,EAAAntC,EAAA8tB,SAAAA,OAAA,IAAAqf,EAAAjxC,GAAAuxB,MAAA,IAAA,IAAA,IAAA,KAAA0f,EAEpBzF,EAAAxrC,GAAAkxC,SAAAC,WAAAC,uBAAApxC,GAAAmiB,QACAI,EAAAipB,EAAAz+B,KAAAwV,MACAC,EAAAgpB,EAAAz+B,KAAAyV,OAGA6uB,EAAA,IAAArxC,GAAA4V,KACAy7B,EAAAC,MAAA,KAGA,IAAAC,EAAA,IAAAvxC,GAAA4V,KACA47B,EAAAD,EAAAE,aAAAzxC,GAAAkB,OACAswC,EAAAE,gBAAA1xC,GAAAkB,MAAAywC,gBAAAC,OACAJ,EAAAK,cAAA7xC,GAAAkB,MAAA4wC,cAAAF,OACAJ,EAAAhJ,SAAA,GACAgJ,EAAAhwC,OAAAqyB,EAGAA,EAAA7hB,OAAAw/B,EAAAhJ,SAAA,EAAAjmB,EAAA,GACIgvB,EAAAhvB,MAAA,EAAAA,EAAA,EACAivB,EAAAO,SAAA/xC,GAAAkB,MAAA8wC,SAAAC,eAEAV,EAAAhvB,MAAAsR,EAAA7hB,OAAAw/B,EAAAhJ,SAEJ,IAAA0J,EAAA,KAAAre,EAAA7hB,OAAAw/B,EAAAhJ,UAAA,EAAAjmB,EAAA,IAEAgvB,EAAA/uB,OAAAgvB,EAAAhJ,SAAA0J,EAGA,IAAAC,EAAAd,EAAAI,aAAAzxC,GAAAoyC,UACAD,EAAAE,KAAAd,EAAAhvB,MAAA,EAAA,EAAAgvB,EAAA/uB,OAAA,EAAA,GAAA,GAAA6G,KAAAipB,GAAA,IAAAjpB,KAAAipB,IAAA,GAQAH,EAAAI,OAAAhB,EAAAhvB,MAAA,IAAAgvB,EAAA/uB,OAAA,EAAA,KACA2vB,EAAAE,IAAAd,EAAAhvB,MAAA,EAAA,EAAAgvB,EAAA/uB,OAAA,EAAA,GAAA,IAAA6G,KAAAipB,GAAA,GAAAjpB,KAAAipB,IAAA,GAQAH,EAAAI,QAAAhB,EAAAhvB,MAAA,EAAAgvB,EAAA/uB,OAAA,EAAA,IACA2vB,EAAAK,UAAA5gB,EACAugB,EAAAhhC,OAEAkgC,EAAAoB,SAAAlB,GAGA,WAAA5f,GACI0f,EAAAliC,EAAA,EACAkiC,EAAAniC,EAAA,GACG,QAAAyiB,EACH0f,EAAAliC,EAAAkiC,EAAAliC,EAAAqT,EAAA,EAAA,EACG,WAAAmP,IACH0f,EAAAliC,EAAAkiC,EAAAliC,EAAAqT,EAAA,EAAA,GAGJgpB,EAAAz+B,KAAA0lC,SAAApB,GAEA,IAAAxP,EAAA7hC,GAAAoxB,SAAA,WACIigB,EAAAzI,YAEJ8J,EAAA1yC,GAAA8N,SAAA9N,GAAA2yC,OAAAjM,EAAA1mC,GAAAiO,GAAA,EAAA,IAAAjO,GAAAmc,QAAA,IAAA0lB,GAMA7hC,GAAAwN,MAAA6jC,GAAA9sC,KAAAmuC,GAAAjlC,SAzFWujC,EAAArtC,UAAA,KA2FnBqtC,EA7FA,GAAqBpvC,EAAAP,QAAA2vC,q2BCFrB,IAAAppC,EAAA9H,EAAA,aACAuS,EAAAvS,EAAA,uBAEA0Y,EAAA1Y,EAAA,iBAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGN0yC,GAHM7yC,EAAAI,SAGN,SAAAE,GAAA,SAAAuyC,IAAA,IAAAtyC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEYF,EAAAuyC,MAAA,IAAAj5B,MA8CZ,OAhDuChZ,EAAAgyC,EAAAvyC,GAIzBuyC,EAAA/xC,UAAAC,OAAA,WACNuR,EAAA+B,eAAA43B,aAAAxrC,OAGJoyC,EAAA/xC,UAAA+C,KAAA,WACI,IAAA,IAAA8G,KAAA9C,EAAA6M,aAAA,CACI,IAAA1H,EAAAyL,EAAAnX,QAAAC,SAAAwX,QAAAlR,EAAA6M,aAAA/J,GAAAlK,KAAAuM,MACAA,IAAAvM,KAAAqyC,MAAA94B,IAAAnS,EAAA6M,aAAA/J,MACIqC,EAAAC,QAAA,EACAD,EAAA0kC,aAAA7pC,EAAA6M,aAAA/J,IACAlK,KAAAqyC,MAAA37B,IAAAtP,EAAA6M,aAAA/J,GAAAqC,EAAA9L,aAAA2G,EAAA6M,aAAA/J,QAKZkoC,EAAA/xC,UAAA2T,OAAA,SAAA0f,EAAA7uB,EAAA8hC,GACI,QADsB,IAAA9hC,IAAAA,GAAA,GACtB7E,KAAAqyC,MAAA94B,IAAAma,GAAA,CACG,IAAArD,EAAArwB,KAAAqyC,MAAAnvC,IAAAwwB,GACA7uB,EAAAwrB,EAAAvsB,OAAAusB,EAAA5jB,OACAk6B,GAAAA,MAIPyL,EAAA/xC,UAAAwN,SAAA,SAAA6lB,GACI,QAAA1zB,KAAAqyC,MAAA94B,IAAAma,IACI1zB,KAAAqyC,MAAAnvC,IAAAwwB,GAAAnnB,KAAAC,QAKR4lC,EAAA/xC,UAAAiyC,eAAA,WAAA,IAAAxyC,EAAAE,KACIuyC,EAAA,GAIA,OAHAvyC,KAAAqyC,MAAAr4B,QAAA,SAAAqW,EAAAnmB,GACIpK,EAAA+N,SAAA3D,IAAwBqoC,EAAA/4B,KAAAtP,KAE5BqoC,GAGJH,EAAA/xC,UAAAoU,iBAAA,SAAAif,GACI,OAAA1zB,KAAAqyC,MAAA94B,IAAAma,GACI1zB,KAAAqyC,MAAAnvC,IAAAwwB,GAEJ,MA9CaxyB,EAAA,CADpBxB,GACoB0yC,GAArB,CAAA5yC,GAAA2B,YAAqBC,EAAAP,QAAAuxC,i+BCRf,IAENI,EAFMjzC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAAAH,EAAAI,SAEN,SAAA6yC,GAA8BA,EAAAA,EAAA,EAAA,GAAA,IAAGA,EAAAA,EAAA,EAAA,GAAA,IAAjC,CAAmCA,EAAApxC,EAAAoxC,kBAAApxC,EAAAoxC,gBAAA,KAGnC,IAAAC,EAAA,SAAA5yC,GAAA,SAAA4yC,IAAA,IAAA3yC,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YACYF,EAAA4yC,WAAA,KACA5yC,EAAA6yC,YAAA,KACA7yC,EAAA8yC,gBAAAJ,EAAAK,EACA/yC,EAAAgzC,WAAA,EACAhzC,EAAAizC,UAAA,EACAjzC,EAAAkzC,aAAA,GACAlzC,EAAAmzC,aAAA,EACAnzC,EAAAozC,iBAAA,KACApzC,EAAAqzC,aAAA,EACArzC,EAAAszC,SAAA,EACAtzC,EAAAuzC,UAAA,OAwMZ,OAnN6CjzC,EAAAqyC,EAAA5yC,GAczC4yC,EAAApyC,UAAA+C,KAAA,SAAAkwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGI,GAFAD,IAAc1zC,KAAAqzC,UAAAK,GAEd,GAAA1zC,KAAAmzC,YAAA,CAEI,GADAnzC,KAAA0yC,WAAA1yC,KAAAuM,KAAA9L,aAAAjB,GAAAo0C,YACA,MAAA5zC,KAAA0yC,YAAA,MAAA1yC,KAAA0yC,WAAA75B,QAAgE,OAEhE7Y,KAAA0yC,WAAA75B,QAAAV,OAAA07B,eAAAr0C,GAAAiO,GAAA,GAAA,KACA,IAAAqmC,EAAA9zC,KAAA0yC,WAAA75B,QAAAV,OAAA1X,aAAAjB,GAAAu0C,QAEA,MAAAD,IAAyBA,EAAA9zC,KAAA0yC,WAAA75B,QAAAV,OAAA84B,aAAAzxC,GAAAu0C,SAEzBD,EAAAE,aAAA,EACAF,EAAAtP,KAAA,EAEAsP,EAAAG,cAAA,EACAH,EAAAI,MAAA,EAEAJ,EAAAK,YAAA,EACAL,EAAArP,IAAA,EAEAqP,EAAAM,eAAA,EACAN,EAAAO,OAAA,EAEAr0C,KAAA2yC,YAAA,IAAAnzC,GAAA80C,KAAAt0C,KAAA0yC,WAAAnmC,KAAA+B,kBACAtO,KAAA0yC,WAAA75B,QAAAhK,eAAA7O,KAAA2yC,aACA3yC,KAAAkzC,iBAAAlzC,KAAA0yC,WAAA75B,QAAAvK,iBAGJ,GAAA,MAAAglC,EAAA,CASA,GAPAtzC,KAAA0yC,WAAA75B,QAAAhK,eAAA7O,KAAAkzC,kBAEAlzC,KAAAia,QAEAja,KAAA8yC,WAAAS,EACAvzC,KAAA4yC,gBAAAa,EAEAA,GAAAjB,EAAAK,EAAA,CACI7yC,KAAA0yC,WAAA75B,QAAAg7B,eAAAr0C,GAAAiO,GAAA,GAAA,IAEAzN,KAAA0yC,WAAA75B,QAAAhK,eAAArP,GAAAoO,KAAA5N,KAAAkzC,iBAAAnxB,MAAA/hB,KAAA8yC,WAAAU,EAAAxxB,SAEAhiB,KAAA0yC,WAAA75B,QAAA5K,YAAAzO,GAAAiO,GAAA,GAAAzN,KAAA8yC,WAAAU,EAAAxxB,OAAA,IAEA,IAAAuyB,EAAA1rB,KAAAC,MAAA9oB,KAAAkzC,iBAAAlxB,OAAAwxB,EAAAxxB,QAEAhiB,KAAA+yC,UAAAwB,EAAA,EAEAv0C,KAAA8yC,YAAA9yC,KAAA+yC,YAAuC/yC,KAAA+yC,UAAA/yC,KAAA8yC,YAEvC9yC,KAAAizC,aAAAO,EAAAxxB,YAECyxB,GAAAjB,EAAAgC,IACDx0C,KAAA0yC,WAAA75B,QAAAg7B,eAAAr0C,GAAAiO,GAAA,EAAA,KACAzN,KAAA0yC,WAAA75B,QAAAhK,eAAArP,GAAAoO,KAAA5N,KAAA8yC,WAAAU,EAAAzxB,MAAA/hB,KAAAkzC,iBAAAlxB,SAEAhiB,KAAA0yC,WAAA75B,QAAA5K,YAAAzO,GAAAiO,GAAAzN,KAAA8yC,WAAAU,EAAAzxB,MAAA,EAAA,IACAwyB,EAAA1rB,KAAAC,MAAA9oB,KAAAkzC,iBAAAnxB,MAAAyxB,EAAAzxB,OAEA/hB,KAAA+yC,UAAAwB,EAAA,EAEAv0C,KAAA8yC,YAAA9yC,KAAA+yC,YACI/yC,KAAA+yC,UAAA/yC,KAAA8yC,YAGJ9yC,KAAAizC,aAAAO,EAAAzxB,OAGJ,GAAA/hB,KAAA0yC,WAAA+B,aAAAjjC,QAAA,EAAA,CACI,IAAAkjC,EAAA,IAAAl1C,GAAA2B,UAAAwzC,aACAD,EAAArjC,OAAArR,KAAAuM,KACAmoC,EAAAE,UAAA,kBACAF,EAAAG,QAAA,WACA70C,KAAA0yC,WAAA+B,aAAAj7B,KAAAk7B,GAGJ10C,KAAAmzC,YACAnzC,KAAAozC,SAAA,EAEApzC,KAAA80C,kBAAAxB,EAAAK,KAGIlB,EAAApyC,UAAA4Z,MAAA,WACJja,KAAA0yC,WAAA75B,QAAA6D,oBACA1c,KAAAgzC,aAAA,IAIIP,EAAApyC,UAAAy0C,kBAAA,SAAAC,EAAApB,GACJ,IAAA,IAAApiC,EAAA,EAAAA,EAAAvR,KAAA+yC,UAAAxhC,IAAA,CAEI,IAAAyjC,EAAAx1C,GAAAiO,GAAA,EAAA,GACAlB,EAAA/M,GAAAk/B,YAAAqW,GACA/0C,KAAA0yC,WAAA75B,QAAAo5B,SAAA1lC,GACAA,EAAAC,QAAA,EACAD,EAAAgC,QAAA,IAEAvO,KAAA4yC,iBAAAJ,EAAAK,EACImC,EAAArmC,GAAA3O,KAAAizC,aAAA,EAAAjzC,KAAAizC,aAAA1hC,EAECvR,KAAA4yC,iBAAAJ,EAAAgC,IACDQ,EAAAtmC,EAAA1O,KAAAizC,aAAA,EAAAjzC,KAAAizC,aAAA1hC,GAGJhF,EAAApG,KAAA,QAAAoL,EACAhF,EAAAsnC,eAAAr0C,GAAAiO,GAAA,GAAA,KACAlB,EAAA0B,YAAA+mC,GAEAh1C,KAAAi1C,UAAA1oC,EAAAgF,EAAAA,GAEAvR,KAAAgzC,aAAAx5B,KAAAjN,GAGJonC,GAAAA,EAAA3zC,KAAA0yC,aAIID,EAAApyC,UAAA60C,SAAA,WAEJ,IAAAC,EAAAn1C,KAAA0yC,WAAA0C,kBACAC,EAAA,EAEAr1C,KAAA4yC,iBAAAJ,EAAAK,EACIwC,EAAAF,EAAAxmC,EAEC3O,KAAA4yC,iBAAAJ,EAAAgC,IAGDa,GAAAF,EAAAzmC,GAEJ1O,KAAAs1C,cAAAD,IAII5C,EAAApyC,UAAAi1C,cAAA,SAAAC,GACJ,IAAAF,EAAAE,EAGAC,EAAAx1C,KAAA8yC,WAAA9yC,KAAAizC,aAEA,KAAAoC,EAAA,GAAAA,EAAAr1C,KAAA2yC,YAAA3wB,QAAAwzB,GAAA,CAMA,IAJA,IAAAC,EAAA,EACAC,EAAA7sB,KAAAC,MAAAusB,EAAAr1C,KAAAizC,cAGA1hC,EAAA,EAAAA,EAAAvR,KAAA+yC,UAAAxhC,IAAA,CACI,IAAAhF,EAAAvM,KAAAgzC,aAAAzhC,GACAkkC,EAAAC,EAAAnkC,EACAvR,KAAA21C,YAAAF,EAAAlkC,EAAAhF,GAEJvM,KAAAozC,SAAAsC,EAAA11C,KAAA+yC,YASJN,EAAApyC,UAAAs1C,YAAA,SAAAF,EAAAG,EAAArpC,GACI,KAAAkpC,EAAA,GAAAA,GAAAz1C,KAAA8yC,aAKA,MAAAvmC,EAAA,CAKA,IAAAspC,EAAAr2C,GAAAs2C,KAAAC,KAEA/1C,KAAA4yC,iBAAAJ,EAAAgC,EACIqB,EAAAnnC,EAAA1O,KAAAizC,aAAA,EAAAjzC,KAAAizC,aAAAwC,EAECz1C,KAAA4yC,iBAAAJ,EAAAK,IACDgD,EAAAlnC,GAAA3O,KAAAizC,aAAA,EAAAjzC,KAAAizC,aAAAwC,GAGJlpC,EAAA0B,YAAA4nC,GACA71C,KAAAi1C,UAAA1oC,EAAAkpC,EAAAG,KASInD,EAAApyC,UAAA40C,UAAA,SAAA1oC,EAAAkpC,EAAAO,GAEJ,MAAAh2C,KAAAqzC,WACIrzC,KAAAqzC,UAAA9mC,EAAAkpC,EAAAO,IAhNS90C,EAAA,CADpBxB,GACoB+yC,GAArB,CAAAjzC,GAAA2B,WAAqBC,EAAAP,QAAA4xC,q8DCLrB,IAAAzgC,EAAA1S,EAAA,oCAEA+H,EAAA/H,EAAA,yBACAuJ,EAAAvJ,EAAA,8BACA4S,EAAA5S,EAAA,wBA0HA,SAAA22C,EAAAC,GACI,IAAAthC,EAAA,IAAAD,KACAwhC,EAAAD,EAAA/+B,UAAAvC,EAAAuC,UAEA,GAAAg/B,GAAA,EACI,MAAA,CAAAC,KAAA,EAAAC,MAAA,EAAAC,QAAA,EAAA76B,QAAA,GAGJ,IAAAA,EAAAoN,KAAAC,MAAAqtB,EAAA,IAAA,IACAG,EAAAztB,KAAAC,MAAAqtB,EAAA,IAAA,IACAE,EAAAxtB,KAAAC,MAAAqtB,EAAA,KAAA,IAGA,MAAA,CAAAC,KAFAvtB,KAAAC,MAAAqtB,EAAA,OAEAE,MAAAA,EAAAC,QAAAA,EAAA76B,QAAAA,GAiGJ,SAAAzG,EAAAF,EAAA9J,EAAAurC,EAAAC,GAAqH,OAAAnzC,EAAArD,UAAA,EAAAsB,QAAA,4DACjH,IAAAk1C,EAAa,MAAA,IAAA/zC,MAAA,kCAGN,MAAA,CAAA,EAAAg0C,EAFD3hC,EAAA,IAAA9J,EAAA,IAAAurC,EAAA,IAAAC,WAEN,MAAA,CAAA,EAAAj3C,EAAAgE,aAUJ,SAAAkzC,EAAAxwC,GAA2C,OAAA5C,EAAArD,UAAA,EAAAsB,QAAA,sEAGpB,OAFbo1C,EAAA,IAAAC,YACA7xC,EAAA4xC,EAAAE,OAAA3wC,GACa,CAAA,EAAA4wC,OAAAC,OAAAC,OAAA,UAAAjyC,WAGnB,OAHMkyC,EAAAz3C,EAAAgE,OAGN,CAAA,EAFM0zC,MAAAC,KAAA,IAAAC,WAAAH,IACAI,IAAA,SAAAl5B,GAAA,OAAAA,EAAAjT,SAAA,IAAAosC,SAAA,EAAA,OAAAC,KAAA,UA2BV,SAAAC,EAAAC,EAAAC,EAAAC,SAAiI,OAAAr0C,EAAArD,UAAA,EAAAsB,QAAA,0EACvH0J,EAAA2J,KAAAC,MAEAkT,EAAA,CACFG,YAAAuvB,EACAzvB,eAAA0vB,EACAtvB,oBAAAuvB,iDAKA5iC,EAAAjM,EAAAK,eAAAC,SAAAC,kBAAAC,gBAGA,gBAAA,CAAA,EAAA,QAAA9J,EAAAyS,EAAAlJ,eAAAK,gBAAA,IAAA5J,OAAA,EAAAA,EAAAyJ,UAAAjF,KAAA,SAAAa,GACIkQ,EAAAlQ,EAAAE,KAAAuE,KACJrF,MAAA,SAAA/C,GACIiE,QAAAjE,MAAA,6BAAAA,oBAHJ8T,EAAAxR,aAOW,KAAA,EAAA,MAAA,CAAA,EAAA2O,EAAArR,QAAA6O,qBACD,OADR/J,EAAAoP,EAAAxR,OACQ,CAAA,EAAAyR,EAAAF,EAAA9J,EAAA/D,KAAAC,UAAA4gB,GAAAniB,EAAAsP,yBAQd,OARMC,EAAAH,EAAAxR,OAQN,CAAA,EANM,CACFukB,QAAAA,EACA5S,MAAAA,EACAlK,UAAAA,SA7SR5J,EAAAu2C,QAAA,WACIC,UAAAD,SACIC,UAAAD,QAAA,MAKRv2C,EAAAipB,OAAA,SAAAwtB,EAAAC,GACI,OAAAjvB,KAAAC,MAAAD,KAAAwB,UAAAytB,EAAAD,EAAA,IAAAA,GAIJz2C,EAAA22C,QAAA,SAAA1oB,GAII,IAHA,IAAA2oB,EAAAC,EAAAzmC,EAAA6d,EAAA7d,OAGAA,GAEIymC,EAAA5oB,EADA2oB,EAAAnvB,KAAAC,MAAAD,KAAAwB,SAAA7Y,MAEA6d,EAAA2oB,GAAA3oB,EAAA7d,GACA6d,EAAA7d,GAAAymC,EAEJ,OAAA5oB,GAIJjuB,EAAA4c,KAAA,SAAAqR,EAAAqE,EAAAwkB,GACI,QADiD,IAAAA,IAAAA,GAAA,GACjD7oB,aAAA4nB,MACI,OAAA5nB,EAAArR,KAAA,SAAAC,EAAAC,GACI,OAAAD,EAAAyV,GAAAxV,EAAAwV,GACIwkB,EAAA,GAAA,EACGj6B,EAAAyV,GAAAxV,EAAAwV,GACHwkB,GAAA,EAAA,EAEA,KAOhB92C,EAAA+2C,oBAAA,SAAAC,GACI,IAAAC,EAAA,SAAAlyC,GAEI,OAAAmqB,SAAAnqB,EAAAmyC,MADA,QACA,IAAA,MAEJ,OAAAF,EAAAp6B,KAAA,SAAAC,EAAAC,GAAA,OAAAm6B,EAAAp6B,EAAA9X,MAAAkyC,EAAAn6B,EAAA/X,SAIJ/E,EAAAm3C,cAAA,SAAA98B,EAAA+8B,QAAwD,IAAAA,IAAAA,EAAA,SACpD/8B,EAAAg9B,OAAAh9B,GACA,IAAAmrB,EAAA,GASA,OARAA,EAAA8R,EAAAD,OAAAnoB,SAAAqoB,OAAAl9B,EAAA,OACAmrB,EAAAr1B,EAAAknC,OAAAnoB,SAAAqoB,QAAAl9B,EAAA,KAAAmrB,EAAA8R,GAAA,KACA9R,EAAAgS,EAAAH,OAAAnoB,SAAAqoB,OAAAl9B,EAAA,KAAAmrB,EAAA8R,EAAA,GAAA9R,EAAAr1B,IACAq1B,EAAA8R,EAAA,KAAgB9R,EAAA8R,EAAA,IAAA9R,EAAA8R,GAChB9R,EAAAr1B,EAAA,KAAgBq1B,EAAAr1B,EAAA,IAAAq1B,EAAAr1B,GAChBq1B,EAAAgS,EAAA,KAAgBhS,EAAAgS,EAAA,IAAAhS,EAAAgS,GAEhBJ,EAAAK,QAAA,IAAAjS,EAAA8R,GAAAG,QAAA,IAAAjS,EAAAr1B,GAAAsnC,QAAA,IAAAjS,EAAAgS,IAKJx3C,EAAA4tB,YAAA,SAAA/hB,EAAA6rC,GACI,IAAAnrC,EAAAnO,GAAAiO,GAAAR,EAAAyB,EAAAoqC,EAAApqC,EAAAzB,EAAA0B,EAAAmqC,EAAAnqC,GAEA,OADAka,KAAAkwB,KAAAprC,EAAAe,EAAAf,EAAAe,EAAAf,EAAAgB,EAAAhB,EAAAgB,IAKJvN,EAAA43C,SAAA,SAAA/rC,EAAA6rC,GAEI,IAAAG,EAAAH,EAAApqC,EAAAzB,EAAAyB,EACAwqC,EAAAJ,EAAAnqC,EAAA1B,EAAA0B,EAMA,OALAnP,GAAAiO,GAAAwrC,EAAAC,GAEAC,UAAA35C,GAAAiO,GAAA,EAAA,IAEAob,KAAAipB,GAAA,KAKJ1wC,EAAAg4C,KAAA,SAAAC,EAAAC,GACI,IAAApqC,EAAAmqC,EAAAlqC,sBAAA3P,GAAAiO,GAAA,EAAA,IAEA,OADA6rC,EAAAlqC,qBAAAF,IAKJ9N,EAAAm4C,SAAA,SAAA3R,EAAA4R,GACI,QADwC,IAAAA,IAAAA,GAAA,GACxCA,EACI5R,GAAA,gBACG,CACH,IAAA6R,GAAA,IAAA9kC,MAAAwC,UACAywB,GAAA,SAAA6R,EAAA,OAEJ,OAAA,IAAAn4C,QAAA,SAAAC,EAAAC,GACIhC,GAAAk6C,OAAApU,KAAAsC,EAAA,SAAA37B,EAAAC,GACID,GAASzK,GAAAA,IACTD,GAAAA,EAAA2K,QAMZ9K,EAAAmmC,KAAA,WACI,IAAAoS,GAAA,IAAAhlC,MAAAwC,UAMA,MALA,uCAAA0hC,QAAA,QAAA,SAAAe,GACI,IAAAC,GAAAF,EAAA,GAAA9wB,KAAAwB,UAAA,GAAA,EAEA,OADAsvB,EAAA9wB,KAAAC,MAAA6wB,EAAA,KACA,KAAAC,EAAAC,EAAA,EAAAA,EAAA,GAAA5uC,SAAA,OAKR7J,EAAA60C,uBAAAA,EAiBA70C,EAAAg8B,8BAAA,SAAA8Y,GACI,IAAA35B,EAAA05B,EAAAC,GACA,OAAAyC,OAAAp8B,EAAA65B,MAAAiB,SAAA,EAAA,KAAA,IAAAsB,OAAAp8B,EAAA85B,OAAAgB,SAAA,EAAA,KAAA,IAAAsB,OAAAp8B,EAAA+5B,SAAAe,SAAA,EAAA,MAGJj2C,EAAAi8B,8BAAA,SAAA6Y,GACI,IAAA35B,EAAA05B,EAAAC,GACA,OAAAyC,OAAAp8B,EAAA65B,MAAAiB,SAAA,EAAA,KAAA,IAAAsB,OAAAp8B,EAAA85B,OAAAgB,SAAA,EAAA,KAAA,IAAAsB,OAAAp8B,EAAA+5B,SAAAe,SAAA,EAAA,KAAA,IAAAsB,OAAAp8B,EAAAd,SAAA47B,SAAA,EAAA,MAIJj2C,EAAA04C,+BAAA,WACI,IAAAllC,EAAA,IAAAD,KACAolC,EAAA,IAAAplC,KAAAC,EAAAolC,iBAAAplC,EAAAqlC,cAAArlC,EAAAslC,aAAAtlC,EAAAulC,cAAAvlC,EAAAwlC,gBAAAxlC,EAAAylC,iBAaAC,EAAA,EAHAP,EAAAQ,YAgBAC,EAVA,IAAA7lC,KAAAolC,EAAAC,iBAAAD,EAAAE,cAAAF,EAAAG,aAAAI,EAAA,GAKI,GACA,IAIJnjC,UAAA4iC,EAAA5iC,UAIAm/B,GADAztB,KAAAC,MAAA0xB,EAAA,IAAA,IACA3xB,KAAAC,MAAA0xB,EAAA,IAAA,KACAnE,EAAAxtB,KAAAC,MAAA0xB,EAAA,KAAA,IACApE,EAAAvtB,KAAAC,MAAA0xB,EAAA,OAGA,OAAA7B,OAAAvC,GAAAiB,SAAA,EAAA,KAAA,IAAAsB,OAAAtC,GAAAgB,SAAA,EAAA,KAAA,IAAAsB,OAAArC,GAAAe,SAAA,EAAA,MAGJj2C,EAAAq5C,wCAAA,WAWI,IAAAV,EAAA,IAAAplC,MAAA,IAAAA,MAAA+lC,eAAA,QAAA,CAAAC,SAAA,iBAMAL,EAAA,EAHAP,EAAAQ,YAgBAC,EAVA,IAAA7lC,KAAAolC,EAAAC,iBAAAD,EAAAE,cAAAF,EAAAG,aAAAI,EAAA,GAKI,GACA,IAIJnjC,UAAA4iC,EAAA5iC,UAGAsE,EAAAoN,KAAAC,MAAA0xB,EAAA,IAAA,IACAlE,EAAAztB,KAAAC,MAAA0xB,EAAA,IAAA,IACAnE,EAAAxtB,KAAAC,MAAA0xB,EAAA,KAAA,IACApE,EAAAvtB,KAAAC,MAAA0xB,EAAA,OAGA,OAAA7B,OAAAvC,GAAAiB,SAAA,EAAA,KAAA,IAAAsB,OAAAtC,GAAAgB,SAAA,EAAA,KAAA,IAAAsB,OAAArC,GAAAe,SAAA,EAAA,KAAA,IAAAsB,OAAAl9B,GAAA47B,SAAA,EAAA,MAGJj2C,EAAA4T,sBAAAA,EAOA5T,EAAAkb,kBAAA,SAAAxH,EAAA9J,EAAAwrC,EAAAoE,GAAsH,YAA3B,IAAAA,IAAAA,EAAA,GAA2Bv3C,EAAArD,UAAA,EAAAsB,QAAA,4DAClH,IAAAk1C,EAAa,MAAA,IAAA/zC,MAAA,kCAGN,MAAA,CAAA,EAAAg0C,EAFD3hC,EAAA,IAAA9J,EAAA,IAAA4vC,EAAA,IAAApE,WAEN,MAAA,CAAA,EAAAj3C,EAAAgE,cAGJnC,EAAAq1C,WAAAA,EASAr1C,EAAAktB,SAAA,WACI,OAAAjsB,OAAAu1C,UAAAiD,QAIJz5C,EAAAuxB,mBAAA,+GAKkC,OAJxB6kB,EAAAnwC,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAG,YACAwvB,EAAApwC,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAC,eACA2vB,EAAArwC,EAAAxG,QAAAC,SAAAwU,SAAAwS,QAAAK,oBAEwB,CAAA,EAAAovB,EAAAC,EAAAC,EAAAC,kBAAxB5yC,EAAAvF,EAAAgE,OACNyO,EAAAlJ,eAAAK,SAAAO,aAAA5E,GAAAf,KAAA,wBAKJ3C,EAAA05C,sBAAA,SAAAtD,EAAAC,EAAAC,0FACkC,KAAA,EAAA,MAAA,CAAA,EAAAH,EAAAC,EAAAC,EAAAC,kBAAxB5yC,EAAAvF,EAAAgE,OACNyO,EAAAlJ,eAAAK,SAAAO,aAAA5E,GAAAf,KAAA,wBAKJ3C,EAAAm2C,mBAAAA,24ECxRA,IAAAnwC,EAAA9H,EAAA,WACAuS,EAAAvS,EAAA,uBACA2S,EAAA3S,EAAA,2BACA4a,EAAA5a,EAAA,eACA6a,EAAA7a,EAAA,yBACAikB,EAAAjkB,EAAA,2BAEMC,EAAAC,GAAAC,WAAAC,EAAAH,EAAAG,QAGNq7C,GAHMx7C,EAAAI,SAGN,SAAAE,GAAA,SAAAk7C,IAAA,IAAAj7C,EAAA,OAAAD,GAAAA,EAAAE,MAAAC,KAAAC,YAAAD,YAEIF,EAAAua,MAAA,KACAva,EAAAk7C,QAAA,KACAl7C,EAAAm7C,SAAA,OAuCJ,OA3CsC76C,EAAA26C,EAAAl7C,GAMlCk7C,EAAA16C,UAAAC,OAAA,WACIN,KAAAqa,MAAA7a,GAAAmb,KAAA,cAAA3a,KAAAuM,MACAvM,KAAAg7C,QAAAx7C,GAAAmb,KAAA,mBAAA3a,KAAAqa,OACAra,KAAAi7C,SAAAz7C,GAAAmb,KAAA,oBAAA3a,KAAAqa,OACAra,KAAAg7C,QAAApoC,GAAA,QAAA5S,KAAAk7C,YAAAl7C,MACAA,KAAAi7C,SAAAroC,GAAA,QAAA5S,KAAAm7C,aAAAn7C,OAGJ+6C,EAAA16C,UAAAyS,UAAA,WACI9S,KAAAg7C,QAAAvhC,IAAA,QAAAzZ,KAAAk7C,YAAAl7C,MACAA,KAAAi7C,SAAAxhC,IAAA,QAAAzZ,KAAAm7C,aAAAn7C,OAGJ+6C,EAAA16C,UAAAG,SAAA,WACIR,KAAA0M,OAAA1M,KAAAqa,OACAF,EAAAtZ,QAAAC,SAAAma,gBAAA,IAGJ8/B,EAAA16C,UAAA+a,UAAA,WACIjB,EAAAtZ,QAAAC,SAAAma,gBAAA,IAGE8/B,EAAA16C,UAAA66C,YAAA,mGAEF,OADAjpC,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACA,CAAA,EAAAlB,EAAA+B,eAAAC,YAAAC,wBAAAvU,EAAAgE,OACAsO,EAAA+B,eAAAG,UAAAC,OAAA5M,EAAA6M,aAAAmnC,KAAA,GACAvpC,EAAA+B,eAAAS,YAAAC,wBAGJymC,EAAA16C,UAAA86C,aAAA,WACIlpC,EAAApR,QAAAC,SAAAuH,UAAAjB,EAAAa,gBAAA8K,OACAoH,EAAAtZ,QAAAC,SAAA+wB,cACI1X,EAAAtZ,QAAAC,SAAAoiC,cAEA3f,EAAA1iB,QAAAC,SAAAgD,KAAA,qCAAA,CAAAqtB,QAAA,MAAAC,SAAA5xB,GAAAuxB,MAAA,IAAA,GAAA,IAAA,QAxCS7vB,EAAA,CADpBxB,GACoBq7C,GAArB,CAAA7gC,EAAArZ,UAAqBO,EAAAP,QAAAk6C,6QCZrB,IAAAM,EAAAC,mDAAAD,EASCh5C,OATDi5C,EASC,WACD,OAAiB,SAAAC,GAEP,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGC,GAAAF,EAAAE,GACC,OAAAF,EAAAE,GAAAt6C,QAGD,IAAAu6C,EAAAH,EAAAE,GAAA,CACCnqC,EAAAmqC,EACAE,GAAA,EACAx6C,QAAA,IAUD,OANAm6C,EAAAG,GAAAx1C,KAAAy1C,EAAAv6C,QAAAu6C,EAAAA,EAAAv6C,QAAAq6C,GAGAE,EAAAC,GAAA,EAGAD,EAAAv6C,QA0DD,OArDAq6C,EAAAI,EAAAN,EAGAE,EAAA7B,EAAA4B,EAGAC,EAAA9B,EAAA,SAAAv4C,EAAA+E,EAAA21C,GACCL,EAAAM,EAAA36C,EAAA+E,IACCnD,OAAAC,eAAA7B,EAAA+E,EAAA,CAAuC61C,YAAA,EAAkB94C,IAAA44C,KAK3DL,EAAA5B,EAAA,SAAAz4C,GACC,oBAAA66C,QAAAA,OAAAC,aACCl5C,OAAAC,eAAA7B,EAAA66C,OAAAC,YAAA,CAAqDC,MAAA,WAEtDn5C,OAAAC,eAAA7B,EAAA,aAAA,CAA+C+6C,OAAA,KAQhDV,EAAAW,EAAA,SAAAD,EAAA1oC,GAEC,GADA,EAAAA,IAAA0oC,EAAAV,EAAAU,IACA,EAAA1oC,EAAA,OAAA0oC,EACA,GAAA,EAAA1oC,GAAA,iBAAA0oC,GAAAA,GAAAA,EAAAE,WAAA,OAAAF,EACA,IAAAG,EAAAt5C,OAAA+C,OAAA,MAGA,GAFA01C,EAAA5B,EAAAyC,GACAt5C,OAAAC,eAAAq5C,EAAA,UAAA,CAAuCN,YAAA,EAAkBG,MAAAA,IACzD,EAAA1oC,GAAA,iBAAA0oC,EAAA,IAAA,IAAAzoB,KAAAyoB,EAA+DV,EAAA9B,EAAA2C,EAAA5oB,EAAA,SAAAA,GAA+C,OAAAyoB,EAAAzoB,IAAoB6oB,KAAA,KAAA7oB,IAClI,OAAA4oB,GAIDb,EAAAe,EAAA,SAAAb,GACC,IAAAG,EAAAH,GAAAA,EAAAU,WACC,WAAwB,OAAAV,EAAA,SACxB,WAA8B,OAAAA,GAE/B,OADAF,EAAA9B,EAAAmC,EAAA,IAAAA,GACAA,GAIDL,EAAAM,EAAA,SAAAU,EAAA98C,GAAqD,OAAAqD,OAAA3C,UAAAm+B,eAAAt4B,KAAAu2C,EAAA98C,IAGrD87C,EAAAiB,EAAA,GAIAjB,EAAAA,EAAA7C,EAAA,cAnFV,CAsFU,CAEJ+D,aAKC,SAAAhB,EAAAv6C,EAAAq6C,GAEPE,EAAAv6C,QAAAq6C,EAAwD,mBAIlDmB,wBAKC,SAAAjB,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAClDqB,EAAArB,EAAyD,wBACzDsB,EAAAtB,EAA8D,4BAC9DuB,EAAAvB,EAAgE,6BAChEwB,EAAAxB,EAAqE,+BACrEyB,EAAAzB,EAAwE,iCACxE0B,EAAA1B,EAA8E,oCAC9E2B,EAAA3B,EAAiE,6BAEjEE,EAAAv6C,QAAA,SAAAuE,GACE,OAAA,IAAArE,QAAA,SAAAC,EAAAC,GACE,IAAA67C,EAAA13C,EAAAb,KACAw4C,EAAA33C,EAAAvB,QACAm5C,EAAA53C,EAAA43C,aAEAV,EAAAW,WAAAH,WACEC,EAAA,gBAGF,IAAAG,EAAA,IAAAC,eAGA,GAAA/3C,EAAAg4C,KAAA,CACE,IAAAp/B,EAAA5Y,EAAAg4C,KAAAp/B,UAAA,GACAq/B,EAAAj4C,EAAAg4C,KAAAC,SAAAC,SAAA3Q,mBAAAvnC,EAAAg4C,KAAAC,WAAA,GACAN,EAAAz3C,cAAA,SAAAi4C,KAAAv/B,EAAA,IAAAq/B,GAGF,IAAAG,EAAAd,EAAAt3C,EAAAC,QAAAD,EAAAc,KAMA,SAAAu3C,IACE,GAAAP,EAAA,CAIA,IAAAQ,EAAA,0BAAAR,EAAAP,EAAAO,EAAAS,yBAAA,KAGAt5C,EAAA,CACEE,KAHFy4C,GAAA,SAAAA,GAAA,SAAAA,EAAAE,EAAA74C,SAAA64C,EAAAU,aAIEt5C,OAAA44C,EAAA54C,OACAu5C,WAAAX,EAAAW,WACAh6C,QAAA65C,EACAt4C,OAAAA,EACA83C,QAAAA,GAGFX,EAAAv7C,EAAAC,EAAAoD,GAGA64C,EAAA,MAmEF,GA5FAA,EAAA1Z,KAAAp+B,EAAAoB,OAAAs3C,cAAArB,EAAAe,EAAAp4C,EAAAhB,OAAAgB,EAAA24C,mBAAA,GAGAb,EAAAc,QAAA54C,EAAA44C,QAyBA,cAAAd,EAEEA,EAAAO,UAAAA,EAGAP,EAAAe,mBAAA,WACEf,GAAA,IAAAA,EAAAgB,aAQA,IAAAhB,EAAA54C,QAAA44C,EAAAiB,aAAA,IAAAjB,EAAAiB,YAAAC,QAAA,WAKAt9B,WAAA28B,IAKJP,EAAAmB,QAAA,WACEnB,IAIAj8C,EAAA47C,EAAA,kBAAAz3C,EAAA,eAAA83C,IAGAA,EAAA,OAIFA,EAAAj7C,QAAA,WAGEhB,EAAA47C,EAAA,gBAAAz3C,EAAA,KAAA83C,IAGAA,EAAA,MAIFA,EAAAoB,UAAA,WACE,IAAAC,EAAA,cAAAn5C,EAAA44C,QAAA,cACA54C,EAAAm5C,sBACEA,EAAAn5C,EAAAm5C,qBAEFt9C,EAAA47C,EAAA0B,EAAAn5C,EAAAA,EAAAo5C,cAAAp5C,EAAAo5C,aAAAC,oBAAA,YAAA,eAAAvB,IAOAA,EAAA,MAMFZ,EAAAoC,uBAAA,CAEE,IAAAC,GAAAv5C,EAAAw5C,iBAAAhC,EAAAY,KAAAp4C,EAAAy5C,eAAArC,EAAAsC,KAAA15C,EAAAy5C,qBAAA/Z,EAIA6Z,IACE5B,EAAA33C,EAAA25C,gBAAAJ,GAKJ,qBAAAzB,GACEZ,EAAA7iC,QAAAsjC,EAAA,SAAAiC,EAAA7rB,QACE,IAAA2pB,GAAA,iBAAA3pB,EAAA8rB,qBAEElC,EAAA5pB,GAGA+pB,EAAAgC,iBAAA/rB,EAAA6rB,KAMN1C,EAAA6C,YAAA/5C,EAAAw5C,mBACE1B,EAAA0B,kBAAAx5C,EAAAw5C,iBAIF5B,GAAA,SAAAA,IACEE,EAAAF,aAAA53C,EAAA43C,cAIF,mBAAA53C,EAAAg6C,oBACElC,EAAA7gC,iBAAA,WAAAjX,EAAAg6C,oBAIF,mBAAAh6C,EAAAi6C,kBAAAnC,EAAAoC,QACEpC,EAAAoC,OAAAjjC,iBAAA,WAAAjX,EAAAi6C,kBAGFj6C,EAAAm6C,aAEEn6C,EAAAm6C,YAAAC,QAAAh8C,KAAA,SAAAi8C,GACEvC,IAIAA,EAAAwC,QACAz+C,EAAAw+C,GAEAvC,EAAA,QAIJJ,IACEA,EAAA,MAIFI,EAAAyC,KAAA7C,OAOE8C,iBAKC,SAAAxE,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAA+C,kBAC/Cc,EAAAd,EAAqD,yBACrD2E,EAAA3E,EAAoD,uBACpD4E,EAAA5E,EAAgE,6BAShE,SAAA6E,EAAAC,GACE,IAAAjnC,EAAA,IAAA8mC,EAAAG,GACAz/C,EAAAy7C,EAAA6D,EAAA//C,UAAAo9C,QAAAnkC,GAQA,OALAujC,EAAA2D,OAAA1/C,EAAAs/C,EAAA//C,UAAAiZ,GAGAujC,EAAA2D,OAAA1/C,EAAAwY,GAEAxY,EAIF,IAAA2/C,EAAAH,EAtBA7E,EAAqD,sBAyBrDgF,EAAAL,MAAAA,EAGAK,EAAA16C,OAAA,SAAA26C,GACE,OAAAJ,EAAAD,EAAAI,EAAAE,SAAAD,KAIFD,EAAAG,OAAAnF,EAA0D,0BAC1DgF,EAAAI,YAAApF,EAAoE,+BACpEgF,EAAAK,SAAArF,EAA8D,4BAG9DgF,EAAAM,IAAA,SAAAC,GACE,OAAA1/C,QAAAy/C,IAAAC,IAEFP,EAAAQ,OAAAxF,EAA2D,2BAG3DgF,EAAAS,aAAAzF,EAAuE,iCAEvEE,EAAAv6C,QAAAq/C,EAGA9E,EAAAv6C,QAAA,QAAAq/C,GAKMU,yBAKC,SAAAxF,GAWP,SAAAiF,EAAA36C,GACEjG,KAAAiG,QAAAA,EAGF26C,EAAAvgD,UAAA4K,SAAA,WACE,MAAA,UAAAjL,KAAAiG,QAAA,KAAAjG,KAAAiG,QAAA,KAGF26C,EAAAvgD,UAAA+gD,YAAA,EAEAzF,EAAAv6C,QAAAw/C,GAKMS,8BAKC,SAAA1F,EAAAv6C,EAAAq6C,GAKP,IAAAmF,EAAAnF,EAAiD,0BAQjD,SAAAoF,EAAAS,GACE,GAAA,mBAAAA,EACE,MAAA,IAAAC,UAAA,gCAGF,IAAAC,EACAxhD,KAAA+/C,QAAA,IAAAz+C,QAAA,SAAAC,GACEigD,EAAAjgD,IAGF,IAAA2T,EAAAlV,KACAshD,EAAA,SAAAr7C,GACEiP,EAAAusC,SAKAvsC,EAAAusC,OAAA,IAAAb,EAAA36C,GACAu7C,EAAAtsC,EAAAusC,WAOJZ,EAAAxgD,UAAAqhD,iBAAA,WACE,GAAA1hD,KAAAyhD,OACE,MAAAzhD,KAAAyhD,QAQJZ,EAAAc,OAAA,WACE,IAAA3B,EAIA,MAAA,CACE9qC,MAJF,IAAA2rC,EAAA,SAAAjH,GACEoG,EAAApG,IAIAoG,OAAAA,IAIJrE,EAAAv6C,QAAAy/C,GAKMe,2BAKC,SAAAjG,GAKPA,EAAAv6C,QAAA,SAAA+6C,GACE,SAAAA,IAAAA,EAAAiF,cAMIS,sBAKC,SAAAlG,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAClDuB,EAAAvB,EAA8D,6BAC9DqG,EAAArG,EAAyE,oCACzEsG,EAAAtG,EAAmE,iCACnE4E,EAAA5E,EAA2D,6BAC3DuG,EAAAvG,EAAgE,8BAEhEwG,EAAAD,EAAAC,WAMA,SAAA7B,EAAAM,GACE1gD,KAAA2gD,SAAAD,EACA1gD,KAAAkiD,aAAA,CACEzE,QAAA,IAAAqE,EACAl9C,SAAA,IAAAk9C,GASJ1B,EAAA//C,UAAAo9C,QAAA,SAAA93C,GAGE,iBAAAA,GACEA,EAAA1F,UAAA,IAAA,IACAwG,IAAAxG,UAAA,GAEA0F,EAAAA,GAAA,IAGFA,EAAA06C,EAAArgD,KAAA2gD,SAAAh7C,IAGAoB,OACEpB,EAAAoB,OAAApB,EAAAoB,OAAAy4C,cACDx/C,KAAA2gD,SAAA55C,OACCpB,EAAAoB,OAAA/G,KAAA2gD,SAAA55C,OAAAy4C,cAEA75C,EAAAoB,OAAA,MAGF,IAAAg4C,EAAAp5C,EAAAo5C,kBAEA1Z,IAAA0Z,GACEiD,EAAAG,cAAApD,EAAA,CACEqD,kBAAAH,EAAAlD,aAAAkD,EAAA,QAAA,SACAI,kBAAAJ,EAAAlD,aAAAkD,EAAA,QAAA,SACAjD,oBAAAiD,EAAAlD,aAAAkD,EAAA,QAAA,WAHoC,GAQxC,IAAAK,EAAA,GACAC,GAAA,EACAviD,KAAAkiD,aAAAzE,QAAAzjC,QAAA,SAAAwoC,GACE,mBAAAA,EAAAC,UAAA,IAAAD,EAAAC,QAAA98C,KAIA48C,EAAAA,GAAAC,EAAAE,YAEAJ,EAAAK,QAAAH,EAAAI,UAAAJ,EAAAK,aAGF,IAKA9C,EALA+C,EAAA,GAOA,GANA9iD,KAAAkiD,aAAAt9C,SAAAoV,QAAA,SAAAwoC,GACEM,EAAAtpC,KAAAgpC,EAAAI,UAAAJ,EAAAK,aAKFN,EAAA,CACE,IAAAQ,EAAA,CAAAhB,OAAA1c,GAMA,IAJA4R,MAAA52C,UAAAsiD,QAAA5iD,MAAAgjD,EAAAT,GACAS,EAAAC,OAAAF,GAEA/C,EAAAz+C,QAAAC,QAAAoE,GACAo9C,EAAAvxC,QACEuuC,EAAAA,EAAAh8C,KAAAg/C,EAAAE,QAAAF,EAAAE,SAGF,OAAAlD,EAKF,IADA,IAAAmD,EAAAv9C,EACA28C,EAAA9wC,QAAA,CACE,IAAA2xC,EAAAb,EAAAW,QACAG,EAAAd,EAAAW,QACA,IACEC,EAAAC,EAAAD,GACD,MAAAjiD,GACCmiD,EAAAniD,GACA,OAIJ,IACE8+C,EAAAgC,EAAAmB,GACD,MAAAjiD,GACC,OAAAK,QAAAE,OAAAP,GAGF,KAAA6hD,EAAAtxC,QACEuuC,EAAAA,EAAAh8C,KAAA++C,EAAAG,QAAAH,EAAAG,SAGF,OAAAlD,GAGFK,EAAA//C,UAAAgjD,OAAA,SAAA19C,GAEE,OADAA,EAAA06C,EAAArgD,KAAA2gD,SAAAh7C,GACAq3C,EAAAr3C,EAAAc,IAAAd,EAAAhB,OAAAgB,EAAA24C,kBAAAzF,QAAA,MAAA,KAIFgE,EAAA7iC,QAAA,CAAA,SAAA,MAAA,OAAA,WAAA,SAAAjT,GAEEq5C,EAAA//C,UAAA0G,GAAA,SAAAN,EAAAd,GACE,OAAA3F,KAAAy9C,QAAA4C,EAAA16C,GAAA,GAAA,CACEoB,OAAAA,EACAN,IAAAA,EACA3B,MAAAa,GAAA,IAAAb,WAKN+3C,EAAA7iC,QAAA,CAAA,OAAA,MAAA,SAAA,SAAAjT,GAEEq5C,EAAA//C,UAAA0G,GAAA,SAAAN,EAAA3B,EAAAa,GACE,OAAA3F,KAAAy9C,QAAA4C,EAAA16C,GAAA,GAAA,CACEoB,OAAAA,EACAN,IAAAA,EACA3B,KAAAA,QAKN62C,EAAAv6C,QAAAg/C,GAKMkD,mCAKC,SAAA3H,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAElD,SAAAqG,IACE9hD,KAAAujD,SAAA,GAWFzB,EAAAzhD,UAAAmjD,IAAA,SAAAZ,EAAAC,EAAAzqC,GAOE,OANApY,KAAAujD,SAAA/pC,KAAA,CACEopC,UAAAA,EACAC,SAAAA,EACAH,cAAAtqC,GAAAA,EAAAsqC,YACAD,QAAArqC,EAAAA,EAAAqqC,QAAA,OAEFziD,KAAAujD,SAAA/xC,OAAA,GAQFswC,EAAAzhD,UAAAojD,MAAA,SAAAp6C,GACErJ,KAAAujD,SAAAl6C,KACErJ,KAAAujD,SAAAl6C,GAAA,OAYJy4C,EAAAzhD,UAAA2Z,QAAA,SAAA0pC,GACE7G,EAAA7iC,QAAAha,KAAAujD,SAAA,SAAA7K,GACE,OAAAA,GACEgL,EAAAhL,MAKNiD,EAAAv6C,QAAA0gD,GAKM6B,8BAKC,SAAAhI,EAAAv6C,EAAAq6C,GAKP,IAAAmI,EAAAnI,EAAwE,kCACxEoI,EAAApI,EAAoE,gCAWpEE,EAAAv6C,QAAA,SAAAwE,EAAAk+C,GACE,OAAAl+C,IAAAg+C,EAAAE,GACED,EAAAj+C,EAAAk+C,GAEFA,IAMIC,4BAKC,SAAApI,EAAAv6C,EAAAq6C,GAKP,IAAAuI,EAAAvI,EAA6D,8BAY7DE,EAAAv6C,QAAA,SAAA6E,EAAAN,EAAAmhC,EAAA2W,EAAA74C,GACE,IAAA3D,EAAA,IAAAwB,MAAAwD,GACA,OAAA+9C,EAAA/iD,EAAA0E,EAAAmhC,EAAA2W,EAAA74C,KAMIq/C,gCAKC,SAAAtI,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAClDyI,EAAAzI,EAA+D,+BAC/DqF,EAAArF,EAA6D,4BAC7DkF,EAAAlF,EAAsD,qBAKtD,SAAA0I,EAAAx+C,GACEA,EAAAm6C,aACEn6C,EAAAm6C,YAAA4B,mBAUJ/F,EAAAv6C,QAAA,SAAAuE,GA8BE,OA7BAw+C,EAAAx+C,GAGAA,EAAAvB,QAAAuB,EAAAvB,SAAA,GAGAuB,EAAAb,KAAAo/C,EAAAh+C,KAAAP,EAAAA,EAAAb,KAAAa,EAAAvB,QAAAuB,EAAAy+C,kBAQAz+C,EAAAvB,QAAAy4C,EAAAwH,MAAA1+C,EAAAvB,QAAAkgD,QAAA,GAAA3+C,EAAAvB,QAAAuB,EAAAoB,SAAA,GAAApB,EAAAvB,SAMAy4C,EAAA7iC,QAAA,CAAA,SAAA,MAAA,OAAA,OAAA,MAAA,QAAA,UAAA,SAAAjT,UAGIpB,EAAAvB,QAAA2C,MAIJpB,EAAA4+C,SAAA5D,EAAA4D,SAEA5+C,GAAA5B,KAAA,SAAAa,GAWE,OAVAu/C,EAAAx+C,GAGAf,EAAAE,KAAAo/C,EAAAh+C,KAAAP,EAAAf,EAAAE,KAAAF,EAAAR,QAAAuB,EAAA6+C,mBAOA5/C,GACD,SAAA68C,GAeC,OAdAX,EAAAW,KACE0C,EAAAx+C,GAGA87C,GAAAA,EAAA78C,WACE68C,EAAA78C,SAAAE,KAAAo/C,EAAAh+C,KAAAP,EAAA87C,EAAA78C,SAAAE,KAAA28C,EAAA78C,SAAAR,QAAAuB,EAAA6+C,qBASJljD,QAAAE,OAAAigD,OAOEgD,6BAKC,SAAA9I,GAePA,EAAAv6C,QAAA,SAAAH,EAAA0E,EAAAmhC,EAAA2W,EAAA74C,GA4BE,OA3BA3D,EAAA0E,OAAAA,EACAmhC,IACE7lC,EAAA6lC,KAAAA,GAGF7lC,EAAAw8C,QAAAA,EACAx8C,EAAA2D,SAAAA,EACA3D,EAAAigD,cAAA,EAEAjgD,EAAAyjD,OAAA,WACE,MAAA,CAEEz+C,QAAAjG,KAAAiG,QACAE,KAAAnG,KAAAmG,KAEAw+C,YAAA3kD,KAAA2kD,YACAC,OAAA5kD,KAAA4kD,OAEAC,SAAA7kD,KAAA6kD,SACAC,WAAA9kD,KAAA8kD,WACAC,aAAA/kD,KAAA+kD,aACAC,MAAAhlD,KAAAglD,MAEAr/C,OAAA3F,KAAA2F,OACAmhC,KAAA9mC,KAAA8mC,OAGJ7lC,IAMIgkD,4BAKC,SAAAtJ,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAgD,kBAUhDE,EAAAv6C,QAAA,SAAA8jD,EAAAC,GAEEA,EAAAA,GAAA,GACA,IAAAx/C,EAAA,GAEAy/C,EAAA,CAAA,MAAA,SAAA,QACAC,EAAA,CAAA,UAAA,OAAA,QAAA,UACAC,EAAA,CAAA,UAAA,mBAAA,oBAAA,mBAAA,UAAA,iBAAA,kBAAA,UAAA,eAAA,iBAAA,iBAAA,mBAAA,qBAAA,aAAA,mBAAA,gBAAA,eAAA,YAAA,YAAA,aAAA,cAAA,aAAA,oBAOAC,EAAA,CAAA,kBAEA,SAAAC,EAAAn0C,EAAAswC,GACE,OAAA9E,EAAA4I,cAAAp0C,IAAAwrC,EAAA4I,cAAA9D,GACE9E,EAAAwH,MAAAhzC,EAAAswC,GACD9E,EAAA4I,cAAA9D,GACC9E,EAAAwH,MAAA,GAAA1C,GACD9E,EAAA6I,QAAA/D,GACCA,EAAAgE,QAEFhE,EAGF,SAAAiE,EAAAC,GACEhJ,EAAA6C,YAAAyF,EAAAU,IAEChJ,EAAA6C,YAAAwF,EAAAW,MACClgD,EAAAkgD,GAAAL,OAAAngB,EAAA6f,EAAAW,KAFAlgD,EAAAkgD,GAAAL,EAAAN,EAAAW,GAAAV,EAAAU,IAMJhJ,EAAA7iC,QAAAorC,EAAA,SAAAS,GACEhJ,EAAA6C,YAAAyF,EAAAU,MACElgD,EAAAkgD,GAAAL,OAAAngB,EAAA8f,EAAAU,OAIJhJ,EAAA7iC,QAAAqrC,EAAAO,GAEA/I,EAAA7iC,QAAAsrC,EAAA,SAAAO,GACEhJ,EAAA6C,YAAAyF,EAAAU,IAEChJ,EAAA6C,YAAAwF,EAAAW,MACClgD,EAAAkgD,GAAAL,OAAAngB,EAAA6f,EAAAW,KAFAlgD,EAAAkgD,GAAAL,OAAAngB,EAAA8f,EAAAU,MAMJhJ,EAAA7iC,QAAAurC,EAAA,SAAAM,GACEA,KAAAV,EACEx/C,EAAAkgD,GAAAL,EAAAN,EAAAW,GAAAV,EAAAU,IACDA,KAAAX,IACCv/C,EAAAkgD,GAAAL,OAAAngB,EAAA6f,EAAAW,OAIJ,IAAAC,EAAAV,EAAApC,OAAAqC,GAAArC,OAAAsC,GAAAtC,OAAAuC,GAKAQ,EAAA/iD,OAAAgjD,KAAAd,GAAAlC,OAAAhgD,OAAAgjD,KAAAb,IAAAc,OAAA,SAAAvyB,GAII,OAAA,IAAAoyB,EAAAnH,QAAAjrB,KAKJ,OAFAmpB,EAAA7iC,QAAA+rC,EAAAH,GAEAjgD,IAMIugD,uBAKC,SAAAvK,EAAAv6C,EAAAq6C,GAKP,IAAA2B,EAAA3B,EAA2D,6BAS3DE,EAAAv6C,QAAA,SAAAG,EAAAC,EAAAoD,GACE,IAAAuhD,EAAAvhD,EAAAe,OAAAwgD,eACAvhD,EAAAC,QAAAshD,IAAAA,EAAAvhD,EAAAC,QAGErD,EAAA47C,EAAA,mCAAAx4C,EAAAC,OAAAD,EAAAe,OAAA,KAAAf,EAAA64C,QAAA74C,IAFArD,EAAAqD,KAeEwhD,8BAKC,SAAAzK,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAClDkF,EAAAlF,EAAwD,qBAUxDE,EAAAv6C,QAAA,SAAA0D,EAAAV,EAAAiiD,GACE,IAAA/sC,EAAAtZ,MAAA2gD,EAMA,OAJA9D,EAAA7iC,QAAAqsC,EAAA,SAAA3C,GACE5+C,EAAA4+C,EAAAx9C,KAAAoT,EAAAxU,EAAAV,KAGFU,IAMIwhD,oBAKC,SAAA3K,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAA+C,kBAC/C8K,EAAA9K,EAAmF,wCACnFuI,EAAAvI,EAAkE,8BAElE+K,EAAA,CACE/gD,eAAA,qCAGF,SAAAghD,EAAAriD,EAAA+3C,IACEU,EAAA6C,YAAAt7C,IAAAy4C,EAAA6C,YAAAt7C,EAAA,mBACEA,EAAA,gBAAA+3C,GAgBJ,IAXEoI,EAWF5D,EAAA,CAEE5B,aAAA,CACEqD,mBAAA,EACAC,mBAAA,EACArD,qBAAA,GAGFuF,SAlBA,oBAAA7G,eAEE6G,EAAA9I,EAAoD,8BACrD,IAAAiL,GAAA,qBAAA1jD,OAAA3C,UAAA4K,SAAA/E,KAAAwgD,KAECnC,EAAA9I,EAAqD,0BAEvD8I,GAaAH,iBAAA,CAAA,SAAAt/C,EAAAV,GAIE,OAHAmiD,EAAAniD,EAAA,UACAmiD,EAAAniD,EAAA,gBAEAy4C,EAAAW,WAAA14C,IAAA+3C,EAAA8J,cAAA7hD,IAAA+3C,EAAA+J,SAAA9hD,IAAA+3C,EAAAgK,SAAA/hD,IAAA+3C,EAAAiK,OAAAhiD,IAAA+3C,EAAAkK,OAAAjiD,GAOEA,EAEF+3C,EAAAmK,kBAAAliD,GACEA,EAAAmiD,OAEFpK,EAAAqK,kBAAApiD,IACE2hD,EAAAriD,EAAA,mDACAU,EAAAmG,YAEF4xC,EAAAsK,SAAAriD,IAAAV,GAAA,qBAAAA,EAAA,iBACEqiD,EAAAriD,EAAA,oBACA6C,KAAAC,UAAApC,IAEFA,IAGF0/C,kBAAA,CAAA,SAAA1/C,GACE,IAAAi6C,EAAA/+C,KAAA++C,aACAqD,EAAArD,GAAAA,EAAAqD,kBACAC,EAAAtD,GAAAA,EAAAsD,kBACA+E,GAAAhF,GAAA,SAAApiD,KAAAu9C,aAEA,GAAA6J,GAAA/E,GAAAxF,EAAAwK,SAAAviD,IAAAA,EAAA0M,OACE,IACE,OAAAvK,KAAAgJ,MAAAnL,GACD,MAAAsL,GACC,GAAAg3C,EAAA,CACE,GAAA,gBAAAh3C,EAAAjK,KACE,MAAA69C,EAAA5zC,EAAApQ,KAAA,gBAEF,MAAAoQ,GAKN,OAAAtL,IAOFy5C,QAAA,EAEAa,eAAA,aACAE,eAAA,eAEAgI,kBAAA,EACAC,eAAA,EAEApB,eAAA,SAAAthD,GACE,OAAAA,GAAA,KAAAA,EAAA,KAIJT,QAAA,CACEkgD,OAAA,CACEvjC,OAAA,uCAIJ87B,EAAA7iC,QAAA,CAAA,SAAA,MAAA,QAAA,SAAAjT,GACE45C,EAAAv8C,QAAA2C,GAAA,KAGF81C,EAAA7iC,QAAA,CAAA,OAAA,MAAA,SAAA,SAAAjT,GACE45C,EAAAv8C,QAAA2C,GAAA81C,EAAAwH,MAAAmC,KAGF7K,EAAAv6C,QAAAu/C,GAKM6G,wBAKC,SAAA7L,GAKPA,EAAAv6C,QAAA,SAAAsiD,EAAA+D,GACE,OAAA,WAEE,IADA,IAAAC,EAAA,IAAAzQ,MAAAh3C,UAAAuR,QACAD,EAAA,EAAAA,EAAAm2C,EAAAl2C,OAAAD,IACEm2C,EAAAn2C,GAAAtR,UAAAsR,GAEF,OAAAmyC,EAAA3jD,MAAA0nD,EAAAC,MAOEC,4BAKC,SAAAhM,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAElD,SAAA7E,EAAA2I,GACE,OAAArS,mBAAAqS,GAAA1G,QAAA,QAAA,KAAAA,QAAA,OAAA,KAAAA,QAAA,QAAA,KAAAA,QAAA,OAAA,KAAAA,QAAA,QAAA,KAAAA,QAAA,QAAA,KAgBF8C,EAAAv6C,QAAA,SAAAqF,EAAA9B,EAAA25C,GAEE,IAAA35C,EACE,OAAA8B,EAGF,IAAAmhD,EACA,GAAAtJ,EACEsJ,EAAAtJ,EAAA35C,QACD,GAAAk4C,EAAAqK,kBAAAviD,GACCijD,EAAAjjD,EAAAsG,eACD,CACC,IAAA48C,EAAA,GAEAhL,EAAA7iC,QAAArV,EAAA,SAAA46C,EAAA7rB,GACE6rB,MAAAA,IAIA1C,EAAA6I,QAAAnG,GACE7rB,GAAA,KAEA6rB,EAAA,CAAAA,GAGF1C,EAAA7iC,QAAAulC,EAAA,SAAAuI,GACEjL,EAAAkL,OAAAD,GACEA,EAAAA,EAAAE,cACDnL,EAAAsK,SAAAW,KACCA,EAAA7gD,KAAAC,UAAA4gD,IAEFD,EAAAruC,KAAAo9B,EAAAljB,GAAA,IAAAkjB,EAAAkR,SAIJF,EAAAC,EAAAvQ,KAAA,KAGF,GAAAsQ,EAAA,CACE,IAAAK,EAAAxhD,EAAAk4C,QAAA,MACA,IAAAsJ,IACExhD,EAAAA,EAAAk/C,MAAA,EAAAsC,IAGFxhD,KAAA,IAAAA,EAAAk4C,QAAA,KAAA,IAAA,KAAAiJ,EAGF,OAAAnhD,IAMIyhD,+BAKC,SAAAvM,GAYPA,EAAAv6C,QAAA,SAAAwE,EAAAuiD,GACE,OAAAA,EAAAviD,EAAAizC,QAAA,OAAA,IAAA,IAAAsP,EAAAtP,QAAA,OAAA,IAAAjzC,IAQIwiD,2BAKC,SAAAzM,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAElDE,EAAAv6C,QAAAy7C,EAAAoC,uBAKM,CACEoJ,MAAA,SAAAliD,EAAAg2C,EAAAmM,EAAAvvC,EAAAwvC,EAAAC,GACE,IAAAC,EAAA,GACAA,EAAAjvC,KAAArT,EAAA,IAAA+mC,mBAAAiP,IAEAU,EAAA6L,SAAAJ,IACEG,EAAAjvC,KAAA,WAAA,IAAA7E,KAAA2zC,GAAAK,eAGF9L,EAAAwK,SAAAtuC,IACE0vC,EAAAjvC,KAAA,QAAAT,GAGF8jC,EAAAwK,SAAAkB,IACEE,EAAAjvC,KAAA,UAAA+uC,IAGF,IAAAC,GACEC,EAAAjvC,KAAA,UAGF1X,SAAA2mD,OAAAA,EAAAnR,KAAA,OAGF+H,KAAA,SAAAl5C,GACE,IAAArE,SAAA2mD,OAAA,OAAA,KACA,IAAAnQ,EAAAx2C,SAAA2mD,OAAAnQ,MAAA,IAAAsQ,OAAA,aAAAziD,EAAA,cACA,OAAAmyC,EAAAuQ,mBAAAvQ,EAAA,IAAA,MAGFwQ,OAAA,SAAA3iD,GACEnG,KAAAqoD,MAAAliD,EAAA,GAAAwO,KAAAC,MAAA,SAOJ,CACEyzC,MAAA,aACAhJ,KAAA,WAAwB,OAAA,MACxByJ,OAAA,eAQFC,iCAKC,SAAApN,GAWPA,EAAAv6C,QAAA,SAAAqF,GAIE,MAAA,gCAAAuiD,KAAAviD,KAMIwiD,gCAKC,SAAAtN,GAWPA,EAAAv6C,QAAA,SAAA0F,GACE,MAAA,iBAAAA,IAAA,IAAAA,EAAAo6C,eAMIgI,mCAKC,SAAAvN,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAElDE,EAAAv6C,QAAAy7C,EAAAoC,uBAKK,WACC,IAEAkK,EAFAC,EAAA,kBAAAJ,KAAApR,UAAAyR,WACAC,EAAAxnD,SAAAC,cAAA,KAGA,IAAAunD,EAAAC,SACE,OAAA,WACE,OAAA,GAUJ,SAAAC,EAAA/iD,GACE,IAAAgjD,EAAAhjD,EAWA,OATA2iD,IAEEE,EAAAI,aAAA,OAAAD,GACAA,EAAAH,EAAAG,MAGFH,EAAAI,aAAA,OAAAD,GAGA,CACEA,KAAAH,EAAAG,KACAE,SAAAL,EAAAK,SAAAL,EAAAK,SAAA9Q,QAAA,KAAA,IAAA,GACA+Q,KAAAN,EAAAM,KACAC,OAAAP,EAAAO,OAAAP,EAAAO,OAAAhR,QAAA,MAAA,IAAA,GACAiR,KAAAR,EAAAQ,KAAAR,EAAAQ,KAAAjR,QAAA,KAAA,IAAA,GACAkR,SAAAT,EAAAS,SACAC,KAAAV,EAAAU,KACAT,SAAA,MAAAD,EAAAC,SAAAU,OAAA,GAAAX,EAAAC,SAAA,IAAAD,EAAAC,UAcJ,OARAJ,EAAAK,EAAAnnD,OAAA8pB,SAAAs9B,MAQA,SAAAS,GACE,IAAAC,EAAAtN,EAAAwK,SAAA6C,GAAAV,EAAAU,GAAAA,EACA,OAAAC,EAAAR,WAAAR,EAAAQ,UAAAQ,EAAAP,OAAAT,EAAAS,MArDH,GA4DC,WACE,OAAA,IAQFQ,uCAKC,SAAAzO,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAgD,kBAEhDE,EAAAv6C,QAAA,SAAAgD,EAAAimD,GACExN,EAAA7iC,QAAA5V,EAAA,SAAA+3C,EAAAh2C,GACEA,IAAAkkD,GAAAlkD,EAAAk4C,gBAAAgM,EAAAhM,gBACEj6C,EAAAimD,GAAAlO,SACA/3C,EAAA+B,QAQAmkD,gCAKC,SAAA3O,EAAAv6C,EAAAq6C,GAKP,IAAAoB,EAAApB,EAAkD,kBAIlD8O,EAAA,CAAA,MAAA,gBAAA,iBAAA,eAAA,OAAA,UAAA,OAAA,OAAA,oBAAA,sBAAA,gBAAA,WAAA,eAAA,sBAAA,UAAA,cAAA,cAoBA5O,EAAAv6C,QAAA,SAAAgD,GACE,IACAsvB,EACA6rB,EACAhuC,EAHA44C,EAAA,GAKA,OAAA/lD,GAEAy4C,EAAA7iC,QAAA5V,EAAAomD,MAAA,MAAA,SAAAC,GAKE,GAJAl5C,EAAAk5C,EAAA9L,QAAA,KACAjrB,EAAAmpB,EAAA6N,KAAAD,EAAAE,OAAA,EAAAp5C,IAAAiuC,cACAD,EAAA1C,EAAA6N,KAAAD,EAAAE,OAAAp5C,EAAA,IAEAmiB,EAAA,CACE,GAAAy2B,EAAAz2B,IAAA62B,EAAA5L,QAAAjrB,IAAA,EACE,OAGAy2B,EAAAz2B,GADF,eAAAA,GACEy2B,EAAAz2B,GAAAy2B,EAAAz2B,GAAA,IAAAsvB,OAAA,CAAAzD,IAEA4K,EAAAz2B,GAAAy2B,EAAAz2B,GAAA,KAAA6rB,EAAAA,KAKN4K,GAnBgBA,IAyBZS,0BAKC,SAAAjP,GAyBPA,EAAAv6C,QAAA,SAAAulC,GACE,OAAA,SAAAtX,GACE,OAAAsX,EAAA5mC,MAAA,KAAAsvB,MAOEw7B,6BAKC,SAAAlP,EAAAv6C,EAAAq6C,GAKP,IAAAqP,EAAArP,EAA0D,kBAE1DwG,EAAA,GAGA,CAAA,SAAA,UAAA,SAAA,WAAA,SAAA,UAAAjoC,QAAA,SAAA9P,EAAAqH,GACE0wC,EAAA/3C,GAAA,SAAA6gD,GACE,cAAAA,IAAA7gD,GAAA,KAAAqH,EAAA,EAAA,KAAA,KAAArH,KAIJ,IAAA8gD,EAAA,GACAC,EAAAH,EAAAI,QAAAV,MAAA,KAQA,SAAAW,EAAAD,EAAAE,GAGE,IAFA,IAAAC,EAAAD,EAAAA,EAAAZ,MAAA,KAAAS,EACAK,EAAAJ,EAAAV,MAAA,KACAj5C,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACE,GAAA85C,EAAA95C,GAAA+5C,EAAA/5C,GACE,OAAA,EACD,GAAA85C,EAAA95C,GAAA+5C,EAAA/5C,GACC,OAAA,EAGJ,OAAA,EAUF0wC,EAAAlD,aAAA,SAAAiD,EAAAkJ,EAAAjlD,GACE,IAAAslD,EAAAL,GAAAC,EAAAD,GAEA,SAAAM,EAAAC,EAAAC,GACE,MAAA,WAAAZ,EAAAI,QAAA,0BAAAO,EAAA,IAAAC,GAAAzlD,EAAA,KAAAA,EAAA,IAIF,OAAA,SAAAk2C,EAAAsP,EAAAE,GACE,IAAA,IAAA3J,EACE,MAAA,IAAAv/C,MAAA+oD,EAAAC,EAAA,wBAAAP,IAcF,OAXAK,IAAAP,EAAAS,KACET,EAAAS,IAAA,EAEAvmD,QAAAmH,KAAAm/C,EAAAC,EAAA,+BAAAP,EAAA,8CAQFlJ,GAAAA,EAAA7F,EAAAsP,EAAAE,KAkCJhQ,EAAAv6C,QAAA,CACE+pD,eAAAA,EACAhJ,cAzBF,SAAA/pC,EAAAwzC,EAAAC,GACE,GAAA,iBAAAzzC,EACE,MAAA,IAAAmpC,UAAA,6BAIF,IAFA,IAAAyE,EAAAhjD,OAAAgjD,KAAA5tC,GACA7G,EAAAy0C,EAAAx0C,OACAD,KAAA,GAAA,CACE,IAAAk6C,EAAAzF,EAAAz0C,GACAywC,EAAA4J,EAAAH,GACA,GAAAzJ,EAAA,CACE,IAAA7F,EAAA/jC,EAAAqzC,GACAtkD,OAAAk+B,IAAA8W,GAAA6F,EAAA7F,EAAAsP,EAAArzC,GACA,IAAA,IAAAjR,EACE,MAAA,IAAAo6C,UAAA,UAAAkK,EAAA,YAAAtkD,QAIJ,IAAA,IAAA0kD,EACE,MAAAppD,MAAA,kBAAAgpD,KAQJxJ,WAAAA,IAMI6J,iBAKC,SAAAnQ,EAAAv6C,EAAAq6C,GAKP,IAAAc,EAAAd,EAAqD,yBAIrDxwC,EAAAjI,OAAA3C,UAAA4K,SAQA,SAAAy6C,EAAAnG,GACE,MAAA,mBAAAt0C,EAAA/E,KAAAq5C,GASF,SAAAG,EAAAH,GACE,YAAA,IAAAA,EA4EF,SAAA4H,EAAA5H,GACE,OAAA,OAAAA,GAAA,iBAAAA,EASF,SAAAkG,EAAAlG,GACE,GAAA,oBAAAt0C,EAAA/E,KAAAq5C,GACE,OAAA,EAGF,IAAAl/C,EAAA2C,OAAA+oD,eAAAxM,GACA,OAAA,OAAAl/C,GAAAA,IAAA2C,OAAA3C,UAuCF,SAAA2rD,EAAAzM,GACE,MAAA,sBAAAt0C,EAAA/E,KAAAq5C,GAwEF,SAAAvlC,EAAA4sB,EAAA8c,GAEE,GAAA9c,MAAAA,EAUA,GALA,iBAAAA,IAEEA,EAAA,CAAAA,IAGF8e,EAAA9e,GAEE,IAAA,IAAAr1B,EAAA,EAAAqqC,EAAAhV,EAAAp1B,OAAAD,EAAAqqC,EAAArqC,IACEmyC,EAAAx9C,KAAA,KAAA0gC,EAAAr1B,GAAAA,EAAAq1B,QAIF,IAAA,IAAAlT,KAAAkT,EACE5jC,OAAA3C,UAAAm+B,eAAAt4B,KAAA0gC,EAAAlT,IACEgwB,EAAAx9C,KAAA,KAAA0gC,EAAAlT,GAAAA,EAAAkT,GA2ER+U,EAAAv6C,QAAA,CACEskD,QAAAA,EACAiB,cA1RF,SAAApH,GACE,MAAA,yBAAAt0C,EAAA/E,KAAAq5C,IA0RAqH,SAtSF,SAAArH,GACE,OAAA,OAAAA,IAAAG,EAAAH,IAAA,OAAAA,EAAA0M,cAAAvM,EAAAH,EAAA0M,cAAA,mBAAA1M,EAAA0M,YAAArF,UAAArH,EAAA0M,YAAArF,SAAArH,IAsSA/B,WAlRF,SAAA+B,GACE,MAAA,oBAAA2M,UAAA3M,aAAA2M,UAkRAlF,kBAzQF,SAAAzH,GAOE,MALA,oBAAA4M,aAAAA,YAAAC,OACED,YAAAC,OAAA7M,GAEAA,GAAAA,EAAA0H,QAAA1H,EAAA0H,kBAAAkF,aAqQF9E,SA1PF,SAAA9H,GACE,MAAA,iBAAAA,GA0PAmJ,SAjPF,SAAAnJ,GACE,MAAA,iBAAAA,GAiPA4H,SAAAA,EACA1B,cAAAA,EACA/F,YAAAA,EACAqI,OAlNF,SAAAxI,GACE,MAAA,kBAAAt0C,EAAA/E,KAAAq5C,IAkNAuH,OAzMF,SAAAvH,GACE,MAAA,kBAAAt0C,EAAA/E,KAAAq5C,IAyMAwH,OAhMF,SAAAxH,GACE,MAAA,kBAAAt0C,EAAA/E,KAAAq5C,IAgMAyM,WAAAA,EACAnF,SA9KF,SAAAtH,GACE,OAAA4H,EAAA5H,IAAAyM,EAAAzM,EAAA8M,OA8KAnF,kBArKF,SAAA3H,GACE,MAAA,oBAAA+M,iBAAA/M,aAAA+M,iBAqKArN,qBAzIF,WACE,OAAA,oBAAArH,WAAA,gBAAAA,UAAA2U,SAAA,iBAAA3U,UAAA2U,SAAA,OAAA3U,UAAA2U,UAKA,oBAAAlqD,QAAA,oBAAAP,UAoIAkY,QAAAA,EACAqqC,MAvEF,SAAAA,IACE,IAAAl9C,EAAA,GACA,SAAAqlD,EAAAjN,EAAA7rB,GACE+xB,EAAAt+C,EAAAusB,KAAA+xB,EAAAlG,GACEp4C,EAAAusB,GAAA2wB,EAAAl9C,EAAAusB,GAAA6rB,GACDkG,EAAAlG,GACCp4C,EAAAusB,GAAA2wB,EAAA,GAAA9E,GACDmG,EAAAnG,GACCp4C,EAAAusB,GAAA6rB,EAAAoG,QAEAx+C,EAAAusB,GAAA6rB,EAIJ,IAAA,IAAAhuC,EAAA,EAAAqqC,EAAA37C,UAAAuR,OAAAD,EAAAqqC,EAAArqC,IACEyI,EAAA/Z,UAAAsR,GAAAi7C,GAEF,OAAArlD,GAuDAq5C,OA5CF,SAAAviC,EAAAC,EAAAupC,GAQE,OAPAztC,EAAAkE,EAAA,SAAAqhC,EAAA7rB,GAEIzV,EAAAyV,GADF+zB,GAAA,mBAAAlI,EACEhD,EAAAgD,EAAAkI,GAEAlI,IAGJthC,GAqCAysC,KAhKF,SAAA+B,GACE,OAAAA,EAAA5T,QAAA,OAAA,IAAAA,QAAA,OAAA,KAgKA6T,SA7BF,SAAA7zC,GAIE,OAHA,QAAAA,EAAA8zC,WAAA,KACE9zC,EAAAA,EAAA8sC,MAAA,IAEF9sC,KA+BI+zC,iBAKC,SAAAjR,GAEPA,EAAAv6C,QAAA6F,KAAAgJ,MAAA,s7DAhoEC,iBAAA7O,GAAA,iBAAAu6C,EAAAA,EAAAv6C,QAAAk6C,IAAA,mBAAAuR,QAAAA,OAAAC,IAAAD,OAAA,GAAAvR,GAAA,iBAAAl6C,EAAAA,EAAA,MAAAk6C,IAAAD,EAAA,MAAAC,6LCAD,CACIx6B,QAAA,iDAEAisC,cAAA,6BACAlgB,mBAAA,iCACAC,YAAA,2BACAW,aAAA,wCACA19B,SAAA,8pBCRS3O,EAAA4rD,aAAb,aAKa5rD,EAAA6rD,cAAb,4OCLa7rD,EAAA8rD,sBAAb,aAIa9rD,EAAA+rD,wBAAb,0rBCFa/rD,EAAAgsD,yBAAb,6FCFAC,0KAAA,SAAAA,GACEA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cALF,CAMAA,IAAAA,EAAA,KASSjsD,EAAAisD,qBAAAA,EAPIjsD,EAAAksD,sBAAA/tD,EAAA,IACX8tD,EAAAE,aAAA,EACAhuD,EAAA8tD,EAAAG,UAAA,EACAjuD,EAAA8tD,EAAAI,kBAAA,EACAluD,EAAA8tD,EAAAK,aAAA,EACQnuD,4WCbG6B,EAAAusD,cAAb,aAUavsD,EAAAwsD,cAAb,aASaxsD,EAAAysD,YAAb,aAeazsD,EAAA0sD,eAAb,aAKa1sD,EAAA2sD,qBAAb,aAKa3sD,EAAA4sD,kBAAb,aAKa5sD,EAAA6sD,QAAb,aAOa7sD,EAAA8sD,WAAb,aAMa9sD,EAAA+sD,aAAb,aAMa/sD,EAAAgtD,iBAAb,aAMahtD,EAAAitD,gBAAb,aAMajtD,EAAAktD,WAAb","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"winners/last-week\");\r\n    }\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-06 10:21:53 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:05:15\r\n */\r\n\r\nimport { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.6\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(200 / this.scale,200 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                //show rewarded ad and update\r\n                this.showRewardedAd();\r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showRewardedAd(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING;\r\n        await StaticInstance.fadeManager.fadeOut();\r\n\r\n        window.addEventListener(\"offline\", (e) => {\r\n           this.handleGameOffline();\r\n        });\r\n          \r\n        window.addEventListener(\"online\", (e) => {\r\n           this.handleGameOnline();\r\n        });  \r\n    }\r\n\r\n\r\n    handleGameOnline(){\r\n        console.log(\"online\");\r\n\r\n    }\r\n\r\n    handleGameOffline(){\r\n        console.log(\"offline\");\r\n\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { patchBonusesNewAmount } from './Utils';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\t\t});\r\n\r\n        // AdsGramController.Instance.init().then(res =>{\r\n        //     console.log(\"adsgram init succes: \", res.success);\r\n        //     AdsGramController.Instance.initAdsContorller();\r\n        // })\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n        \r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        //console.error(\"TTTTTTTTTTTTTTTTTT:\");\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                //token = TelegramWebApp.Instance.getTelegramInitData();\r\n                token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    winners: cc.Node = null\r\n    winnersPanel: cc.Node = null\r\n    winnersContent: cc.Node = null\r\n    btnCloseWinners: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n\r\n\r\n    onLoad() {\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnWinners = cc.find('btn_winners', this.node)\r\n        this.winners = cc.find('winners', this.node)\r\n        this.winnersPanel = cc.find('panel', this.winners)\r\n        this.btnCloseWinners = cc.find('btn_close', this.winnersPanel)\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.winnersPanel.on('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.on('click', this.onCloseWinnersClick, this)\r\n\r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.winnersPanel.off('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.off('click', this.onCloseWinnersClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.winners.active = false;\r\n\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, player.username ? `@${player.username}` : `${player.first_name}`, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        // AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        // this.winners.active = true;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n\r\n    onCloseWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.winners.active = false;\r\n    }\r\n    \r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-05 XNUM * 2:03:26 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-0XNUM XNUM * 2 + 1:30:35\r\n */\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70//78\r\nconst XNUM = 9 //8\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.closeBuySkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    show_ad_rewarded_skill_2_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n                this.doGameOver();\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will divide the Stars pool into their wallets!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool für ihre Geldbörsen!\",\r\n        \"es\": \"Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas para sus carteras!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\"\r\n    },\r\n\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\"\r\n    },\r\n    \r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\"\r\n    },\r\n    \r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\"\r\n    },\r\n    \r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\"\r\n    },\r\n    \r\n    \r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Three players will randomly receive 5% of the stars from the total pool\",\r\n        \"ua\": \"Три гравці рандомно отримають по 5% зірок із загального пулу\",\r\n        \"de\": \"Drei Spieler erhalten zufällig jeweils 5 % der Sterne aus dem Gesamtpool\",\r\n        \"es\": \"Tres jugadores recibirán aleatoriamente el 5% de las estrellas del fondo total\",\r\n        \"ru\": \"Три игрока случайным образом получат по 5% звёзд из общего пула\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\"\r\n    },\r\n\r\n\r\n   \r\n    \r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.labelGamesWeeklyPanelTimeLeft.string = this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n           \r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            this.nameNode.getComponent(cc.Label).string = \"@\" + response.data.username;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkColor = cc.color(75, 92, 129);\r\n        const lightColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkColor : lightColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const darkBlueText = cc.color(34, 47, 63);\r\n        const darkGrayText = cc.color(124, 133, 135);\r\n        const grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? grayText : darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://7ac8-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://test.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}