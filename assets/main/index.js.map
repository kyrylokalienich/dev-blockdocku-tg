{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","packages/i18n/runtime-scripts/LanguageData.js","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","packages/i18n/runtime-scripts/LocalizedLabel.js","packages/i18n/runtime-scripts/LocalizedSprite.js","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/MoreLayer.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","packages/i18n/runtime-scripts/SpriteFrameSet.js","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","packages/i18n/runtime-scripts/polyglot.min.js","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","call","name","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","createAvatarImage","parent","imgElement","style","position","width","height","left","top","once","removeChild","loadTextureFromImage","Texture2D","initWithElement","handleLoadedTexture","setTexture","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","opacity","setActive","bool","x","y","zIndex","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","i","length","target_amount","setFill","fillRange","StaticInstance_1","Utils_1","Monetag_1","AuthController_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","MonetagController","showFullscreenAdRewarded","adWathcedSuccesfully","showFullscreenAdRewarded_2","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","set","reset","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","resetDefaults","decryptedData","PoolManager_1","EffectManager","effect","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","res","SERVER_HTTP_ERROR","scheduleOnce","timestamp_2","removeAllChildren","RUNING","addEventListener","handleGameOffline","handleGameOnline","HistoryItem","label_score","toFixed","HistoryItem_1","HistoryLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","HISTORY","LEADERBOARD","PROFILE","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","view","setResizeCallback","responsive","requestFullscreen","enableClosingConfirmation","configRes","_d","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","apiClientAuthorized","userController","delay","ms","setTimeout","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","viewRatio","Polyglot","polyInst","loadLanguageData","i18n","languages","initPolyglot","replace","phrases","allowMissing","curLang","module","inst","t","key","opt","updateSceneRenderers","rootNodes","director","getScene","children","allLocalizedLabels","labels","getComponentsInChildren","Array","allLocalizedSprites","_i2","sprites","_i3","updateSprite","LeaderboardItem","label_place","place","LeaderboardItem_1","LeaderboardLayer","youItem","btnWinners","btnFindMe","winners","winnersPanel","winnersContent","btnCloseWinners","onFindMeClick","onWinnersClick","onCloseWinnersClick","user_position","you","leaderboard","user_id","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","skills_3_select_owned","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","isTouchStarted","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","XNUM","blockComp","Math","floor","main","bonusesUsed","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","setHistoryData","isOnline","tryShowAdGameEnd","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","repeatForever","update","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","jsonLocalization","en","ua","de","es","ru","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_title","games_weekly_played","Class","extends","editor","executeInEditMode","menu","properties","dataID","_dataID","val","SpriteFrameSet","inspector","spriteFrameSet","getSpriteFrameByLang","lang","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","setGamesWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","played","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","count","getRemainingTimeToDateMinutes","getRemainingTimeToDateSeconds","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867075","showFullscreenAd_2","show_8867073","UIScrollControl_1","MoreLayer","scrollNode","scrollItem","toggleCustomRowAd","isScrollToTop","size","ScrollView","scrollToTop","game","getSprite","hasEventListener","onItemClick","scroll","turnToApp","MORE","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","windowHeight","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","info","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","getTelegramInitData","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ToastManager","_e","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","getContentSize","setContentSize","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","l","m","getter","o","enumerable","Symbol","toStringTag","value","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","currentLocale","locale","u","f","VERSION","smart_count","_","chinese","german","french","russian","czech","polish","icelandic","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"winners/last-week\");\r\n    }\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n\r\n\r\n    static createAvatarImage(url: string, parent: cc.Node) {\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n    \r\n        // Attach to document\r\n        document.body.appendChild(imgElement);\r\n    \r\n        // Remove when not needed\r\n        parent.once('destroy', () => {\r\n            document.body.removeChild(imgElement);\r\n        });\r\n    };\r\n\r\n\r\n    static loadTextureFromImage(url: string, sprite: cc.Sprite){\r\n\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        //imgElement.style.visibility = 'none';\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n\r\n        imgElement.onload = () =>{\r\n            const texture = new cc.Texture2D();\r\n            texture.initWithElement(imgElement);\r\n            texture.handleLoadedTexture();\r\n    \r\n            // Step 3: Create a SpriteFrame from the Texture2D\r\n            const spriteFrame = new cc.SpriteFrame();\r\n            spriteFrame.setTexture(texture);\r\n    \r\n            // Step 4: Assign the SpriteFrame to the provided Sprite component\r\n            sprite.spriteFrame = spriteFrame;\r\n        }\r\n\r\n        imgElement.onerror = (error) => {\r\n            console.error(\"Failed to load image:\", error);\r\n        };\r\n\r\n    };\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-06 10:21:53 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:05:15\r\n */\r\n\r\nimport { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.45){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n        \r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            completed +=  dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.shuffle_frame;\r\n            case \"SHUFFLE\":\r\n                return this.bomb_frame;\r\n            case \"REPLACE\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n\r\n        this.label_amount.string = `${dto.amount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                //show rewarded ad and update\r\n                this.showRewardedAd();\r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showRewardedAd(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    MORE = 'MoreLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            generateGameToken(userId, timestamp, config.GAME_SECRET_KEY).then((res)=>{\r\n                const gameToken = res;\r\n                UserController.Instance?.postGameStart(gameToken, timestamp).then((response) => {\r\n                    console.log(\"game started succesfully\")\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                });\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Failed to start game:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            });\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING;\r\n        await StaticInstance.fadeManager.fadeOut();\r\n\r\n        window.addEventListener(\"offline\", (e) => {\r\n           this.handleGameOffline();\r\n        });\r\n          \r\n        window.addEventListener(\"online\", (e) => {\r\n           this.handleGameOnline();\r\n        });  \r\n    }\r\n\r\n\r\n    handleGameOnline(){\r\n        console.log(\"online\");\r\n\r\n    }\r\n\r\n    handleGameOffline(){\r\n        console.log(\"offline\");\r\n\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA2Ui3cL&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1734611418&signature=P7lJWOsK2PksSyPhr815D8JbqnOupQHjgIqde0T73aY3Mdz3DBWgs6J7rCil-V1gqtWeWUBvsE8XN9TC569bBg&hash=b23f345fbae219c8443dd67ce29409d09aaae2e4dfe0d6c1a66679e8e407a81b\";\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\t\t});\r\n\r\n        // AdsGramController.Instance.init().then(res =>{\r\n        //     console.log(\"adsgram init succes: \", res.success);\r\n        //     AdsGramController.Instance.initAdsContorller();\r\n        // })\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n        \r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        UserController.Instance.getUser().then(response => {\r\n            // handle success\r\n            console.log(\"user succes\");\r\n            \r\n            DataManager.instance.userData = response.data;\r\n\r\n            if(response.data.first_login){\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n\r\n            // Операції з UI\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true)\r\n            \r\n            //console.log(response);\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true)\r\n\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message)\r\n                console.log(JSON.stringify(error))\r\n\r\n            });\r\n\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n        });\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                //token = TelegramWebApp.Instance.getTelegramInitData();\r\n                token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","const Polyglot = require('polyglot.min');\r\n\r\nlet polyInst = null;\r\nif (!window.i18n) {\r\n    window.i18n = {\r\n        languages: {},\r\n        curLang:''\r\n    };\r\n}\r\n\r\nif (CC_EDITOR) {\r\n    Editor.Profile.load('profile://project/i18n.json', (err, profile) => {\r\n        window.i18n.curLang = profile.data['default_language'];\r\n        if (polyInst) {\r\n            let data = loadLanguageData(window.i18n.curLang) || {};\r\n            initPolyglot(data);\r\n        }\r\n    });\r\n}\r\n\r\nfunction loadLanguageData (language) {\r\n    return window.i18n.languages[language];\r\n}\r\n\r\nfunction initPolyglot (data) {\r\n    if (data) {\r\n        if (polyInst) {\r\n            polyInst.replace(data);\r\n        } else {\r\n            polyInst = new Polyglot({ phrases: data, allowMissing: true });\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    /**\r\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\r\n     * such as when language is 'zh', it will load your 'zh.js' data source.\r\n     * @method init\r\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\r\n     */\r\n    init (language) {\r\n        if (language === window.i18n.curLang) {\r\n            return;\r\n        }\r\n        let data = loadLanguageData(language) || {};\r\n        window.i18n.curLang = language;\r\n        initPolyglot(data);\r\n        this.inst = polyInst;\r\n    },\r\n    /**\r\n     * this method takes a text key as input, and return the localized string\r\n     * Please read https://github.com/airbnb/polyglot.js for details\r\n     * @method t\r\n     * @return {String} localized string\r\n     * @example\r\n     *\r\n     * var myText = i18n.t('MY_TEXT_KEY');\r\n     *\r\n     * // if your data source is defined as\r\n     * // {\"hello_name\": \"Hello, %{name}\"}\r\n     * // you can use the following to interpolate the text\r\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\r\n     */\r\n    t (key, opt) {\r\n        if (polyInst) {\r\n            return polyInst.t(key, opt);\r\n        }\r\n    },\r\n\r\n    inst: polyInst,\r\n\r\n    updateSceneRenderers () { // very costly iterations\r\n        let rootNodes = cc.director.getScene().children;\r\n        // walk all nodes with localize label and update\r\n        let allLocalizedLabels = [];\r\n        for (let i = 0; i < rootNodes.length; ++i) {\r\n            let labels = rootNodes[i].getComponentsInChildren('LocalizedLabel');\r\n            Array.prototype.push.apply(allLocalizedLabels, labels);\r\n        }\r\n        for (let i = 0; i < allLocalizedLabels.length; ++i) {\r\n            let label = allLocalizedLabels[i];\r\n            if(!label.node.active)continue;\r\n            label.updateLabel();\r\n        }\r\n        // walk all nodes with localize sprite and update\r\n        let allLocalizedSprites = [];\r\n        for (let i = 0; i < rootNodes.length; ++i) {\r\n            let sprites = rootNodes[i].getComponentsInChildren('LocalizedSprite');\r\n            Array.prototype.push.apply(allLocalizedSprites, sprites);\r\n        }\r\n        for (let i = 0; i < allLocalizedSprites.length; ++i) {\r\n            let sprite = allLocalizedSprites[i];\r\n            if(!sprite.node.active)continue;\r\n            sprite.updateSprite(window.i18n.curLang);\r\n        }\r\n    }\r\n};","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    winners: cc.Node = null\r\n    winnersPanel: cc.Node = null\r\n    winnersContent: cc.Node = null\r\n    btnCloseWinners: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n\r\n\r\n    onLoad() {\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnWinners = cc.find('btn_winners', this.node)\r\n        this.winners = cc.find('winners', this.node)\r\n        this.winnersPanel = cc.find('panel', this.winners)\r\n        this.btnCloseWinners = cc.find('btn_close', this.winnersPanel)\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.winnersPanel.on('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.on('click', this.onCloseWinnersClick, this)\r\n\r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.winnersPanel.off('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.off('click', this.onCloseWinnersClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.winners.active = false;\r\n\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, player.username ? `@${player.username}` : `${player.first_name}`, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        // AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        // this.winners.active = true;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n\r\n    onCloseWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.winners.active = false;\r\n    }\r\n    \r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-05 XNUM * 2:03:26 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-0XNUM XNUM * 2 + 1:30:35\r\n */\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70//78\r\nconst XNUM = 9 //8\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    //skills_1_shuffle_owned: number = 0\r\n    //skills_2_bomb_owned: number = 0\r\n    skills_3_select_owned: number = 0\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        this.initMainBlocks()\r\n\r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.closeBuySkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    show_ad_rewarded_skill_2_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n                this.doGameOver();\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_select_owned.toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_select_owned > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_select_owned > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_select_owned > 0){\r\n            this.skills_3_select_owned--;\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players will divide the Stars pool into their wallets!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців розділять пул Stars на свій гаманець!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler den Stars-Pool für ihre Geldbörsen!\",\r\n        \"es\": \"Esta semana, ¡los 5 mejores jugadores se repartirán el fondo de Estrellas para sus carteras!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков разделят пул Stars на свои кошельки!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (50%)\",\r\n        \"ua\": \"1 місце (50%)\",\r\n        \"de\": \"1. Platz (50%)\",\r\n        \"es\": \"1er lugar (50%)\",\r\n        \"ru\": \"1 место (50%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (30%)\",\r\n        \"ua\": \"2 місце (30%)\",\r\n        \"de\": \"2. Platz (30%)\",\r\n        \"es\": \"2do lugar (30%)\",\r\n        \"ru\": \"2 место (30%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (3%)\",\r\n        \"ua\": \"4 місце (3%)\",\r\n        \"de\": \"4. Platz (3%)\",\r\n        \"es\": \"4to lugar (3%)\",\r\n        \"ru\": \"4 место (3%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (2%)\",\r\n        \"ua\": \"5 місце (2%)\",\r\n        \"de\": \"5. Platz (2%)\",\r\n        \"es\": \"5to lugar (2%)\",\r\n        \"ru\": \"5 место (2%)\"\r\n    },\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\"\r\n    },\r\n    \r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\"\r\n    },\r\n    \r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\"\r\n    },\r\n    \r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\"\r\n    },\r\n    \r\n    \r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Three players will randomly receive 5% of the stars from the total pool\",\r\n        \"ua\": \"Три гравці рандомно отримають по 5% зірок із загального пулу\",\r\n        \"de\": \"Drei Spieler erhalten zufällig jeweils 5 % der Sterne aus dem Gesamtpool\",\r\n        \"es\": \"Tres jugadores recibirán aleatoriamente el 5% de las estrellas del fondo total\",\r\n        \"ru\": \"Три игрока случайным образом получат по 5% звёзд из общего пула\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\"\r\n    },\r\n\r\n\r\n   \r\n    \r\n};\r\n","const i18n = require('LanguageData');\r\n\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function() {\r\n        var context = this, args = arguments;\r\n        var later = function() {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n}\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        executeInEditMode: true,\r\n        menu: 'i18n/LocalizedLabel'\r\n    },\r\n\r\n    properties: {\r\n        dataID: {\r\n            get () {\r\n                return this._dataID;\r\n            },\r\n            set (val) {\r\n                if (this._dataID !== val) {\r\n                    this._dataID = val;\r\n                    if (CC_EDITOR) {\r\n                        this._debouncedUpdateLabel();\r\n                    } else {\r\n                        this.updateLabel();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _dataID: ''\r\n    },\r\n    \r\n    onLoad () {\r\n        if(CC_EDITOR) {\r\n            this._debouncedUpdateLabel = debounce(this.updateLabel, 200);\r\n        }\r\n        if (!i18n.inst) {\r\n            i18n.init();\r\n        }\r\n        // cc.log('dataID: ' + this.dataID + ' value: ' + i18n.t(this.dataID));\r\n        this.fetchRender();\r\n    },\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    },\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = i18n.t(this.dataID);\r\n        if (localizedString) {\r\n            this.label.string = i18n.t(this.dataID);\r\n        }\r\n    }\r\n});","const SpriteFrameSet = require('SpriteFrameSet');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    editor: {\r\n        executeInEditMode: true,\r\n        inspector: 'packages://i18n/inspector/localized-sprite.js',\r\n        menu: 'i18n/LocalizedSprite'\r\n    },\r\n\r\n    properties: {\r\n        spriteFrameSet: {\r\n            default: [],\r\n            type: SpriteFrameSet\r\n        }\r\n    },\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    },\r\n\r\n    fetchRender () {\r\n        let sprite = this.getComponent(cc.Sprite);\r\n        if (sprite) {\r\n            this.sprite = sprite;\r\n            this.updateSprite(window.i18n.curLang);\r\n            return;\r\n        }\r\n    },\r\n\r\n    getSpriteFrameByLang (lang) {\r\n        for (let i = 0; i < this.spriteFrameSet.length; ++i) {\r\n            if (this.spriteFrameSet[i].language === lang) {\r\n                return this.spriteFrameSet[i].spriteFrame;\r\n            }\r\n        }\r\n    },\r\n\r\n    updateSprite (language) {\r\n        if (!this.sprite) {\r\n            cc.error('Failed to update localized sprite, sprite component is invalid!');\r\n            return;\r\n        }\r\n\r\n        let spriteFrame = this.getSpriteFrameByLang(language);\r\n\r\n        if (!spriteFrame && this.spriteFrameSet[0]) {\r\n            spriteFrame = this.spriteFrameSet[0].spriteFrame;\r\n        }\r\n\r\n        this.sprite.spriteFrame = spriteFrame;\r\n    }\r\n});","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.labelGamesWeeklyPanelTimeLeft.string = this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n           \r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport UIScrollControl from \"../plugins/UIScrollControl\";\r\nimport ResourceManager from \"../manager/ResourceManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MoreLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    scrollNode: cc.Node = null\r\n    scrollItem: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.scrollNode = cc.find('scroll', this.panel)\r\n        this.scrollItem = PoolManager.instance.getNode('MoreItem')\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        this.rendor()\r\n        SdkManager.instance.toggleCustomRowAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleCustomRowAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        const games = DataManager.instance.games\r\n        let isScrollToTop = false\r\n        this.scrollNode.getComponent(UIScrollControl).init(this.scrollItem, games.length, cc.size(500, 110), 0, (node: cc.Node, index: number) => {\r\n            if (!isScrollToTop) {\r\n                isScrollToTop = true\r\n                this.scrollNode.getComponent(cc.ScrollView).scrollToTop()\r\n            }\r\n            const game = games[index]\r\n            node.getChildByName('icon').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(`${game.icon}`)\r\n            node.getChildByName('title').getComponent(cc.Label).string = `${game.title}`\r\n            if (!node.hasEventListener('click')) {\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            } else {\r\n                node.off('click')\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            }\r\n        }, (scroll: cc.ScrollView) => {\r\n            // scroll.scrollToOffset(cc.v2(0, maxLevel * 110 - (scroll.node.height / 2)), 0.05)\r\n            scroll.scrollToTop()\r\n        })\r\n    }\r\n\r\n    onItemClick(item: any) {\r\n        let url: string = ''\r\n        if (typeof window['wx'] == 'undefined') {\r\n            url = item.url\r\n        } else {\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n            url = item.appid\r\n        }\r\n        if (url) SdkManager.instance.turnToApp(url)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MORE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n        //AvatarLoader.loadAvatar(\"user.photo_url\", this.avatarNode);\r\n        //AvatarLoader.loadTextureFromImage(\"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\", this.avatarNode.getComponent(cc.Sprite));\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            this.nameNode.getComponent(cc.Label).string = \"@\" + response.data.username;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","const SpriteFrameSet = cc.Class({\r\n    name: 'SpriteFrameSet',\r\n    properties: {\r\n        language: '',\r\n        spriteFrame: cc.SpriteFrame\r\n    }\r\n});\r\n\r\nmodule.exports = SpriteFrameSet;","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onEnable(){\r\n        this.setDailyTasks(DataManager.instance.userTasks);\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n\r\n    // setSettingStyle(index: number = 0){\r\n    //     const layer: SettingLayer = this.uiMap.get(ENUM_UI_TYPE.SETTING) as SettingLayer\r\n    //     layer?.setStyle(index)\r\n    // }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    //\"API_URL\" : \"https://0580-176-8-143-190.ngrok-free.app/api/\",\r\n    \"API_URL\" : \"https://block-stars.tgplay.games:8443/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","//     (c) 2012 Airbnb, Inc.\r\n//\r\n//     polyglot.js may be freely distributed under the terms of the BSD\r\n//     license. For all licensing information, details, and documention:\r\n//     http://airbnb.github.com/polyglot.js\r\n//\r\n//\r\n// Polyglot.js is an I18n helper library written in JavaScript, made to\r\n// work both in the browser and in Node. It provides a simple solution for\r\n// interpolation and pluralization, based off of Airbnb's\r\n// experience adding I18n functionality to its Backbone.js and Node apps.\r\n//\r\n// Polylglot is agnostic to your translation backend. It doesn't perform any\r\n// translation; it simply gives you a way to manage translated phrases from\r\n// your client- or server-side JavaScript application.\r\n//\r\n(function(e,t){typeof define==\"function\"&&define.amd?define([],function(){return t(e)}):typeof exports==\"object\"?module.exports=t(e):e.Polyglot=t(e)})(this,function(e){\"use strict\";function t(e){e=e||{},this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||\"en\",this.allowMissing=!!e.allowMissing,this.warn=e.warn||c}function s(e){var t,n,r,i={};for(t in e)if(e.hasOwnProperty(t)){n=e[t];for(r in n)i[n[r]]=t}return i}function o(e){var t=/^\\s+|\\s+$/g;return e.replace(t,\"\")}function u(e,t,r){var i,s,u;return r!=null&&e?(s=e.split(n),u=s[f(t,r)]||s[0],i=o(u)):i=e,i}function a(e){var t=s(i);return t[e]||t.en}function f(e,t){return r[a(e)](t)}function l(e,t){for(var n in t)n!==\"_\"&&t.hasOwnProperty(n)&&(e=e.replace(new RegExp(\"%\\\\{\"+n+\"\\\\}\",\"g\"),t[n]));return e}function c(t){e.console&&e.console.warn&&e.console.warn(\"WARNING: \"+t)}function h(e){var t={};for(var n in e)t[n]=e[n];return t}t.VERSION=\"0.4.3\",t.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},t.prototype.extend=function(e,t){var n;for(var r in e)e.hasOwnProperty(r)&&(n=e[r],t&&(r=t+\".\"+r),typeof n==\"object\"?this.extend(n,r):this.phrases[r]=n)},t.prototype.clear=function(){this.phrases={}},t.prototype.replace=function(e){this.clear(),this.extend(e)},t.prototype.t=function(e,t){var n,r;return t=t==null?{}:t,typeof t==\"number\"&&(t={smart_count:t}),typeof this.phrases[e]==\"string\"?n=this.phrases[e]:typeof t._==\"string\"?n=t._:this.allowMissing?n=e:(this.warn('Missing translation for key: \"'+e+'\"'),r=e),typeof n==\"string\"&&(t=h(t),r=u(n,this.currentLocale,t.smart_count),r=l(r,t)),r},t.prototype.has=function(e){return e in this.phrases};var n=\"||||\",r={chinese:function(e){return 0},german:function(e){return e!==1?1:0},french:function(e){return e>1?1:0},russian:function(e){return e%10===1&&e%100!==11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},czech:function(e){return e===1?0:e>=2&&e<=4?1:2},polish:function(e){return e===1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!==1||e%100===11?1:0}},i={chinese:[\"fa\",\"id\",\"ja\",\"ko\",\"lo\",\"ms\",\"th\",\"tr\",\"zh\"],german:[\"da\",\"de\",\"en\",\"es\",\"fi\",\"el\",\"he\",\"hu\",\"it\",\"nl\",\"no\",\"pt\",\"sv\"],french:[\"fr\",\"tl\",\"pt-br\"],russian:[\"hr\",\"ru\"],czech:[\"cs\"],polish:[\"pl\"],icelandic:[\"is\"]};return t});","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n}"],"file":"index.js"}