{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManagerForBank.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/ui/HourlyChallangeItem.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/layer/OutputLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/ads/richads/Richads.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/ads/tads/Tads.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AdsGram_1","Monetag_1","Onclicka_1","Richads_1","AdsManagerForBank","currentProviderIndex","viewData","day","dayCount","hour","hourCount","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial_Timeout","showRewarded_Interstitial","requiresPreload","richads","onclicka","adsGram","tads","AdsManagerForBank_1","MonetagController","Instance","Onclicka","Richads","res","warn","error_1","loadViewData","showAd_Rewarded_Intestitial","canShowAd","maxAttempts","length","attempts","provider","tryShowAdFromProvider","patchAd","updateViewData","call","error_2","now","Date","today","toISOString","split","currentHour","getHours","saveViewData","json","localStorage","getItem","JSON","parse","e","setItem","stringify","AuthController_1","AdsManager","inApp_providers","preloadInApp_Interstitial_Timeout","showInApp_Interstitial","AdsManager_1","_i","showAd_InApp_Intestitial","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","postData","payload","method","body","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","apiClient","getTime","getUser","getChannelMembership","TelegramWebApp","getTelegramUser","id","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","getLastHourLeader","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","enc","Utf8","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","lastHourLeader","nextMonday","serverTimestamp","serverTimeOffsetMiliseconds","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","encryptedData","encrypt","hmac","HmacSHA256","restore","storedData","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","getServerTimestampNow","generateGameToken","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","btnOutput","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","onOutputClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","LEADERBOARD","OUTPUT","HistoryItem","label_score","HistoryLayer","HISTORY","HourlyChallangeItem","label_time","setTestData","setFromCache","fetchFromServer","update","nextHour","getNextHourDate","getRemainingTimeToHourSeconds","setMinutes","setHours","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","setDesignResolution","responsive","view","setResizeCallback","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","timeResponce","serverDate","localDate","timeDiffMiliseconds","getServerTimeNow","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","main_bottom_tab_5","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","reward_each_hour","reward_each_hour_challange","reward_each_hour_challange_top","reward_each_hour_challange_points","tasks_done","tasks_streak","games_weekly_challange_title","games_weekly_challange_text","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_guidebook","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","output_main_title","output_out_title","output_main_btn","output_main_label_1","out_bullet_1","out_bullet_2","out_bullet_3","output_out_label_1","output_out_label_2","output_out_btn","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","preloadRewarded_Interstitial","show_8867073","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","preloadInApp_Interstitial","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","OutputLayer","btn_next","btn_out","btn_close_out","panel_main","panel_out","edit_box","EditBox","onCloseOutClick","onNextClick","onOutClick","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnGuidebookRules","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","onGuidebookClick","SETTING","openLinkPrivacy","openLinkPartnership","openLinkGuidebook","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","TelegramAdsController","triggerNativeNotification","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","Tads","adController","widgetId","Tads_1","tryInit","debug","onShowReward","adId","onClickReward","onAdsNotFound","loadAd","showAd","DailyTaskItem_1","HourlyChallangeItem_1","TasksLayer","info_popup","week_tasks_bar","week_tasks_bar_base","week_tasks_bar_streak","week_tasks_bar_fill","week_tasks_bar_amount","week_tasks_bar_streak_amount","info_popup_tasks_fill","info_popup_tasks_amount","info_popup_streak","info_popup_streak_amount","info_popup_timeLeft","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","openInfoPopupClick","closeInfoPopupClick","setWeeklyAmount","setStreakAmount","completed_tasks","weekly_streak","setDailyTasks","days","fetchHourlyChallange","hourly_challenge_item","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto","LashHourLeaderDto","GetServerTimeDto","ServerTimestampDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           //debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\nimport { Tads } from \"./tads/Tads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst STORAGE_KEY = \"ads_view_data\";\r\n\r\n@ccclass('AdsManagerForBank')\r\nexport class AdsManagerForBank {\r\n    private static _instance: AdsManagerForBank;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManagerForBank {\r\n        if (!AdsManagerForBank._instance) {\r\n            AdsManagerForBank._instance = new AdsManagerForBank();\r\n        }\r\n        return AdsManagerForBank._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n    private tads: Tads;\r\n\r\n    private currentProviderIndex: number = 0;\r\n\r\n    private viewData: ViewData = {\r\n        day: '',\r\n        dayCount: 0,\r\n        hour: 0,\r\n        hourCount: 0\r\n    };\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'tads',\r\n            show: () => this.tads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n\r\n        this.loadViewData();\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        if (!this.canShowAd()) {\r\n            console.warn(\"Ad limit reached (per hour or per day)\");\r\n            return false;\r\n        }\r\n\r\n        const maxAttempts = this.rewarded_providers.length;\r\n        let attempts = 0;\r\n        let success = false;\r\n\r\n        while (attempts < maxAttempts) {\r\n            const provider = this.rewarded_providers[this.currentProviderIndex];\r\n            this.currentProviderIndex = (this.currentProviderIndex + 1) % this.rewarded_providers.length;\r\n\r\n            success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                this.updateViewData();\r\n                break;\r\n            }\r\n            attempts++;\r\n        }\r\n\r\n        if (!success) {\r\n            console.warn(\"No ad was successfully shown from any provider.\");\r\n        }\r\n        return success;\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad! Get your reward...');\r\n\r\n    }\r\n\r\n\r\n    private canShowAd(): boolean {\r\n        const now = new Date();\r\n\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        return this.viewData.dayCount < 100 && this.viewData.hourCount < 10;\r\n    }\r\n\r\n    private updateViewData() {\r\n        const now = new Date();\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        this.viewData.dayCount += 1;\r\n        this.viewData.hourCount += 1;\r\n\r\n        this.saveViewData();\r\n    }\r\n\r\n    private loadViewData() {\r\n        const json = localStorage.getItem(STORAGE_KEY);\r\n        if (json) {\r\n            try {\r\n                this.viewData = JSON.parse(json);\r\n            } catch (e) {\r\n                console.warn(\"Failed to parse view data:\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private saveViewData() {\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(this.viewData));\r\n    }\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\ninterface ViewData {\r\n    day: string;\r\n    dayCount: number;\r\n    hour: number;\r\n    hourCount: number;\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial_Timeout(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\n\r\n","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetServerTimeDto, GetUserAuthDto, GetUserDailyTasksDto, LashHourLeaderDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //time\r\n    public async getTime(): Promise<GetServerTimeDto> {\r\n        return this.apiClient.get(\"time\");\r\n    }\r\n\r\n    //user\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //tasks - hour leader\r\n    public async getLastHourLeader(): Promise<LashHourLeaderDto> {\r\n        return this.apiClient.get(\"games/leader/last-hour\");\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn?.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn?.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { LashHourLeaderDto, UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    lastHourLeader : LashHourLeaderDto = null\r\n    nextMonday: Date = null\r\n\r\n    serverTimestamp: number = null;\r\n    serverTimeOffsetMiliseconds: number = 0;\r\n\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    OUTPUT = 'OutputLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, getServerTimestampNow, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = getServerTimestampNow();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = getServerTimestampNow();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","import { getRemainingTimeToDateSeconds, getRemainingTimeToHourSeconds } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { LashHourLeaderDto } from \"../dtos/user.dto\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HourlyChallangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_time: cc.Label | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    setTestData(){\r\n        this.reward = \"COIN\";\r\n        this.amount = 50;\r\n        this.label_name.string = \"@null\";\r\n        this.label_score.string = \"0\";\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    setFromCache(){\r\n        if(DataManager.instance.lastHourLeader){\r\n            this.set(DataManager.instance.lastHourLeader);\r\n        }\r\n        else{\r\n            this.setTestData();\r\n        }\r\n    }\r\n\r\n    fetchFromServer(){\r\n        this.setFromCache();\r\n\r\n        UserController.Instance?.getLastHourLeader().then((response) => {\r\n            DataManager.instance.lastHourLeader = response;\r\n            this.set(response);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    set(dto: LashHourLeaderDto){\r\n        const name = (dto.username && dto.username != \"\" && dto.username != null) ? `@${dto.username}` : `${dto.first_name}`;\r\n\r\n        this.reward = \"COIN\";\r\n        this.amount = 50;\r\n        this.label_name.string = name;\r\n        this.label_score.string = `${dto.points}`;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        const nextHour = this.getNextHourDate();\r\n        this.label_time.string = getRemainingTimeToHourSeconds(nextHour);\r\n    }\r\n\r\n\r\n    getNextHourDate(): Date {\r\n        const now = new Date();\r\n        now.setMinutes(0, 0, 0); // Reset minutes, seconds, milliseconds\r\n        now.setHours(now.getHours() + 1); // Move to next hour\r\n        return now;\r\n    }\r\n    \r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { getServerTimeNow, setDesignResolution } from './Utils';\r\nimport { AdsManager } from './ads/AdsManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n\r\n            //time \r\n\r\n            const timeResponce = await UserController.Instance.getTime();\r\n            console.log(\"time success\", timeResponce.data.timestamp);\r\n\r\n            const serverDate = new Date(timeResponce.data.timestamp); \r\n            const localDate = new Date();\r\n            const timeDiffMiliseconds = serverDate.getTime() - localDate.getTime(); // різниця в мілісекундах\r\n\r\n            console.log(\"timeDiffMiliseconds\", timeDiffMiliseconds, getServerTimeNow());\r\n\r\n            DataManager.instance.serverTimestamp = timeResponce.data.timestamp; \r\n            DataManager.instance.serverTimeOffsetMiliseconds = timeDiffMiliseconds;\r\n\r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n       this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n    \r\n    info: cc.Node = null\r\n    \r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n    \r\n    // general\r\n    \r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n    \r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n    \r\n    // main\r\n    \r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n    \r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"main_bottom_tab_5\": { \r\n        \"en\": \"Output\",\r\n        \"ua\": \"Вивід\",\r\n        \"de\": \"Ausgabe\",\r\n        \"es\": \"Retiro\",\r\n        \"ru\": \"Вывод\",\r\n        \"cs\": \"Výběr\",\r\n        \"sk\": \"Výber\",\r\n        \"pl\": \"Wypłata\"\r\n    },\r\n    \r\n    // settings\r\n    \r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n    \r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n    \r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n    \r\n    // settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n    \r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n    \r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n    \r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n    \r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n    \r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n    \r\n    // leaderboard\r\n    \r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n    \r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n    \r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n    \r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"reward_each_hour\": {\r\n        \"en\": \"Reward each hour\",\r\n        \"ua\": \"Приз щогодини\",\r\n        \"de\": \"Belohnung pro Stunde\",\r\n        \"es\": \"Recompensa por hora\",\r\n        \"ru\": \"Награда каждый час\",\r\n        \"cs\": \"Odměna každou hodinu\",\r\n        \"sk\": \"Odmena každú hodinu\",\r\n        \"pl\": \"Nagroda co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange\": {\r\n        \"en\": \"Hourly Challenge\",\r\n        \"ua\": \"Годинний челендж\",\r\n        \"de\": \"Stündliche Herausforderung\",\r\n        \"es\": \"Desafío por hora\",\r\n        \"ru\": \"Ежечасный челлендж\",\r\n        \"cs\": \"Hodinová výzva\",\r\n        \"sk\": \"Hodinová výzva\",\r\n        \"pl\": \"Wyzwanie co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_top\": {\r\n        \"en\": \"Top Player:\",\r\n        \"ua\": \"Топ гравець:\",\r\n        \"de\": \"Top-Spieler:\",\r\n        \"es\": \"Jugador top:\",\r\n        \"ru\": \"Топ игрок:\",\r\n        \"cs\": \"Top hráč:\",\r\n        \"sk\": \"Top hráč:\",\r\n        \"pl\": \"Top gracz:\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_points\": {\r\n        \"en\": \"Points:\",\r\n        \"ua\": \"Очки:\",\r\n        \"de\": \"Punkte:\",\r\n        \"es\": \"Puntos:\",\r\n        \"ru\": \"Очки:\",\r\n        \"cs\": \"Body:\",\r\n        \"sk\": \"Body:\",\r\n        \"pl\": \"Punkty:\"\r\n    },\r\n\r\n    \"tasks_done\": {\r\n        \"en\": \"Tasks Done\",\r\n        \"ua\": \"Завершено завданнь\",\r\n        \"de\": \"Aufgaben erledigt\",\r\n        \"es\": \"Tareas completadas\",\r\n        \"ru\": \"Выполнено заданий\",\r\n        \"cs\": \"Splněné úkoly\",\r\n        \"sk\": \"Splnené úlohy\",\r\n        \"pl\": \"Wykonane zadania\"\r\n    },\r\n\r\n    \"tasks_streak\" : {\r\n        \"en\": \"Your streak:\",\r\n        \"ua\": \"Твоя безперервна серія:\",\r\n        \"de\": \"Deine Serie:\",\r\n        \"es\": \"Tu racha:\",\r\n        \"ru\": \"Твоя серия:\",\r\n        \"cs\": \"Tvoje série:\",\r\n        \"sk\": \"Tvoja séria:\",\r\n        \"pl\": \"Twoja passa:\"\r\n    },\r\n\r\n    \"games_weekly_challange_title\" : { \r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Date prisa!\",\r\n        \"ru\": \"Поспеши!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_challange_text\" : {\r\n        \"en\": \"The more tasks you complete during the week, the higher your chance to win!\",\r\n        \"ua\": \"Чим більше завдань ви виконаєте за тиждень, тим вищий ваш шанс виграти!\",\r\n        \"de\": \"Je mehr Aufgaben du in der Woche erledigst, desto höher ist deine Gewinnchance!\",\r\n        \"es\": \"¡Cuantas más tareas completes durante la semana, mayor será tu oportunidad de ganar!\",\r\n        \"ru\": \"Чем больше заданий ты выполнишь за неделю, тем выше твой шанс на победу!\",\r\n        \"cs\": \"Čím více úkolů během týdne splníš, tím větší máš šanci na výhru!\",\r\n        \"sk\": \"Čím viac úloh za týždeň splníš, tým vyššia je tvoja šanca na výhru!\",\r\n        \"pl\": \"Im więcej zadań wykonasz w tygodniu, tym większa szansa na wygraną!\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"profile_guidebook\": {\r\n        \"en\": \"Guidebook & rules\",\r\n        \"ua\": \"Посібник та правила\",\r\n        \"de\": \"Leitfaden & Regeln\",\r\n        \"es\": \"Guía y reglas\",\r\n        \"ru\": \"Руководство и правила\",\r\n        \"cs\": \"Příručka a pravidla\",\r\n        \"sk\": \"Príručka a pravidlá\",\r\n        \"pl\": \"Poradnik i zasady\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n    \r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n    \r\n    //output\r\n\r\n    \"output_main_title\" :{\r\n        \"en\": \"Block Stars Withdrawal\",\r\n        \"ua\": \"Виведення Block Stars\",\r\n        \"de\": \"Block Stars Auszahlung\",\r\n        \"es\": \"Retiro de Block Stars\",\r\n        \"ru\": \"Вывод Block Stars\",\r\n        \"cs\": \"Výběr Block Stars\",\r\n        \"sk\": \"Výber Block Stars\",\r\n        \"pl\": \"Wypłata Block Stars\"\r\n    },\r\n\r\n    \"output_out_title\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_btn\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_label_1\": {\r\n        \"en\": \"Withdraw in-game coins from Block Stars to your Stars Bank account and use them.\",\r\n        \"ua\": \"Виводьте ігрові монети із Block Stars на акаунт Stars Bank та використовуйте їх. \",\r\n        \"de\": \"Ziehe Spielmünzen von Block Stars auf dein Stars Bank-Konto ab und verwende sie.\",\r\n        \"es\": \"Retira monedas del juego de Block Stars a tu cuenta de Stars Bank y úsalas.\",\r\n        \"ru\": \"Выводите игровые монеты из Block Stars на аккаунт Stars Bank и используйте их.\",\r\n        \"cs\": \"Vyber herní mince z Block Stars na účet Stars Bank a používej je.\",\r\n        \"sk\": \"Vyber herné mince z Block Stars na účet Stars Bank a použi ich.\",\r\n        \"pl\": \"Wypłać monety z gry Block Stars na konto Stars Bank i używaj ich.\"\r\n    },\r\n\r\n    \"out_bullet_1\" : {\r\n        \"en\": \"Withdraw available from 300 coins\",\r\n        \"ua\": \"Вивід доступний від 300 монет\",\r\n        \"de\": \"Výběr dostupný od 300 mincí\",\r\n        \"es\": \"Retiro disponible a partir de 300 monedas\",\r\n        \"ru\": \"Вывод доступен от 300 монет\",\r\n        \"cs\": \"Výběr dostupný od 300 mincí\",\r\n        \"sk\": \"Výber dostupný od 300 mincí\",\r\n        \"pl\": \"Wypłata dostępna od 300 monet\"\r\n    },\r\n\r\n    \"out_bullet_2\" : {\r\n        \"en\": \"Exchange rate: 1 Block Star = 1 Telegram Star\",\r\n        \"ua\": \"Курс обміну відбувається наступним чином: 1 Block Star = 1 Telegram Star.\",\r\n        \"de\": \"Wechselkurs: 1 Block Star = 1 Telegram Star\",\r\n        \"es\": \"Tasa de cambio: 1 Block Star = 1 Telegram Star\",\r\n        \"ru\": \"Курс обмена: 1 Block Star = 1 Telegram Star\",\r\n        \"cs\": \"Směnný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"sk\": \"Výmenný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"pl\": \"Kurs wymiany: 1 Block Star = 1 Telegram Star\"\r\n    },\r\n\r\n    \"out_bullet_3\" : {\r\n        \"en\": \"Make sure you have a Stars Bank account. If not, open Stars Bank in Telegram and start.\",\r\n        \"ua\": \"Переконайтеся, що у вас є акаунт Stars Bank. Якщо його ще немає, просто відкрийте Stars Bank у Telegram і запустіть.\",\r\n        \"de\": \"Stelle sicher, dass du ein Stars Bank-Konto hast. Wenn nicht, öffne Stars Bank in Telegram und starte.\",\r\n        \"es\": \"Asegúrate de tener una cuenta en Stars Bank. Si no la tienes, abre Stars Bank en Telegram y empieza.\",\r\n        \"ru\": \"Убедитесь, что у вас есть аккаунт Stars Bank. Если нет — откройте Stars Bank в Telegram и запустите.\",\r\n        \"cs\": \"Ujisti se, že máš účet ve Stars Bank. Pokud ho nemáš, otevři Stars Bank v Telegramu a spusť.\",\r\n        \"sk\": \"Uisti sa, že máš účet v Stars Bank. Ak nie, otvor Stars Bank v Telegrame a spusti.\",\r\n        \"pl\": \"Upewnij się, że masz konto w Stars Bank. Jeśli nie, otwórz Stars Bank w Telegramie i rozpocznij.\"\r\n    },\r\n\r\n    \"output_out_label_1\" :{\r\n        \"en\": \"Enter the amount you want to withdraw to your Stars Bank account.\",\r\n        \"ua\": \"Введіть бажану суму для виведення на акаунт Stars Bank.\",\r\n        \"de\": \"Gib den gewünschten Betrag ein, den du auf dein Stars Bank-Konto abheben möchtest.\",\r\n        \"es\": \"Introduce la cantidad que deseas retirar a tu cuenta de Stars Bank.\",\r\n        \"ru\": \"Введите желаемую сумму для вывода на аккаунт Stars Bank.\",\r\n        \"cs\": \"Zadej částku, kterou chceš vybrat na účet Stars Bank.\",\r\n        \"sk\": \"Zadaj sumu, ktorú chceš vybrať na účet Stars Bank.\",\r\n        \"pl\": \"Wpisz kwotę, którą chcesz wypłacić na konto Stars Bank.\"\r\n    },\r\n\r\n    \"output_out_label_2\" :{\r\n        \"en\": \"Minimum withdrawal amount is 500 coins\",\r\n        \"ua\": \"мінімальна сума виводу 500 монет\",\r\n        \"de\": \"Mindestbetrag für Auszahlung: 500 Münzen\",\r\n        \"es\": \"Cantidad mínima para retirar: 500 monedas\",\r\n        \"ru\": \"Минимальная сумма вывода: 500 монет\",\r\n        \"cs\": \"Minimální částka pro výběr: 500 mincí\",\r\n        \"sk\": \"Minimálna suma na výber: 500 mincí\",\r\n        \"pl\": \"Minimalna kwota wypłaty: 500 monet\"\r\n    },\r\n\r\n    \"output_out_btn\" :{\r\n        \"en\": \"Withdraw\",\r\n        \"ua\": \"Вивести\",\r\n        \"de\": \"Auszahlen\",\r\n        \"es\": \"Retirar\",\r\n        \"ru\": \"Вывести\",\r\n        \"cs\": \"Vybrat\",\r\n        \"sk\": \"Vybrať\",\r\n        \"pl\": \"Wypłać\"\r\n    },\r\n\r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, getServerTimeNow, setDesignResolution, starsToDollars} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = getServerTimeNow(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public preloadInApp_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867075({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OutputLayer extends BaseLayer {\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    labelCoinsAmount: cc.Label = null;\r\n    \r\n    btn_next: cc.Node = null\r\n    btn_out: cc.Node = null\r\n    btn_close_out: cc.Node = null\r\n    \r\n    panel_main: cc.Node = null\r\n    panel_out: cc.Node = null\r\n\r\n    edit_box: cc.EditBox = null;\r\n   \r\n\r\n    onLoad() {\r\n        console.log('onLoad')\r\n\r\n        this.panel_main = cc.find('main', this.node)\r\n        this.panel_out = cc.find('out', this.node)\r\n\r\n        console.log('onLoad1')\r\n\r\n        this.labelCoinsAmount = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        console.log('onLoad2')\r\n\r\n\r\n        this.edit_box = cc.find('edit_box', this.panel_out).getComponent(cc.EditBox)\r\n\r\n        console.log('onLoad3')\r\n\r\n\r\n        this.btn_close_out = cc.find('btn_close', this.node)\r\n        this.btn_next = cc.find('btn_start', this.panel_main)\r\n        this.btn_out = cc.find('btn_start', this.panel_out)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        console.log('onLoad4')\r\n\r\n\r\n        this.btn_close_out.on('click', this.onCloseOutClick, this)\r\n        this.btn_next.on('click', this.onNextClick, this)\r\n        this.panel_out.on('click', this.onOutClick, this)\r\n\r\n        console.log('onLoad5')\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        console.log('onLoad6')\r\n\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n\r\n        if(DataManager.instance.userData){\r\n            this.edit_box.string = this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        if(this.panel_main){\r\n            this.panel_main.active = true;\r\n        }\r\n\r\n        if(this.panel_out){\r\n            this.panel_out.active = false;\r\n            this.btn_close_out.active = false;\r\n        }\r\n        \r\n    }\r\n\r\n    onDisable() { }\r\n\r\n   \r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onCloseOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n        this.btn_close_out.active = false;\r\n    }\r\n\r\n    onNextClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = false;\r\n        this.panel_out.active = true;\r\n        this.btn_close_out.active = true;\r\n\r\n    }\r\n\r\n    onOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo\r\n        //backend request\r\n        //open wallet app\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n    btnGuidebookRules: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnGuidebookRules = cc.find('main/btns_group_2/btn_guidebook', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.on('click', this.onGuidebookClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.off('click', this.onGuidebookClick, this)\r\n\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onGuidebookClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkGuidebook();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Richads')\r\nexport class Richads {\r\n    private static _instance: Richads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Richads {\r\n        if (!Richads._instance) {\r\n            Richads._instance = new Richads();\r\n        }\r\n        return Richads._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).TelegramAdsController.triggerNativeNotification(true);  \r\n    }\r\n}","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n        \r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Tads')\r\nexport class Tads {\r\n    private static _instance: Tads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    private adController: any = null; // посилання на tads контролер\r\n    private widgetId: string = '403'; // <-- ВСТАВ СВІЙ ID сюди\r\n\r\n    public static get Instance(): Tads {\r\n        if (!Tads._instance) {\r\n            Tads._instance = new Tads();\r\n        }\r\n        return Tads._instance;\r\n    }\r\n\r\n    public init(){\r\n        return new Promise<void>((resolve, reject) => {\r\n            const tryInit = () => {\r\n                if (typeof (window as any).tads !== 'undefined' && (window as any).tads.init) {\r\n                    this.adController = (window as any).tads.init({\r\n                        widgetId: this.widgetId,\r\n                        debug: false,\r\n                        onShowReward: (adId: any) => {\r\n                            console.log('Show ad:', adId);\r\n                        },\r\n                        onClickReward: (adId: any) => {\r\n                            console.log('Click on ad:', adId);\r\n                        },\r\n                        onAdsNotFound: () => {\r\n                            console.warn('No ads found to show');\r\n                        }\r\n                    });\r\n                    console.log(\"Tads controller initialized.\");\r\n                    resolve();\r\n                } else {\r\n                    console.warn('Tads not loaded yet.');\r\n                    setTimeout(tryInit, 100);\r\n                }\r\n            };\r\n\r\n            tryInit();\r\n        });\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<void>{\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.adController) {\r\n                console.warn('Tads controller not initialized.');\r\n                reject('Tads controller not initialized.');\r\n                return;\r\n            }\r\n\r\n            this.adController.loadAd()\r\n                .then(() => {\r\n                    return this.adController.showAd();\r\n                })\r\n                .then(() => {\r\n                    console.log('Ad shown successfully');\r\n                    resolve();\r\n                })\r\n                .catch((err: any) => {\r\n                    console.error('Failed to show ad', err);\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HourlyChallangeItem from \"../ui/HourlyChallangeItem\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    \r\n    info_popup: cc.Node = null\r\n\r\n    week_tasks_bar: cc.Node = null\r\n    week_tasks_bar_base: cc.Node = null\r\n    week_tasks_bar_streak: cc.Node = null\r\n\r\n    week_tasks_bar_fill: cc.Sprite = null;\r\n    week_tasks_bar_amount: cc.Label = null;\r\n    week_tasks_bar_streak_amount: cc.Label = null;\r\n    \r\n    info_popup_tasks_fill: cc.Sprite = null;\r\n    info_popup_tasks_amount: cc.Label = null;\r\n    info_popup_streak: cc.Node = null;\r\n    info_popup_streak_amount: cc.Label = null;\r\n    info_popup_timeLeft: cc.Label = null;\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        //bottom\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //screens\r\n        this.info_popup = cc.find('info_popup', this.node)\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        //content -- tasks\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        //week task bar\r\n        this.week_tasks_bar = cc.find('main/tasks_weekly', this.dailyPanel)\r\n        this.week_tasks_bar_base = cc.find('base', this.week_tasks_bar)\r\n        this.week_tasks_bar_streak = cc.find('streak', this.week_tasks_bar)\r\n\r\n        this.week_tasks_bar_fill = cc.find('fill_bar/fill', this.week_tasks_bar_base).getComponent(cc.Sprite)\r\n        this.week_tasks_bar_amount = cc.find('amount', this.week_tasks_bar_base).getComponent(cc.Label)\r\n        this.week_tasks_bar_streak_amount = cc.find('layout/label', this.week_tasks_bar_streak).getComponent(cc.Label)\r\n\r\n        //info popup\r\n        this.info_popup_tasks_fill = cc.find('panel/games_weekly/fill_bar/fill', this.info_popup).getComponent(cc.Sprite)\r\n        this.info_popup_tasks_amount = cc.find('panel/games_weekly/amount', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_streak = cc.find('panel/streak', this.info_popup)\r\n        this.info_popup_streak_amount = cc.find('panel/streak/label', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_timeLeft = cc.find('panel/bottom/time_text', this.info_popup).getComponent(cc.Label)\r\n\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info_popup)\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.on('click', this.openInfoPopupClick, this)\r\n        this.btnCloseInfo.on('click', this.closeInfoPopupClick, this)\r\n\r\n\r\n        this.setWeeklyAmount(0,14);\r\n        this.setStreakAmount(0);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.off('click', this.openInfoPopupClick, this)\r\n\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userData){\r\n            this.setWeeklyAmount(DataManager.instance.userData.completed_tasks,14);\r\n            this.setStreakAmount(DataManager.instance.userData.weekly_streak);\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks, false);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n\r\n       \r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            //this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.info_popup_timeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.week_tasks_bar_amount.string = this.info_popup_tasks_amount.string = `${played}/${target}`\r\n        this.week_tasks_bar_fill.fillRange = this.info_popup_tasks_fill.fillRange = fillRange;\r\n    }\r\n\r\n    setStreakAmount( days : number){\r\n        this.week_tasks_bar_streak_amount.string = `x${days}`;\r\n        this.info_popup_streak_amount.string = `streak x${days}`;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto, fetchHourlyChallange: boolean = true){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n\r\n        const hourly_challenge_item = PoolManager.instance.getNode(`task_item_hourly_challenge`, this.dailyPanelContent).getComponent(HourlyChallangeItem);\r\n        if(fetchHourlyChallange){\r\n            hourly_challenge_item.fetchFromServer();\r\n        }\r\n        else{\r\n            hourly_challenge_item.setFromCache();\r\n        }\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    openInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = true;\r\n    }\r\n\r\n    closeInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = false;\r\n    }\r\n\r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLinkGuidebook(){\r\n        this.openLink(\"https://telegram.org\")\r\n    }\r\n\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function getServerTimeNow() : Date{\r\n    return new Date(Date.now() + DataManager.instance.serverTimeOffsetMiliseconds);\r\n}\r\n\r\nexport function getServerTimestampNow() : number{\r\n    return getServerTimeNow().getTime();\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = getServerTimeNow();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToHourSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = getServerTimestampNow();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://d62c-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n  completed_tasks: number;\r\n  weekly_streak: number;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}\r\n\r\nexport class LashHourLeaderDto{\r\n  public position: number;\r\n  public user_id: string;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public photo_url?: string;\r\n  public points: number;\r\n  public game_duration: number;\r\n}\r\n\r\nexport class GetServerTimeDto{\r\n  public data: ServerTimestampDto;\r\n  public message: string;\r\n}\r\n\r\nexport class ServerTimestampDto{\r\n  public timestamp: number;\r\n}"],"file":"index.js"}