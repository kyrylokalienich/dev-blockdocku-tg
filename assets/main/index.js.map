{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","call","name","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","length","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","Monetag_1","AuthController_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","MonetagController","showFullscreenAdRewarded","adWathcedSuccesfully","showOncklicka_Rewarded_1","showRewardedAd_2","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","res","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","HistoryItem","label_score","HistoryLayer","HISTORY","LEADERBOARD","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","designSize","view","getDesignResolutionSize","viewSize","getFrameSize","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","viewportHeight","viewportWidth","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","responsive","setResizeCallback","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","responsiveTest","container","style","width","innerWidth","height","innerHeight","margin","padding","canvas","responsiveOld","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","viewRatio","responsiveTest2","EXACT_FIT","resizeWithBrowserSize","adjustViewportMeta","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","update","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867073","showFullscreenAd_2","show_8867075","showFullscreenAdRewarded_2","show_6065984","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkColor","lightColor","darkBlueText","darkGrayText","grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();\r\n                // if(this.done_amount % 2 == 0){\r\n                //     //show rewarded ad and update\r\n                //     this.showRewardedAd();\r\n                // }\r\n                // else{\r\n                //     this.showRewardedAd_2();\r\n                // }             \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showRewardedAd(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showOncklicka_Rewarded_1()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    showRewardedAd_2(){\r\n        MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n        console.log(`default DESIGN SIZE ${designSize}`)\r\n        console.log(`default VIEW SIZE ${viewSize}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        //this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp =  TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n                //this.responsive();\r\n            })\r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged. height ${(this as any).viewportHeight} width ${(this as any).viewportWidth}`)\r\n                //cc.view.setFrameSize(window.innerWidth, window.innerHeight)\r\n                cc.view.setFrameSize(750, 1624)\r\n                cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n\r\n        //this.responsiveTest();\r\n\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n        \r\n        //this.responsiveTest();\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    responsiveTest(){\r\n        console.log(`RESPONSIVE TEST`);\r\n        let container = document.getElementById('Cocos2dGameContainer');\r\n        container.style.width = window.innerWidth + 'px';\r\n        container.style.height = window.innerHeight + 'px';\r\n        container.style.margin = '0px';\r\n        container.style.padding = '0px';\r\n\r\n        let canvas = document.getElementById('GameCanvas');\r\n        canvas.style.width = window.innerWidth + 'px';\r\n        canvas.style.height = window.innerHeight + 'px';\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n       this.responsiveOld();\r\n    }\r\n\r\n    responsiveTest2(){\r\n        console.log(`RESPONSIVE TEST 2`);\r\n        let container = document.getElementById('Cocos2dGameContainer');\r\n        container.style.width = window.innerWidth + 'px';\r\n        container.style.height = window.innerHeight + 'px';\r\n        container.style.margin = '0px';\r\n        container.style.padding = '0px';\r\n\r\n        let canvas = document.getElementById('GameCanvas');\r\n        canvas.style.width = window.innerWidth + 'px';\r\n        canvas.style.height = window.innerHeight + 'px';\r\n\r\n        cc.Canvas.instance.fitHeight = true;\r\n        cc.Canvas.instance.fitWidth = true;\r\n\r\n        cc.view.setFrameSize(window.innerWidth, window.innerHeight)\r\n        cc.view.setDesignResolutionSize(window.innerWidth, window.innerHeight, cc.ResolutionPolicy.EXACT_FIT);\r\n        cc.view.resizeWithBrowserSize(true);\r\n        cc.view.adjustViewportMeta(true);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showOncklicka_Rewarded_1()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.closeLoseBuyShufflePopup();\r\n                this.closeBuySkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    show_ad_rewarded_skill_2_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\"\r\n    },    \r\n\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\"\r\n    },\r\n\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\"\r\n    },\r\n    \r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\"\r\n    },\r\n    \r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\"\r\n    },\r\n    \r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\"\r\n    },\r\n    \r\n    \r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\"\r\n    },\r\n\r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\"\r\n    },\r\n\r\n    \r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkColor = cc.color(75, 92, 129);\r\n        const lightColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkColor : lightColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const darkBlueText = cc.color(34, 47, 63);\r\n        const darkGrayText = cc.color(124, 133, 135);\r\n        const grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? grayText : darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://ee65-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}