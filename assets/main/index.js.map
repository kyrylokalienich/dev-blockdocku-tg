{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","packages/i18n/runtime-scripts/LanguageData.js","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","packages/i18n/runtime-scripts/LocalizedLabel.js","packages/i18n/runtime-scripts/LocalizedSprite.js","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/MoreLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","packages/i18n/runtime-scripts/SpriteFrameSet.js","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","packages/i18n/runtime-scripts/polyglot.min.js","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","ApiErrors_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","Unauthorized","Forbidden","HttpError","message","[object Object]","super","name","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","postGameStart","gameToken","timeStamp","game_token","timestamp","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","createAvatarImage","parent","imgElement","style","position","width","height","left","top","once","removeChild","loadTextureFromImage","Texture2D","initWithElement","handleLoadedTexture","setTexture","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","opacity","setActive","bool","x","y","zIndex","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","DailyTaskItem","label_name","label_reward","btn","task_done","task_not_done","fill","reward","toString","setFill","fillRange","Button","Node","DataManager","mode","ENUM_GAME_MODE","SCORE","ENUM_GAME_STATUS","UNRUNING","loadingRate","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","score","scoreMax","historyData","language","set","reset","save","localStorage","setItem","restore","_data","getItem","parse","PoolManager_1","EffectManager","effect","options","effNode","getNode","Animation","anim","on","removeFromParent","ParticleSystem","resetSystem","ENUM_UI_TYPE","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","length","forEach","clear","StaticInstance_1","AudioManager_1","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","onDestroy","toggleBannerAd","rendorMusic","rendorSound","onDisable","CLICK","StaticInstance","uiManager","toggle","EXIT","MAIN","MENU","fadeManager","fadeIn","gameManager","onGameStart","FadeManager","setFadeManager","seconds","to","call","fadeOut","Utils_1","AuthController_1","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","scheduleOnce","game_created_at_1","Date","toISOString","getTime","userId","_c","generateGameToken","GAME_SECRET_KEY","res","created_at","removeAllChildren","RUNING","HistoryItem","label_score","toFixed","HistoryItem_1","HistoryLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","i","player","winning_amount","User","username","total_winning_amount","HISTORY","LEADERBOARD","TASKS","PROFILE","HttpErrorLayer","btnSupport","btnRefresh","tip","onSupportClick","onRefreshClick","HTTP_ERROR","onHomeClick","ApiClientFactory_1","TestManager_1","AdsGram_1","Monetag_1","Index","view","setResizeCallback","responsive","getTelegramInitData","webAppObject","getTelegramWebApp","requestFullscreen","enableClosingConfirmation","MonetagController","apiClientFactory","Accept","token","apiClientAuthorized","userController","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","testApiClientFactory","testApiClient","testManager","TestManager","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","viewRatio","Polyglot","polyInst","loadLanguageData","i18n","languages","initPolyglot","replace","phrases","allowMissing","curLang","module","inst","t","key","opt","updateSceneRenderers","rootNodes","director","getScene","children","allLocalizedLabels","labels","getComponentsInChildren","Array","allLocalizedSprites","_i2","sprites","_i3","updateSprite","LeaderboardItem","label_place","place","LeaderboardItem_1","LeaderboardLayer","youItem","btnWinners","btnFindMe","winners","winnersPanel","winnersContent","btnCloseWinners","onFindMeClick","onWinnersClick","onCloseWinnersClick","user_position","you","leaderboard","user_id","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","panelSkill","usedSkillsText","btnOpenSkills","btnCloseSkills","skill_confirm_popup_1","skill_confirm_popup_2","skill_confirm_popup_3","btnSkill_1","btnSkill_1_ad","btnSkill_2","btnSkill_3","btnSkill_1_confirm","btnSkill_2_confirm","btnSkill_3_confirm","btnSkill_1_decline","btnSkill_2_decline","btnSkill_3_decline","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","isTouchStarted","initMainBlocks","initReadyBlocks","initSelectNewBlocks","setTouch","setSkill","fetchUserData","XNUM","blockComp","Math","floor","main","bonusesUsed","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","onSkillBombConfirmClick","onSkillShuffleConfirmClick","onClickHint","onClickHintClose","showRewardedAd_shuffle","openConfirmSkill_1","openConfirmSkill_2","openConfirmSkill_3","onSkillSelectConfirmClick","closeConfirmSkill_1","closeConfirmSkill_2","closeConfirmSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","e","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","showPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","setHistoryData","showFullscreenAdRewarded","doSkillShuffle","showRewardedAd_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","responce","buyCoins","doCount","showVideoAd","getPlatform","gravity","bg_color","color","msg","SKILL_SHUFFLE","doSkillSelectNewBlock","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","openTelegramLinkChannel","LoadingLayer","loadfill","update","ALocaleLabel_1","LocalizationManager","changeLanguage","langCode","refreshUI","jsonLocalization","en","ua","de","es","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_time_left_label","tasks_title","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","profile_title","profile_account_owner","profile_support","profile_privacy","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","Class","extends","editor","executeInEditMode","menu","properties","dataID","_dataID","val","SpriteFrameSet","inspector","spriteFrameSet","getSpriteFrameByLang","lang","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","getUTCRemainingTimeToEndOfWeek","getUTCRemainingTimeToEndOfWeekToSeconds","monetagLoadPromise","dataset","zone","sdk","_monetagJS","MonetagController_1","show_8721959","UIScrollControl_1","MoreLayer","scrollNode","scrollItem","toggleCustomRowAd","isScrollToTop","size","ScrollView","scrollToTop","game","getSprite","hasEventListener","onItemClick","scroll","turnToApp","MORE","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","AvatarLoader_1","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","SETTING","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","windowHeight","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","info","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","text","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleEN","toggleUK","toggleDE","toggleES","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","onTabDailyClick","onTabInviteClick","onInviteFriendClick","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","getTest","postTest","ToastManager","_d","_e","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","getContentSize","setContentSize","_tempCount","H","scrollEvents","eventHandler","EventHandler","target","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","from","Uint8Array","map","padStart","join","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","now","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","minutes","hours","days","secret","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","l","m","getter","o","enumerable","Symbol","toStringTag","value","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","API_URL","LOCAL_API_URL","CHANNEL_INVITE_URL","TEST_TELEGRAM_TOKEN","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","currentLocale","locale","u","f","VERSION","smart_count","_","chinese","german","french","russian","czech","polish","icelandic","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        if (!error.response) {\r\n            throw new HttpError(error.message)\r\n        } else if (error.response.status === 401) {\r\n            throw new Unauthorized(error.response.data);\r\n        } else if (error.response.status === 403) {\r\n            throw new Forbidden(error.response.data);\r\n        } else {\r\n            throw error;\r\n        }\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"winners/last-week\");\r\n    }\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: Date): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp\r\n        };\r\n\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken\r\n        };\r\n\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n\r\n\r\n    static createAvatarImage(url: string, parent: cc.Node) {\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n    \r\n        // Attach to document\r\n        document.body.appendChild(imgElement);\r\n    \r\n        // Remove when not needed\r\n        parent.once('destroy', () => {\r\n            document.body.removeChild(imgElement);\r\n        });\r\n    };\r\n\r\n\r\n    static loadTextureFromImage(url: string, sprite: cc.Sprite){\r\n\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        //imgElement.style.visibility = 'none';\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n\r\n        imgElement.onload = () =>{\r\n            const texture = new cc.Texture2D();\r\n            texture.initWithElement(imgElement);\r\n            texture.handleLoadedTexture();\r\n    \r\n            // Step 3: Create a SpriteFrame from the Texture2D\r\n            const spriteFrame = new cc.SpriteFrame();\r\n            spriteFrame.setTexture(texture);\r\n    \r\n            // Step 4: Assign the SpriteFrame to the provided Sprite component\r\n            sprite.spriteFrame = spriteFrame;\r\n        }\r\n\r\n        imgElement.onerror = (error) => {\r\n            console.error(\"Failed to load image:\", error);\r\n        };\r\n\r\n    };\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-06 10:21:53 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:05:15\r\n */\r\n\r\nimport { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.45){\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n        }else{\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n        \r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(name: string, reward: number){\r\n        this.label_name.string = name;\r\n        this.label_reward.string = reward.toString();\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n\r\n        if(fill >= 1){\r\n            this.task_not_done.active = false;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\n\r\nconst STORAGE_KEY = 'CC2_TETRIS_CLEARING'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameToken: string = null\r\n    language: string = \"en\"\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n\r\n    save() {\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameToken: this.gameToken,\r\n            language: this.language,\r\n        }))\r\n    }\r\n\r\n    restore() {\r\n        const _data = cc.sys.localStorage.getItem(STORAGE_KEY) as any\r\n        try {\r\n            const data = JSON.parse(_data)\r\n            this.isMusicOn = data?.isMusicOn === false ? false : true\r\n            this.isSoundOn = data?.isSoundOn === false ? false : true\r\n            this.level = typeof data.level == 'number' ? data.level : 1\r\n            this.levelMax = typeof data.levelMax == 'number' ? data.levelMax : 1\r\n            this.scoreMax = typeof data.scoreMax == 'number' ? data.scoreMax : 0\r\n            this.historyData = data?.historyData || null\r\n            this.gameToken = data?.gameToken || null\r\n            this.language = data?.language || \"en\"\r\n\r\n        } catch {\r\n            this.isMusicOn = true\r\n            this.isSoundOn = true\r\n            this.level = 1\r\n            this.levelMax = 1\r\n            this.scoreMax = 0\r\n            this.historyData = null\r\n            this.gameToken = null\r\n            this.language = \"en\"\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    MORE = 'MoreLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameToken = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","// Created by carolsail\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport * as config from '../../config.js';\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const gameToken = DataManager.instance.gameToken;\r\n\r\n                UserController.Instance?.postGameFinish(score, gameToken).then((response) => {\r\n                    console.log(\"game ended token\", response)\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                });\r\n\r\n                DataManager.instance.gameToken = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n\r\n            console.log(\"NEW GAME INIT!!!!\");\r\n\r\n            const game_created_at = new Date();\r\n            console.log(\"game_created_at toISOString\");\r\n            console.log(game_created_at.toISOString());\r\n\r\n            const timestamp = game_created_at.getTime();\r\n            console.log(\"timestamp\");\r\n            console.log(timestamp);\r\n\r\n            //const userId = 226496203; \r\n\r\n            var userId;\r\n            try{\r\n                userId =TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n\r\n            }\r\n\r\n           \r\n\r\n            console.log(\"userId\");\r\n            console.log(userId);\r\n\r\n            generateGameToken(userId, timestamp, config.GAME_SECRET_KEY).then((res)=>{\r\n                const gameToken = res;\r\n                console.log(\"GAME_TOKEN: \" + res);\r\n\r\n                UserController.Instance?.postGameStart(gameToken, game_created_at).then((response) => {\r\n                    console.log(\"game started succesfully: \", response.created_at)\r\n                    DataManager.instance.gameToken = gameToken;\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to start game:\", error);\r\n                });\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Failed to start game:\", error);\r\n            });\r\n\r\n           \r\n        }\r\n\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING;\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, `@${player.User.username}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { TestManager } from './api/TestManager';\r\nimport { AdsGramController } from './ads/ads-gram/AdsGram';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\n\r\n//import {config} from \"dotenv\"\r\nimport * as config from '../config.js';\r\nimport { generateGameToken } from './Utils';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst API_URL = \"https://d918-176-8-143-190.ngrok-free.app/api/\";\r\nconst LOCAL_API_URL = \"http://localhost:3004/api/\";\r\nconst TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA2Ui3cL&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1734611418&signature=P7lJWOsK2PksSyPhr815D8JbqnOupQHjgIqde0T73aY3Mdz3DBWgs6J7rCil-V1gqtWeWUBvsE8XN9TC569bBg&hash=b23f345fbae219c8443dd67ce29409d09aaae2e4dfe0d6c1a66679e8e407a81b\";\r\n\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n\t\t\tconsole.log(\"telegram web app init succes: \", res.success);\r\n\t\t\tconsole.log(\"init data: \", TelegramWebApp.Instance.getTelegramInitData());\r\n\r\n\t\t\tvar webAppObject = TelegramWebApp.Instance.getTelegramWebApp();\r\n\t\t\twebAppObject.requestFullscreen();\r\n            webAppObject.enableClosingConfirmation();\r\n\t\t});\r\n\r\n        AdsGramController.Instance.init().then(res =>{\r\n            console.log(\"adsgram init succes: \", res.success);\r\n            AdsGramController.Instance.initAdsContorller();\r\n        })\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n\r\n        //ініціалізація API клієнта\r\n\r\n        const apiClientFactory = new ApiClientFactory(API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        //const token = TEST_TELEGRAM_TOKEN;\r\n        const token = TelegramWebApp.Instance.getTelegramInitData();\r\n\r\n        console.log(\"init data (token): \" + token);\r\n\r\n        const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n        const userController = new UserController(apiClientAuthorized);\r\n        UserController.Instance = userController;\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n\r\n        //LocalizationManager.instance.init();\r\n\r\n        // Операції з UI\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true, () => {\r\n            DataManager.instance.loadingRate = 1\r\n        })\r\n\r\n        const testApiClientFactory = new ApiClientFactory(\"https://farm-stars.online/\", {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n        });\r\n\r\n        const testApiClient = testApiClientFactory.createClient();\r\n        const testManager = new TestManager(testApiClient);\r\n\r\n        TestManager.Instance = testManager;\r\n\r\n        userController.getUser().then(function (response) {\r\n            // handle success\r\n            console.log(\"user succes\");\r\n            console.log(response);\r\n        }).catch(error =>{\r\n            \r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n        });\r\n\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","const Polyglot = require('polyglot.min');\n\nlet polyInst = null;\nif (!window.i18n) {\n    window.i18n = {\n        languages: {},\n        curLang:''\n    };\n}\n\nif (CC_EDITOR) {\n    Editor.Profile.load('profile://project/i18n.json', (err, profile) => {\n        window.i18n.curLang = profile.data['default_language'];\n        if (polyInst) {\n            let data = loadLanguageData(window.i18n.curLang) || {};\n            initPolyglot(data);\n        }\n    });\n}\n\nfunction loadLanguageData (language) {\n    return window.i18n.languages[language];\n}\n\nfunction initPolyglot (data) {\n    if (data) {\n        if (polyInst) {\n            polyInst.replace(data);\n        } else {\n            polyInst = new Polyglot({ phrases: data, allowMissing: true });\n        }\n    }\n}\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        if (language === window.i18n.curLang) {\n            return;\n        }\n        let data = loadLanguageData(language) || {};\n        window.i18n.curLang = language;\n        initPolyglot(data);\n        this.inst = polyInst;\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        if (polyInst) {\n            return polyInst.t(key, opt);\n        }\n    },\n\n    inst: polyInst,\n\n    updateSceneRenderers () { // very costly iterations\n        let rootNodes = cc.director.getScene().children;\n        // walk all nodes with localize label and update\n        let allLocalizedLabels = [];\n        for (let i = 0; i < rootNodes.length; ++i) {\n            let labels = rootNodes[i].getComponentsInChildren('LocalizedLabel');\n            Array.prototype.push.apply(allLocalizedLabels, labels);\n        }\n        for (let i = 0; i < allLocalizedLabels.length; ++i) {\n            let label = allLocalizedLabels[i];\n            if(!label.node.active)continue;\n            label.updateLabel();\n        }\n        // walk all nodes with localize sprite and update\n        let allLocalizedSprites = [];\n        for (let i = 0; i < rootNodes.length; ++i) {\n            let sprites = rootNodes[i].getComponentsInChildren('LocalizedSprite');\n            Array.prototype.push.apply(allLocalizedSprites, sprites);\n        }\n        for (let i = 0; i < allLocalizedSprites.length; ++i) {\n            let sprite = allLocalizedSprites[i];\n            if(!sprite.node.active)continue;\n            sprite.updateSprite(window.i18n.curLang);\n        }\n    }\n};","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    winners: cc.Node = null\r\n    winnersPanel: cc.Node = null\r\n    winnersContent: cc.Node = null\r\n    btnCloseWinners: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n\r\n\r\n    onLoad() {\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnWinners = cc.find('btn_winners', this.node)\r\n        this.winners = cc.find('winners', this.node)\r\n        this.winnersPanel = cc.find('panel', this.winners)\r\n        this.btnCloseWinners = cc.find('btn_close', this.winnersPanel)\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.winnersPanel.on('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.on('click', this.onCloseWinnersClick, this)\r\n\r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.winnersPanel.off('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.off('click', this.onCloseWinnersClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.winners.active = false;\r\n\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        // AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        // this.winners.active = true;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n\r\n    onCloseWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.winners.active = false;\r\n    }\r\n    \r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-05 XNUM * 2:03:26 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-0XNUM XNUM * 2 + 1:30:35\r\n */\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { getDistance, random, vibrate } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70//78\r\nconst XNUM = 9 //8\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    //ui\r\n    panelSkill: cc.Node = null\r\n    usedSkillsText: cc.Node = null\r\n\r\n    btnOpenSkills: cc.Node = null\r\n    btnCloseSkills: cc.Node = null\r\n\r\n    skill_confirm_popup_1: cc.Node = null\r\n    skill_confirm_popup_2: cc.Node = null\r\n    skill_confirm_popup_3: cc.Node = null\r\n\r\n    btnSkill_1: cc.Node = null\r\n    btnSkill_1_ad: cc.Node = null\r\n    btnSkill_2: cc.Node = null\r\n    btnSkill_3: cc.Node = null\r\n\r\n    btnSkill_1_confirm: cc.Node = null\r\n    btnSkill_2_confirm: cc.Node = null\r\n    btnSkill_3_confirm: cc.Node = null\r\n\r\n    btnSkill_1_decline: cc.Node = null\r\n    btnSkill_2_decline: cc.Node = null\r\n    btnSkill_3_decline: cc.Node = null\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current/num', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        this.initMainBlocks()\r\n\r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n        this.initReadyBlocks(true)\r\n        this.initSelectNewBlocks();\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.panelSkill = cc.find('hints_popup', this.node)\r\n        this.usedSkillsText = cc.find('panel/used_hints/label', this.panelSkill)\r\n        this.btnOpenSkills = cc.find('btn_hint', this.node)\r\n        this.btnCloseSkills = cc.find('panel/btn_close', this.panelSkill)\r\n\r\n        this.btnSkill_1 = cc.find('panel/layout/btn_hint_1/buttons/btn_bonus', this.panelSkill)\r\n        this.btnSkill_1_ad = cc.find('panel/layout/btn_hint_1/buttons/btn_ad', this.panelSkill)\r\n        this.btnSkill_2 = cc.find('panel/layout/btn_hint_2/btn_bonus', this.panelSkill)\r\n        this.btnSkill_3 = cc.find('panel/layout/btn_hint_3/btn_bonus', this.panelSkill)\r\n\r\n        this.skill_confirm_popup_1 = cc.find('skill_confirm_popup_1', this.node)\r\n        this.skill_confirm_popup_2 = cc.find('skill_confirm_popup_2', this.node)\r\n        this.skill_confirm_popup_3 = cc.find('skill_confirm_popup_3', this.node)\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n\r\n        this.btnSkill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_1)\r\n        this.btnSkill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_2)\r\n        this.btnSkill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_3)\r\n\r\n        this.btnSkill_1_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_1)\r\n        this.btnSkill_2_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_2)\r\n        this.btnSkill_3_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_3)\r\n\r\n\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            this.skills.getChildByName('skill_bomb').on('click', this.onSkillBombConfirmClick, this)\r\n            this.skills.getChildByName('skill_shuffle').on('click', this.onSkillShuffleConfirmClick, this)\r\n\r\n            this.btnOpenSkills.on('click', this.onClickHint, this)\r\n            this.btnCloseSkills.on('click', this.onClickHintClose, this)\r\n\r\n            this.btnSkill_1_ad.on('click', this.showRewardedAd_shuffle, this)\r\n            this.btnSkill_1.on('click', this.openConfirmSkill_1, this)\r\n            this.btnSkill_2.on('click', this.openConfirmSkill_2, this)\r\n            this.btnSkill_3.on('click', this.openConfirmSkill_3, this)\r\n            \r\n            this.btnSkill_1_confirm.on('click', this.onSkillShuffleConfirmClick, this)\r\n            this.btnSkill_2_confirm.on('click', this.onSkillBombConfirmClick, this)\r\n            this.btnSkill_3_confirm.on('click', this.onSkillSelectConfirmClick, this)\r\n\r\n            this.btnSkill_1_decline.on('click', this.closeConfirmSkill_1, this)\r\n            this.btnSkill_2_decline.on('click', this.closeConfirmSkill_2, this)\r\n            this.btnSkill_3_decline.on('click', this.closeConfirmSkill_3, this)\r\n\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n        } else {\r\n            this.skills.getChildByName('skill_bomb').off('click', this.onSkillBombConfirmClick, this)\r\n            this.skills.getChildByName('skill_shuffle').off('click', this.onSkillShuffleConfirmClick, this)\r\n\r\n            this.btnOpenSkills.off('click', this.onClickHint, this)\r\n            this.btnCloseSkills.off('click', this.onClickHintClose, this)\r\n           \r\n            this.btnSkill_1_ad.off('click', this.showRewardedAd_shuffle, this)\r\n\r\n            this.btnSkill_1.off('click', this.openConfirmSkill_1, this)\r\n            this.btnSkill_2.off('click', this.openConfirmSkill_2, this)\r\n            this.btnSkill_3.off('click', this.openConfirmSkill_3, this)\r\n\r\n            this.btnSkill_1_confirm.off('click', this.onSkillShuffleConfirmClick, this)\r\n            this.btnSkill_2_confirm.off('click', this.onSkillBombConfirmClick, this)\r\n            this.btnSkill_3_confirm.off('click', this.onSkillSelectConfirmClick, this)\r\n\r\n            this.btnSkill_1_decline.off('click', this.closeConfirmSkill_1, this)\r\n            this.btnSkill_2_decline.off('click', this.closeConfirmSkill_2, this)\r\n            this.btnSkill_3_decline.off('click', this.closeConfirmSkill_3, this)\r\n\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                //vibrate();\r\n\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip) {\r\n                    this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        if(this.blocksPlacedCount % 12 == 0){\r\n            //AdsGramController.Instance.showFullscreenAd();\r\n            MonetagController.Instance.showFullscreenAd();\r\n        }\r\n    }\r\n\r\n    showRewardedAd_shuffle(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.onClickHintClose();\r\n            this.closeConfirmSkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n        });\r\n    }\r\n\r\n    showRewardedAd_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.onClickHintClose();\r\n            this.closeConfirmSkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    showPlace() {\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n            if(this.isFreeBombUsed){\r\n                this.doGameOver();\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    onClickHint(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panelSkill.active = true;\r\n        this.usedSkillsText.getComponent(cc.Label).string = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    onClickHintClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panelSkill.active = false;\r\n    }\r\n\r\n    openConfirmSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_1.active = true;\r\n        }\r\n    }\r\n\r\n    openConfirmSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_2.active = true;\r\n        }\r\n    }\r\n\r\n    openConfirmSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_3.active = true;\r\n        }\r\n    }\r\n\r\n    closeConfirmSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_1.active = false;\r\n    }\r\n\r\n    closeConfirmSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_2.active = false;\r\n    }\r\n\r\n    closeConfirmSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_3.active = false;\r\n    }\r\n\r\n    onSkillBombConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_2();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillBomb();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    onSkillShuffleConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_1();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillShuffle();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    onSkillSelectConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_3();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.showRewardedAd_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.onClickHintClose();\r\n                this.closeConfirmSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    onEnable(){}\r\n\r\n    onDisable(){}\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU)){\r\n                    this.hide()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\"\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY COIN GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ МОНЕТ!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE MONEDAS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all coins from in-game purchases go to the total pool.\",\r\n        \"ua\": \"50% усіх монет з внутрішньо ігрових покупок у грі йде в загальний пул\",\r\n        \"de\": \"50% aller Münzen aus In-Game-Käufen fließen in den Gesamtpool.\",\r\n        \"es\": \"El 50% de todas las monedas de las compras dentro del juego van al pozo total.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players will receive a share of the coin pool on their balance!\",\r\n        \"ua\": \"цього тижня топ-5 гравців отримають частину пулу монет на свій баланс!\",\r\n        \"de\": \"Diese Woche erhalten die Top-5-Spieler einen Anteil des Münz-Pools auf ihr Konto!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores recibirán una parte del pozo de monedas en su saldo!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\"\r\n    },\r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (50%)\",\r\n        \"ua\": \"1 місце (50%)\",\r\n        \"de\": \"1. Platz (50%)\",\r\n        \"es\": \"1er lugar (50%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (30%)\",\r\n        \"ua\": \"2 місце (30%)\",\r\n        \"de\": \"2. Platz (30%)\",\r\n        \"es\": \"2do lugar (30%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (3%)\",\r\n        \"ua\": \"4 місце (3%)\",\r\n        \"de\": \"4. Platz (3%)\",\r\n        \"es\": \"4to lugar (3%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (2%)\",\r\n        \"ua\": \"5 місце (2%)\",\r\n        \"de\": \"5. Platz (2%)\",\r\n        \"es\": \"5to lugar (2%)\"\r\n    },\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"до завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримуй\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"for every friend you bring!\",\r\n        \"ua\": \"за кожного приведеного друга!\",\r\n        \"de\": \"für jeden eingeladenen Freund!\",\r\n        \"es\": \"por cada amigo que traigas!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"All Time\",\r\n        \"ua\": \"Весь Час\",\r\n        \"de\": \"Gesamtzeit\",\r\n        \"es\": \"Todo el Tiempo\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок самостійно\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монет, щоб обрати блок cамостійно Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left!\",\r\n        \"ua\": \"Не залишилось місця!\",\r\n        \"de\": \"Kein Platz mehr!\",\r\n        \"es\": \"No hay espacio!\"\r\n    },\r\n    \r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\"\r\n    },\r\n\r\n   \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\"\r\n    },\r\n};\r\n","const i18n = require('LanguageData');\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true,\n        menu: 'i18n/LocalizedLabel'\n    },\n\n    properties: {\n        dataID: {\n            get () {\n                return this._dataID;\n            },\n            set (val) {\n                if (this._dataID !== val) {\n                    this._dataID = val;\n                    if (CC_EDITOR) {\n                        this._debouncedUpdateLabel();\n                    } else {\n                        this.updateLabel();\n                    }\n                }\n            }\n        },\n        _dataID: ''\n    },\n    \n    onLoad () {\n        if(CC_EDITOR) {\n            this._debouncedUpdateLabel = debounce(this.updateLabel, 200);\n        }\n        if (!i18n.inst) {\n            i18n.init();\n        }\n        // cc.log('dataID: ' + this.dataID + ' value: ' + i18n.t(this.dataID));\n        this.fetchRender();\n    },\n\n    fetchRender () {\n        let label = this.getComponent(cc.Label);\n        if (label) {\n            this.label = label;\n            this.updateLabel();\n            return;\n        } \n    },\n\n    updateLabel () {\n        if (!this.label) {\n            cc.error('Failed to update localized label, label component is invalid!');\n            return;\n        }\n        let localizedString = i18n.t(this.dataID);\n        if (localizedString) {\n            this.label.string = i18n.t(this.dataID);\n        }\n    }\n});","const SpriteFrameSet = require('SpriteFrameSet');\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true,\n        inspector: 'packages://i18n/inspector/localized-sprite.js',\n        menu: 'i18n/LocalizedSprite'\n    },\n\n    properties: {\n        spriteFrameSet: {\n            default: [],\n            type: SpriteFrameSet\n        }\n    },\n\n    onLoad () {\n        this.fetchRender();\n    },\n\n    fetchRender () {\n        let sprite = this.getComponent(cc.Sprite);\n        if (sprite) {\n            this.sprite = sprite;\n            this.updateSprite(window.i18n.curLang);\n            return;\n        }\n    },\n\n    getSpriteFrameByLang (lang) {\n        for (let i = 0; i < this.spriteFrameSet.length; ++i) {\n            if (this.spriteFrameSet[i].language === lang) {\n                return this.spriteFrameSet[i].spriteFrame;\n            }\n        }\n    },\n\n    updateSprite (language) {\n        if (!this.sprite) {\n            cc.error('Failed to update localized sprite, sprite component is invalid!');\n            return;\n        }\n\n        let spriteFrame = this.getSpriteFrameByLang(language);\n\n        if (!spriteFrame && this.spriteFrameSet[0]) {\n            spriteFrame = this.spriteFrameSet[0].spriteFrame;\n        }\n\n        this.sprite.spriteFrame = spriteFrame;\n    }\n});","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getUTCRemainingTimeToEndOfWeek, getUTCRemainingTimeToEndOfWeekToSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        \r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        this.labelGiveawayTimeLeft.string = getUTCRemainingTimeToEndOfWeek();\r\n        this.labelGiveawayPanelTimeLeft.string = getUTCRemainingTimeToEndOfWeekToSeconds();\r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n\r\n//<script src='//niphaumeenses.net/vignette.min.js' data-zone='8721959' data-sdk='show_8721959'></script>\r\n\r\n// show_8721959().then(() => {\r\n//     // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n//     // For more details, please refer to the detailed instructions.\r\n//     alert('You have seen ad ad!');\r\n// })\r\n\r\n\r\n//(window as any).show_8721959()\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//niphaumeenses.net/vignette.min.js';\r\n        script.dataset.zone = '8721959';\r\n        script.dataset.sdk = 'show_8721959';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n\r\n        if (this._monetagJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        UserController.Instance?.patchAd();\r\n\r\n        (window as any).show_8721959().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        UserController.Instance?.patchAd();\r\n        return (window as any).show_8721959();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport UIScrollControl from \"../plugins/UIScrollControl\";\r\nimport ResourceManager from \"../manager/ResourceManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MoreLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    scrollNode: cc.Node = null\r\n    scrollItem: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.scrollNode = cc.find('scroll', this.panel)\r\n        this.scrollItem = PoolManager.instance.getNode('MoreItem')\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        this.rendor()\r\n        SdkManager.instance.toggleCustomRowAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleCustomRowAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        const games = DataManager.instance.games\r\n        let isScrollToTop = false\r\n        this.scrollNode.getComponent(UIScrollControl).init(this.scrollItem, games.length, cc.size(500, 110), 0, (node: cc.Node, index: number) => {\r\n            if (!isScrollToTop) {\r\n                isScrollToTop = true\r\n                this.scrollNode.getComponent(cc.ScrollView).scrollToTop()\r\n            }\r\n            const game = games[index]\r\n            node.getChildByName('icon').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(`${game.icon}`)\r\n            node.getChildByName('title').getComponent(cc.Label).string = `${game.title}`\r\n            if (!node.hasEventListener('click')) {\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            } else {\r\n                node.off('click')\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            }\r\n        }, (scroll: cc.ScrollView) => {\r\n            // scroll.scrollToOffset(cc.v2(0, maxLevel * 110 - (scroll.node.height / 2)), 0.05)\r\n            scroll.scrollToTop()\r\n        })\r\n    }\r\n\r\n    onItemClick(item: any) {\r\n        let url: string = ''\r\n        if (typeof window['wx'] == 'undefined') {\r\n            url = item.url\r\n        } else {\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n            url = item.appid\r\n        }\r\n        if (url) SdkManager.instance.turnToApp(url)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MORE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n        //AvatarLoader.loadAvatar(\"user.photo_url\", this.avatarNode);\r\n        AvatarLoader.loadTextureFromImage(\"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\", this.avatarNode.getComponent(cc.Sprite));\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            this.nameNode.getComponent(cc.Label).string = \"@\" + response.data.username;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(1);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","const SpriteFrameSet = cc.Class({\n    name: 'SpriteFrameSet',\n    properties: {\n        language: '',\n        spriteFrame: cc.SpriteFrame\n    }\n});\n\nmodule.exports = SpriteFrameSet;","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //config.CHANNEL_INVITE_URL\r\n        this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `https://t.me/blockdock_dev_bot/game?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public enableClosingConfirmation() {\r\n        this._tgWebAppJS.enableClosingConfirmation();\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    // setSettingStyle(index: number = 0){\r\n    //     const layer: SettingLayer = this.uiMap.get(ENUM_UI_TYPE.SETTING) as SettingLayer\r\n    //     layer?.setStyle(index)\r\n    // }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 7 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 7 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateGameToken(userId: number, timestamp: number, secret: string): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${secret}`;\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axios\"] = factory();\n\telse\n\t\troot[\"axios\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./index.js\":\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\n\n/***/ }),\n\n/***/ \"./lib/adapters/xhr.js\":\n/*!*****************************!*\\\n  !*** ./lib/adapters/xhr.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/axios.js\":\n/*!**********************!*\\\n  !*** ./lib/axios.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/Cancel.js\":\n/*!******************************!*\\\n  !*** ./lib/cancel/Cancel.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/CancelToken.js\":\n/*!***********************************!*\\\n  !*** ./lib/cancel/CancelToken.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/isCancel.js\":\n/*!********************************!*\\\n  !*** ./lib/cancel/isCancel.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/Axios.js\":\n/*!***************************!*\\\n  !*** ./lib/core/Axios.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/InterceptorManager.js\":\n/*!****************************************!*\\\n  !*** ./lib/core/InterceptorManager.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/buildFullPath.js\":\n/*!***********************************!*\\\n  !*** ./lib/core/buildFullPath.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/createError.js\":\n/*!*********************************!*\\\n  !*** ./lib/core/createError.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/dispatchRequest.js\":\n/*!*************************************!*\\\n  !*** ./lib/core/dispatchRequest.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/enhanceError.js\":\n/*!**********************************!*\\\n  !*** ./lib/core/enhanceError.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/mergeConfig.js\":\n/*!*********************************!*\\\n  !*** ./lib/core/mergeConfig.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/settle.js\":\n/*!****************************!*\\\n  !*** ./lib/core/settle.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/transformData.js\":\n/*!***********************************!*\\\n  !*** ./lib/core/transformData.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/defaults.js\":\n/*!*************************!*\\\n  !*** ./lib/defaults.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/bind.js\":\n/*!*****************************!*\\\n  !*** ./lib/helpers/bind.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/buildURL.js\":\n/*!*********************************!*\\\n  !*** ./lib/helpers/buildURL.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/combineURLs.js\":\n/*!************************************!*\\\n  !*** ./lib/helpers/combineURLs.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/cookies.js\":\n/*!********************************!*\\\n  !*** ./lib/helpers/cookies.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\n/*!**************************************!*\\\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isAxiosError.js\":\n/*!*************************************!*\\\n  !*** ./lib/helpers/isAxiosError.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\n/*!****************************************!*\\\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\n/*!********************************************!*\\\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/parseHeaders.js\":\n/*!*************************************!*\\\n  !*** ./lib/helpers/parseHeaders.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/spread.js\":\n/*!*******************************!*\\\n  !*** ./lib/helpers/spread.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/validator.js\":\n/*!**********************************!*\\\n  !*** ./lib/helpers/validator.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/utils.js\":\n/*!**********************!*\\\n  !*** ./lib/utils.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://6d72-176-8-143-190.ngrok-free.app/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/+8brtpInhNUNiNTAy\",\r\n    \"GAME_SECRET_KEY\" : \"GAME_SECRET_KEY\",\r\n    \"TEST_TELEGRAM_TOKEN\" : \"query_id=AAHLDoANAAAAAMsOgA2Ui3cL&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1734611418&signature=P7lJWOsK2PksSyPhr815D8JbqnOupQHjgIqde0T73aY3Mdz3DBWgs6J7rCil-V1gqtWeWUBvsE8XN9TC569bBg&hash=b23f345fbae219c8443dd67ce29409d09aaae2e4dfe0d6c1a66679e8e407a81b\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: Date;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","//     (c) 2012 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documention:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n(function(e,t){typeof define==\"function\"&&define.amd?define([],function(){return t(e)}):typeof exports==\"object\"?module.exports=t(e):e.Polyglot=t(e)})(this,function(e){\"use strict\";function t(e){e=e||{},this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||\"en\",this.allowMissing=!!e.allowMissing,this.warn=e.warn||c}function s(e){var t,n,r,i={};for(t in e)if(e.hasOwnProperty(t)){n=e[t];for(r in n)i[n[r]]=t}return i}function o(e){var t=/^\\s+|\\s+$/g;return e.replace(t,\"\")}function u(e,t,r){var i,s,u;return r!=null&&e?(s=e.split(n),u=s[f(t,r)]||s[0],i=o(u)):i=e,i}function a(e){var t=s(i);return t[e]||t.en}function f(e,t){return r[a(e)](t)}function l(e,t){for(var n in t)n!==\"_\"&&t.hasOwnProperty(n)&&(e=e.replace(new RegExp(\"%\\\\{\"+n+\"\\\\}\",\"g\"),t[n]));return e}function c(t){e.console&&e.console.warn&&e.console.warn(\"WARNING: \"+t)}function h(e){var t={};for(var n in e)t[n]=e[n];return t}t.VERSION=\"0.4.3\",t.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},t.prototype.extend=function(e,t){var n;for(var r in e)e.hasOwnProperty(r)&&(n=e[r],t&&(r=t+\".\"+r),typeof n==\"object\"?this.extend(n,r):this.phrases[r]=n)},t.prototype.clear=function(){this.phrases={}},t.prototype.replace=function(e){this.clear(),this.extend(e)},t.prototype.t=function(e,t){var n,r;return t=t==null?{}:t,typeof t==\"number\"&&(t={smart_count:t}),typeof this.phrases[e]==\"string\"?n=this.phrases[e]:typeof t._==\"string\"?n=t._:this.allowMissing?n=e:(this.warn('Missing translation for key: \"'+e+'\"'),r=e),typeof n==\"string\"&&(t=h(t),r=u(n,this.currentLocale,t.smart_count),r=l(r,t)),r},t.prototype.has=function(e){return e in this.phrases};var n=\"||||\",r={chinese:function(e){return 0},german:function(e){return e!==1?1:0},french:function(e){return e>1?1:0},russian:function(e){return e%10===1&&e%100!==11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},czech:function(e){return e===1?0:e>=2&&e<=4?1:2},polish:function(e){return e===1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!==1||e%100===11?1:0}},i={chinese:[\"fa\",\"id\",\"ja\",\"ko\",\"lo\",\"ms\",\"th\",\"tr\",\"zh\"],german:[\"da\",\"de\",\"en\",\"es\",\"fi\",\"el\",\"he\",\"hu\",\"it\",\"nl\",\"no\",\"pt\",\"sv\"],french:[\"fr\",\"tl\",\"pt-br\"],russian:[\"hr\",\"ru\"],czech:[\"cs\"],polish:[\"pl\"],icelandic:[\"is\"]};return t});","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}"],"file":"index.js"}