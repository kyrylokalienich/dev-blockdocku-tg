{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/ui/HourlyChallangeItem.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/layer/OutputLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/ads/richads/Richads.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AuthController_1","AdsGram_1","Monetag_1","Onclicka_1","Richads_1","AdsManager","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial_Timeout","showRewarded_Interstitial","requiresPreload","richads","onclicka","adsGram","inApp_providers","preloadInApp_Interstitial_Timeout","showInApp_Interstitial","AdsManager_1","MonetagController","Instance","Onclicka","Richads","res","warn","error_1","showAd_Rewarded_Intestitial","_i","length","provider","tryShowAdFromProvider","patchAd","showAd_InApp_Intestitial","call","error_2","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","apiClient","getUser","getChannelMembership","TelegramWebApp","getTelegramUser","id","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","btnOutput","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","onOutputClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","LEADERBOARD","OUTPUT","HistoryItem","label_score","HistoryLayer","HISTORY","HourlyChallangeItem","label_time","update","nextHour","getNextHourDate","getRemainingTimeToHourSeconds","setMinutes","setHours","getHours","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","setDesignResolution","responsive","view","setResizeCallback","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","main_bottom_tab_5","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","reward_each_hour","reward_each_hour_challange","reward_each_hour_challange_top","reward_each_hour_challange_points","tasks_done","tasks_streak","games_weekly_challange_title","games_weekly_challange_text","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_guidebook","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","output_main_title","output_out_title","output_main_btn","output_main_label_1","out_bullet_1","out_bullet_2","out_bullet_3","output_out_label_1","output_out_label_2","output_out_btn","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","preloadRewarded_Interstitial","show_8867073","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","preloadInApp_Interstitial","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","OutputLayer","btn_next","btn_out","btn_close_out","panel_main","panel_out","edit_box","EditBox","onCloseOutClick","onNextClick","onOutClick","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnGuidebookRules","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","onGuidebookClick","SETTING","openLinkPrivacy","openLinkPartnership","openLinkGuidebook","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","TelegramAdsController","triggerNativeNotification","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","HourlyChallangeItem_1","TasksLayer","info_popup","week_tasks_bar","week_tasks_bar_base","week_tasks_bar_streak","week_tasks_bar_fill","week_tasks_bar_amount","week_tasks_bar_streak_amount","info_popup_tasks_fill","info_popup_tasks_amount","info_popup_streak","info_popup_streak_amount","info_popup_timeLeft","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","openInfoPopupClick","closeInfoPopupClick","setWeeklyAmount","setStreakAmount","setDailyTasks","days","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           //debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial_Timeout(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    OUTPUT = 'OutputLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","import { getRemainingTimeToDateSeconds, getRemainingTimeToHourSeconds } from \"../Utils\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HourlyChallangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_time: cc.Label | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(){\r\n        this.reward = \"COIN\";\r\n        this.amount = 50;\r\n        this.label_name.string = \"@username\";\r\n        this.label_score.string = \"1111\";\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        const nextHour = this.getNextHourDate();\r\n        this.label_time.string = getRemainingTimeToHourSeconds(nextHour);\r\n    }\r\n\r\n\r\n    getNextHourDate(): Date {\r\n        const now = new Date();\r\n        now.setMinutes(0, 0, 0); // Reset minutes, seconds, milliseconds\r\n        now.setHours(now.getHours() + 1); // Move to next hour\r\n        return now;\r\n    }\r\n    \r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { setDesignResolution } from './Utils';\r\nimport { AdsGramController } from './ads/ads-gram/AdsGram';\r\nimport { AdsManager } from './ads/AdsManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n\r\n        // AdsGramController.Instance.init().then(res =>{\r\n        //     console.log(\"adsgram init succes: \", res.success);\r\n        //     AdsGramController.Instance.initAdsContorllers();\r\n        //     AdsGramController.Instance.showFullscreenAd();\r\n        // })\r\n\r\n        // MonetagController.Instance.init().then(res =>{\r\n        //     console.log(\"MonetagController init succes: \", res.success);\r\n        // })\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n       this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n    \r\n    info: cc.Node = null\r\n    \r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n    \r\n    // general\r\n    \r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n    \r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n    \r\n    // main\r\n    \r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n    \r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"main_bottom_tab_5\": { \r\n        \"en\": \"Output\",\r\n        \"ua\": \"Вивід\",\r\n        \"de\": \"Ausgabe\",\r\n        \"es\": \"Retiro\",\r\n        \"ru\": \"Вывод\",\r\n        \"cs\": \"Výběr\",\r\n        \"sk\": \"Výber\",\r\n        \"pl\": \"Wypłata\"\r\n    },\r\n    \r\n    // settings\r\n    \r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n    \r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n    \r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n    \r\n    // settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n    \r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n    \r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n    \r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n    \r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n    \r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n    \r\n    // leaderboard\r\n    \r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n    \r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n    \r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n    \r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"reward_each_hour\": {\r\n        \"en\": \"Reward each hour\",\r\n        \"ua\": \"Приз щогодини\",\r\n        \"de\": \"Belohnung pro Stunde\",\r\n        \"es\": \"Recompensa por hora\",\r\n        \"ru\": \"Награда каждый час\",\r\n        \"cs\": \"Odměna každou hodinu\",\r\n        \"sk\": \"Odmena každú hodinu\",\r\n        \"pl\": \"Nagroda co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange\": {\r\n        \"en\": \"Hourly Challenge\",\r\n        \"ua\": \"Годинний челендж\",\r\n        \"de\": \"Stündliche Herausforderung\",\r\n        \"es\": \"Desafío por hora\",\r\n        \"ru\": \"Ежечасный челлендж\",\r\n        \"cs\": \"Hodinová výzva\",\r\n        \"sk\": \"Hodinová výzva\",\r\n        \"pl\": \"Wyzwanie co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_top\": {\r\n        \"en\": \"Top Player:\",\r\n        \"ua\": \"Топ гравець:\",\r\n        \"de\": \"Top-Spieler:\",\r\n        \"es\": \"Jugador top:\",\r\n        \"ru\": \"Топ игрок:\",\r\n        \"cs\": \"Top hráč:\",\r\n        \"sk\": \"Top hráč:\",\r\n        \"pl\": \"Top gracz:\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_points\": {\r\n        \"en\": \"Points:\",\r\n        \"ua\": \"Очки:\",\r\n        \"de\": \"Punkte:\",\r\n        \"es\": \"Puntos:\",\r\n        \"ru\": \"Очки:\",\r\n        \"cs\": \"Body:\",\r\n        \"sk\": \"Body:\",\r\n        \"pl\": \"Punkty:\"\r\n    },\r\n\r\n    \"tasks_done\": {\r\n        \"en\": \"Tasks Done\",\r\n        \"ua\": \"Завершено завданнь\",\r\n        \"de\": \"Aufgaben erledigt\",\r\n        \"es\": \"Tareas completadas\",\r\n        \"ru\": \"Выполнено заданий\",\r\n        \"cs\": \"Splněné úkoly\",\r\n        \"sk\": \"Splnené úlohy\",\r\n        \"pl\": \"Wykonane zadania\"\r\n    },\r\n\r\n    \"tasks_streak\" : {\r\n        \"en\": \"Your streak:\",\r\n        \"ua\": \"Твоя безперервна серія:\",\r\n        \"de\": \"Deine Serie:\",\r\n        \"es\": \"Tu racha:\",\r\n        \"ru\": \"Твоя серия:\",\r\n        \"cs\": \"Tvoje série:\",\r\n        \"sk\": \"Tvoja séria:\",\r\n        \"pl\": \"Twoja passa:\"\r\n    },\r\n\r\n    \"games_weekly_challange_title\" : { \r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Date prisa!\",\r\n        \"ru\": \"Поспеши!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_challange_text\" : {\r\n        \"en\": \"The more tasks you complete during the week, the higher your chance to win!\",\r\n        \"ua\": \"Чим більше завдань ви виконаєте за тиждень, тим вищий ваш шанс виграти!\",\r\n        \"de\": \"Je mehr Aufgaben du in der Woche erledigst, desto höher ist deine Gewinnchance!\",\r\n        \"es\": \"¡Cuantas más tareas completes durante la semana, mayor será tu oportunidad de ganar!\",\r\n        \"ru\": \"Чем больше заданий ты выполнишь за неделю, тем выше твой шанс на победу!\",\r\n        \"cs\": \"Čím více úkolů během týdne splníš, tím větší máš šanci na výhru!\",\r\n        \"sk\": \"Čím viac úloh za týždeň splníš, tým vyššia je tvoja šanca na výhru!\",\r\n        \"pl\": \"Im więcej zadań wykonasz w tygodniu, tym większa szansa na wygraną!\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"profile_guidebook\": {\r\n        \"en\": \"Guidebook & rules\",\r\n        \"ua\": \"Посібник та правила\",\r\n        \"de\": \"Leitfaden & Regeln\",\r\n        \"es\": \"Guía y reglas\",\r\n        \"ru\": \"Руководство и правила\",\r\n        \"cs\": \"Příručka a pravidla\",\r\n        \"sk\": \"Príručka a pravidlá\",\r\n        \"pl\": \"Poradnik i zasady\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n    \r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n    \r\n    //output\r\n\r\n    \"output_main_title\" :{\r\n        \"en\": \"Block Stars Withdrawal\",\r\n        \"ua\": \"Виведення Block Stars\",\r\n        \"de\": \"Block Stars Auszahlung\",\r\n        \"es\": \"Retiro de Block Stars\",\r\n        \"ru\": \"Вывод Block Stars\",\r\n        \"cs\": \"Výběr Block Stars\",\r\n        \"sk\": \"Výber Block Stars\",\r\n        \"pl\": \"Wypłata Block Stars\"\r\n    },\r\n\r\n    \"output_out_title\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_btn\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_label_1\": {\r\n        \"en\": \"Withdraw in-game coins from Block Stars to your Stars Bank account and use them.\",\r\n        \"ua\": \"Виводьте ігрові монети із Block Stars на акаунт Stars Bank та використовуйте їх. \",\r\n        \"de\": \"Ziehe Spielmünzen von Block Stars auf dein Stars Bank-Konto ab und verwende sie.\",\r\n        \"es\": \"Retira monedas del juego de Block Stars a tu cuenta de Stars Bank y úsalas.\",\r\n        \"ru\": \"Выводите игровые монеты из Block Stars на аккаунт Stars Bank и используйте их.\",\r\n        \"cs\": \"Vyber herní mince z Block Stars na účet Stars Bank a používej je.\",\r\n        \"sk\": \"Vyber herné mince z Block Stars na účet Stars Bank a použi ich.\",\r\n        \"pl\": \"Wypłać monety z gry Block Stars na konto Stars Bank i używaj ich.\"\r\n    },\r\n\r\n    \"out_bullet_1\" : {\r\n        \"en\": \"Withdraw available from 300 coins\",\r\n        \"ua\": \"Вивід доступний від 300 монет\",\r\n        \"de\": \"Výběr dostupný od 300 mincí\",\r\n        \"es\": \"Retiro disponible a partir de 300 monedas\",\r\n        \"ru\": \"Вывод доступен от 300 монет\",\r\n        \"cs\": \"Výběr dostupný od 300 mincí\",\r\n        \"sk\": \"Výber dostupný od 300 mincí\",\r\n        \"pl\": \"Wypłata dostępna od 300 monet\"\r\n    },\r\n\r\n    \"out_bullet_2\" : {\r\n        \"en\": \"Exchange rate: 1 Block Star = 1 Telegram Star\",\r\n        \"ua\": \"Курс обміну відбувається наступним чином: 1 Block Star = 1 Telegram Star.\",\r\n        \"de\": \"Wechselkurs: 1 Block Star = 1 Telegram Star\",\r\n        \"es\": \"Tasa de cambio: 1 Block Star = 1 Telegram Star\",\r\n        \"ru\": \"Курс обмена: 1 Block Star = 1 Telegram Star\",\r\n        \"cs\": \"Směnný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"sk\": \"Výmenný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"pl\": \"Kurs wymiany: 1 Block Star = 1 Telegram Star\"\r\n    },\r\n\r\n    \"out_bullet_3\" : {\r\n        \"en\": \"Make sure you have a Stars Bank account. If not, open Stars Bank in Telegram and start.\",\r\n        \"ua\": \"Переконайтеся, що у вас є акаунт Stars Bank. Якщо його ще немає, просто відкрийте Stars Bank у Telegram і запустіть.\",\r\n        \"de\": \"Stelle sicher, dass du ein Stars Bank-Konto hast. Wenn nicht, öffne Stars Bank in Telegram und starte.\",\r\n        \"es\": \"Asegúrate de tener una cuenta en Stars Bank. Si no la tienes, abre Stars Bank en Telegram y empieza.\",\r\n        \"ru\": \"Убедитесь, что у вас есть аккаунт Stars Bank. Если нет — откройте Stars Bank в Telegram и запустите.\",\r\n        \"cs\": \"Ujisti se, že máš účet ve Stars Bank. Pokud ho nemáš, otevři Stars Bank v Telegramu a spusť.\",\r\n        \"sk\": \"Uisti sa, že máš účet v Stars Bank. Ak nie, otvor Stars Bank v Telegrame a spusti.\",\r\n        \"pl\": \"Upewnij się, że masz konto w Stars Bank. Jeśli nie, otwórz Stars Bank w Telegramie i rozpocznij.\"\r\n    },\r\n\r\n    \"output_out_label_1\" :{\r\n        \"en\": \"Enter the amount you want to withdraw to your Stars Bank account.\",\r\n        \"ua\": \"Введіть бажану суму для виведення на акаунт Stars Bank.\",\r\n        \"de\": \"Gib den gewünschten Betrag ein, den du auf dein Stars Bank-Konto abheben möchtest.\",\r\n        \"es\": \"Introduce la cantidad que deseas retirar a tu cuenta de Stars Bank.\",\r\n        \"ru\": \"Введите желаемую сумму для вывода на аккаунт Stars Bank.\",\r\n        \"cs\": \"Zadej částku, kterou chceš vybrat na účet Stars Bank.\",\r\n        \"sk\": \"Zadaj sumu, ktorú chceš vybrať na účet Stars Bank.\",\r\n        \"pl\": \"Wpisz kwotę, którą chcesz wypłacić na konto Stars Bank.\"\r\n    },\r\n\r\n    \"output_out_label_2\" :{\r\n        \"en\": \"Minimum withdrawal amount is 500 coins\",\r\n        \"ua\": \"мінімальна сума виводу 500 монет\",\r\n        \"de\": \"Mindestbetrag für Auszahlung: 500 Münzen\",\r\n        \"es\": \"Cantidad mínima para retirar: 500 monedas\",\r\n        \"ru\": \"Минимальная сумма вывода: 500 монет\",\r\n        \"cs\": \"Minimální částka pro výběr: 500 mincí\",\r\n        \"sk\": \"Minimálna suma na výber: 500 mincí\",\r\n        \"pl\": \"Minimalna kwota wypłaty: 500 monet\"\r\n    },\r\n\r\n    \"output_out_btn\" :{\r\n        \"en\": \"Withdraw\",\r\n        \"ua\": \"Вивести\",\r\n        \"de\": \"Auszahlen\",\r\n        \"es\": \"Retirar\",\r\n        \"ru\": \"Вывести\",\r\n        \"cs\": \"Vybrat\",\r\n        \"sk\": \"Vybrať\",\r\n        \"pl\": \"Wypłać\"\r\n    },\r\n\r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, setDesignResolution, starsToDollars} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public preloadInApp_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867075({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OutputLayer extends BaseLayer {\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    labelCoinsAmount: cc.Label = null;\r\n    \r\n    btn_next: cc.Node = null\r\n    btn_out: cc.Node = null\r\n    btn_close_out: cc.Node = null\r\n    \r\n    panel_main: cc.Node = null\r\n    panel_out: cc.Node = null\r\n\r\n    edit_box: cc.EditBox = null;\r\n   \r\n\r\n    onLoad() {\r\n        this.panel_main = cc.find('main', this.node)\r\n        this.panel_out = cc.find('out', this.node)\r\n\r\n        this.labelCoinsAmount = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n        this.edit_box = cc.find('edit_box', this.panel_out).getComponent(cc.EditBox)\r\n\r\n        this.btn_close_out = cc.find('btn_close', this.node)\r\n        this.btn_next = cc.find('btn_start', this.panel_main)\r\n        this.btn_out = cc.find('btn_start', this.panel_out)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btn_close_out.on('click', this.onCloseOutClick, this)\r\n        this.btn_next.on('click', this.onNextClick, this)\r\n        this.panel_out.on('click', this.onOutClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n\r\n        if(DataManager.instance.userData){\r\n            this.edit_box.string = this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n   \r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onCloseOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n    }\r\n\r\n    onNextClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = false;\r\n        this.panel_out.active = true;\r\n    }\r\n\r\n    onOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo\r\n        //backend request\r\n        //open wallet app\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n    btnGuidebookRules: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnGuidebookRules = cc.find('main/btns_group_2/btn_guidebook', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.on('click', this.onGuidebookClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.off('click', this.onGuidebookClick, this)\r\n\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onGuidebookClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkGuidebook();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Richads')\r\nexport class Richads {\r\n    private static _instance: Richads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Richads {\r\n        if (!Richads._instance) {\r\n            Richads._instance = new Richads();\r\n        }\r\n        return Richads._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).TelegramAdsController.triggerNativeNotification(true);  \r\n    }\r\n}","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n        \r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HourlyChallangeItem from \"../ui/HourlyChallangeItem\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    \r\n    info_popup: cc.Node = null\r\n\r\n    week_tasks_bar: cc.Node = null\r\n    week_tasks_bar_base: cc.Node = null\r\n    week_tasks_bar_streak: cc.Node = null\r\n\r\n    week_tasks_bar_fill: cc.Sprite = null;\r\n    week_tasks_bar_amount: cc.Label = null;\r\n    week_tasks_bar_streak_amount: cc.Label = null;\r\n    \r\n    info_popup_tasks_fill: cc.Sprite = null;\r\n    info_popup_tasks_amount: cc.Label = null;\r\n    info_popup_streak: cc.Node = null;\r\n    info_popup_streak_amount: cc.Label = null;\r\n    info_popup_timeLeft: cc.Label = null;\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        //bottom\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnOutput.on('click', this.onOutputClick, this)\r\n\r\n        //screens\r\n        this.info_popup = cc.find('info_popup', this.node)\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        //content -- tasks\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        //week task bar\r\n        this.week_tasks_bar = cc.find('main/tasks_weekly', this.dailyPanel)\r\n        this.week_tasks_bar_base = cc.find('base', this.week_tasks_bar)\r\n        this.week_tasks_bar_streak = cc.find('streak', this.week_tasks_bar)\r\n\r\n        this.week_tasks_bar_fill = cc.find('fill_bar/fill', this.week_tasks_bar_base).getComponent(cc.Sprite)\r\n        this.week_tasks_bar_amount = cc.find('amount', this.week_tasks_bar_base).getComponent(cc.Label)\r\n        this.week_tasks_bar_streak_amount = cc.find('layout/label', this.week_tasks_bar_streak).getComponent(cc.Label)\r\n\r\n        //info popup\r\n        this.info_popup_tasks_fill = cc.find('panel/games_weekly/fill_bar/fill', this.info_popup).getComponent(cc.Sprite)\r\n        this.info_popup_tasks_amount = cc.find('panel/games_weekly/amount', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_streak = cc.find('panel/streak', this.info_popup)\r\n        this.info_popup_streak_amount = cc.find('panel/streak/label', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_timeLeft = cc.find('panel/bottom/time_text', this.info_popup).getComponent(cc.Label)\r\n\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info_popup)\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.on('click', this.openInfoPopupClick, this)\r\n        this.btnCloseInfo.on('click', this.closeInfoPopupClick, this)\r\n\r\n\r\n        this.setWeeklyAmount(5,14);\r\n        this.setStreakAmount(0);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnOutput.off('click', this.onOutputClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.off('click', this.openInfoPopupClick, this)\r\n\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            //this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.info_popup_timeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.week_tasks_bar_amount.string = this.info_popup_tasks_amount.string = `${played}/${target}`\r\n        this.week_tasks_bar_fill.fillRange = this.info_popup_tasks_fill.fillRange = fillRange;\r\n    }\r\n\r\n    setStreakAmount( days : number){\r\n        this.week_tasks_bar_streak_amount.string = `x${days}`;\r\n        this.info_popup_streak_amount.string = `streak x${days}`;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const hourly_challenge_item = poolManager.getNode(`task_item_hourly_challenge`, this.dailyPanelContent).getComponent(HourlyChallangeItem);\r\n        hourly_challenge_item.init();\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    openInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = true;\r\n    }\r\n\r\n    closeInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = false;\r\n    }\r\n\r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLinkGuidebook(){\r\n        this.openLink(\"https://telegram.org\")\r\n    }\r\n\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToHourSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://6829-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}