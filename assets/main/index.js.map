{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","call","name","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","length","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","Utils_1","Monetag_1","AuthController_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","MonetagController","showFullscreenAdRewarded","adWathcedSuccesfully","showFullscreenAdRewarded_2","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","Date","now","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","nextMonday","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_d","resetDefaults","decryptedData","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","generateGameToken","res","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","RUNING","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","HistoryItem","label_score","HistoryLayer","HISTORY","LEADERBOARD","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Index","view","setResizeCallback","responsive","requestFullscreen","enableClosingConfirmation","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","LeaderboardItem_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","user_position","you","position","leaderboard","leaderboardItem","user_id","setGamesWeeklyAmount","sum_points","update","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","getTelegramWebApp","onEvent","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867073","showFullscreenAd_2","show_8867075","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","SETTING","openLinkPrivacy","openLinkPartnership","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getSprite","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","DailyTaskItem_1","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","setDailyTasks","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkColor","lightColor","darkBlueText","darkGrayText","grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","days","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","value","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto, GetUserDailyTasksDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-06 10:21:53 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:05:15\r\n */\r\n\r\nimport { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.6\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(200 / this.scale,200 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                //show rewarded ad and update\r\n                this.showRewardedAd();\r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showRewardedAd(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.adWathcedSuccesfully();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    nextMonday: Date = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING;\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\t\t});\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n        \r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n        \r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        //this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\") ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.on('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.on('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.btnInfo.on('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.on('click', this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        //this.btnTabBest.off('click', this.onTabBestClick, this)\r\n        this.btnTabCombine.off('click', this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.btnInfo.off('click', this.onInfoClick, this)\r\n        this.btnCloseInfo.off('click', this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n\r\n                    const name = (player.username && player.username != \"\") ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n\r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-05 XNUM * 2:03:26 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-0XNUM XNUM * 2 + 1:30:35\r\n */\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70//78\r\nconst XNUM = 9 //8\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.closeLoseBuyShufflePopup();\r\n                this.closeBuySkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    show_ad_rewarded_skill_2_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\"\r\n    },    \r\n\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\"\r\n    },\r\n\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\"\r\n    },\r\n    \r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\"\r\n    },\r\n    \r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\"\r\n    },\r\n    \r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\"\r\n    },\r\n    \r\n    \r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\"\r\n    },\r\n\r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\"\r\n    },\r\n\r\n    \r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on('click', this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on('click', this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on('click', this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on('click', this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on('click', this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on('click', this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = new Date(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //(window as any).show_8867075().then(() => {\r\n        (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n           \r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        //(window as any).show_8867073().then(() => {\r\n        (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        //return (window as any).show_8867075().then(() => {\r\n        return (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        //return (window as any).show_8867073().then(() => {\r\n        return (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n        this.btnPartership.on('click', this.onPartnershipClick, this)\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n        this.btnPartership.off('click', this.onPartnershipClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            this.nameNode.getComponent(cc.Label).string = \"@\" + response.data.username;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n\r\n   \r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkColor = cc.color(75, 92, 129);\r\n        const lightColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkColor : lightColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const darkBlueText = cc.color(34, 47, 63);\r\n        const darkGrayText = cc.color(124, 133, 135);\r\n        const grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? grayText : darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? grayText : darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? grayText : darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = new Date();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = Date.now();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://8b6c-46-185-118-25.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}"],"file":"index.js"}