{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","packages/i18n/runtime-scripts/LanguageData.js","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","packages/i18n/runtime-scripts/LocalizedLabel.js","packages/i18n/runtime-scripts/LocalizedSprite.js","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/MoreLayer.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","packages/i18n/runtime-scripts/SpriteFrameSet.js","assets/scripts/StaticInstance.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","packages/i18n/runtime-scripts/polyglot.min.js","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorller","blockId","debugBannerType","showFullscreenAd","show","then","catch","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","ApiErrors_1","endpoint","params","response","status","data","handleError","error_1","post","console","log","error_2","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","Unauthorized","Forbidden","HttpError","message","[object Object]","super","name","ApiManager","getInstance","getData","url","fetch","ok","json","postData","payload","method","body","JSON","stringify","result","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","UserController","apiClient","getUser","getChannelMembership","TelegramWebApp","Instance","getTelegramUser","id","patchAd","number_of_ads","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","warn","createAvatarImage","parent","imgElement","style","position","width","height","left","top","once","removeChild","loadTextureFromImage","Texture2D","initWithElement","handleLoadedTexture","setTexture","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","opacity","setActive","bool","x","y","zIndex","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","parse","enc","Utf8","e","DailyTaskItem","label_name","label_reward","btn","task_done","task_not_done","fill","reward","setFill","fillRange","Button","Node","DataManager","mode","ENUM_GAME_MODE","SCORE","ENUM_GAME_STATUS","UNRUNING","loadingRate","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","score","scoreMax","historyData","gameCreatedAtDate","language","set","reset","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","localStorage","setItem","restore","storedData","getItem","_c","resetDefaults","decryptedData","Date","PoolManager_1","EffectManager","effect","options","effNode","getNode","Animation","anim","on","removeFromParent","ParticleSystem","resetSystem","ENUM_UI_TYPE","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","_i","length","forEach","clear","StaticInstance_1","AudioManager_1","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","onDestroy","toggleBannerAd","rendorMusic","rendorSound","onDisable","CLICK","StaticInstance","uiManager","toggle","EXIT","MAIN","MENU","fadeManager","fadeIn","gameManager","onGameStart","FadeManager","setFadeManager","seconds","to","call","fadeOut","Utils_1","AuthController_1","Level_1","ConfigLoader_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","now","userId","isOnline","SERVER_HTTP_ERROR","generateGameToken","GAME_SECRET_KEY","res","scheduleOnce","timestamp_2","removeAllChildren","RUNING","addEventListener","handleGameOffline","handleGameOnline","HistoryItem","label_score","toFixed","HistoryItem_1","HistoryLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","i","player","winning_amount","User","username","total_winning_amount","HISTORY","LEADERBOARD","TASKS","PROFILE","HttpErrorLayer","btnSupport","btnRefresh","tip","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","Monetag_1","Index","view","setResizeCallback","responsive","requestFullscreen","enableClosingConfirmation","MonetagController","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","gameanalytics","GameAnalytics","configureUserId","setEnabledInfoLog","initialize","GAME_ANALYTICS_KEY","GAME_ANALYTICS_SECRET","first_login","changeLanguage","language_code","apiClientFactory","API_URL","Accept","token","tries","getTelegramInitData","apiClientAuthorized","userController","delay","ms","setTimeout","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","viewRatio","Polyglot","polyInst","loadLanguageData","i18n","languages","initPolyglot","replace","phrases","allowMissing","curLang","module","inst","t","key","opt","updateSceneRenderers","rootNodes","director","getScene","children","allLocalizedLabels","labels","getComponentsInChildren","Array","allLocalizedSprites","_i2","sprites","_i3","updateSprite","LeaderboardItem","label_place","place","LeaderboardItem_1","LeaderboardLayer","youItem","btnWinners","btnFindMe","winners","winnersPanel","winnersContent","btnCloseWinners","onFindMeClick","onWinnersClick","onCloseWinnersClick","user_position","you","leaderboard","user_id","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","panelSkill","usedSkillsText","btnOpenSkills","btnCloseSkills","skill_confirm_popup_1","skill_confirm_popup_2","skill_confirm_popup_3","btnSkill_1","btnSkill_1_ad","btnSkill_2","btnSkill_3","btnSkill_1_confirm","btnSkill_2_confirm","btnSkill_3_confirm","btnSkill_1_decline","btnSkill_2_decline","btnSkill_3_decline","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","isTouchStarted","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","XNUM","blockComp","Math","floor","main","bonusesUsed","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","onSkillBombConfirmClick","onSkillShuffleConfirmClick","onClickHint","onClickHintClose","showRewardedAd_shuffle","openConfirmSkill_1","openConfirmSkill_2","openConfirmSkill_3","onSkillSelectConfirmClick","closeConfirmSkill_1","closeConfirmSkill_2","closeConfirmSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","setHistoryData","tryShowAdGameEnd","showFullscreenAdRewarded","doSkillShuffle","showFullscreenAdRewarded_2","showRewardedAd_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","responce","buyCoins","doCount","showVideoAd","getPlatform","gravity","bg_color","color","msg","SKILL_SHUFFLE","doSkillSelectNewBlock","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","openTelegramLinkChannel","LoadingLayer","loadfill","update","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","jsonLocalization","en","ua","de","es","ru","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_time_left_label","tasks_title","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","profile_title","profile_account_owner","profile_support","profile_privacy","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","Class","extends","editor","executeInEditMode","menu","properties","dataID","_dataID","val","SpriteFrameSet","inspector","spriteFrameSet","getSpriteFrameByLang","lang","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","getUTCRemainingTimeToEndOfWeek","getUTCRemainingTimeToEndOfWeekToSeconds","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","show_8867075","showFullscreenAd_2","show_8867073","UIScrollControl_1","MoreLayer","scrollNode","scrollItem","toggleCustomRowAd","isScrollToTop","size","ScrollView","scrollToTop","game","getSprite","hasEventListener","onItemClick","scroll","turnToApp","MORE","NoConnectionErrorLayer","NO_CONNECTION_ERROR","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","SETTING","openLinkPrivacy","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","max","assets","asset","getJson","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","windowHeight","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","info","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","text","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","TasksLayer","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","onTabDailyClick","onTabInviteClick","onInviteFriendClick","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ToastManager","_d","_e","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","scrollTo","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","getContentSize","setContentSize","_tempCount","H","scrollEvents","eventHandler","EventHandler","target","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","from","Uint8Array","map","padStart","join","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","minutes","hours","days","toLocaleString","timeZone","secret","score_points","onLine","WinLayer","btnNext","btnShare","onNextClick","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","l","m","getter","o","enumerable","Symbol","toStringTag","value","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","toISOString","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","split","line","trim","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","currentLocale","locale","u","f","VERSION","smart_count","_","chinese","german","french","russian","czech","polish","icelandic","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorller(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const adController = adsgram.init({\r\n            blockId: \"int-6303\",\r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.adController = adController;\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        //this.adController.show();\r\n\r\n\r\n        this.adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        if (!error.response) {\r\n            throw new HttpError(error.message)\r\n        } else if (error.response.status === 401) {\r\n            throw new Unauthorized(error.response.data);\r\n        } else if (error.response.status === 403) {\r\n            throw new Forbidden(error.response.data);\r\n        } else {\r\n            throw error;\r\n        }\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetUserAuthDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //user\r\n\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"winners/last-week\");\r\n    }\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n\r\n\r\n    static createAvatarImage(url: string, parent: cc.Node) {\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n    \r\n        // Attach to document\r\n        document.body.appendChild(imgElement);\r\n    \r\n        // Remove when not needed\r\n        parent.once('destroy', () => {\r\n            document.body.removeChild(imgElement);\r\n        });\r\n    };\r\n\r\n\r\n    static loadTextureFromImage(url: string, sprite: cc.Sprite){\r\n\r\n        const imgElement = document.createElement('img');\r\n        imgElement.src = url;\r\n        //imgElement.style.visibility = 'none';\r\n        imgElement.style.position = 'absolute';\r\n        imgElement.style.width = '100px'; // Adjust size as needed\r\n        imgElement.style.height = '100px';\r\n        imgElement.style.left = '50px';  // Adjust position as needed\r\n        imgElement.style.top = '50px';\r\n\r\n        imgElement.onload = () =>{\r\n            const texture = new cc.Texture2D();\r\n            texture.initWithElement(imgElement);\r\n            texture.handleLoadedTexture();\r\n    \r\n            // Step 3: Create a SpriteFrame from the Texture2D\r\n            const spriteFrame = new cc.SpriteFrame();\r\n            spriteFrame.setTexture(texture);\r\n    \r\n            // Step 4: Assign the SpriteFrame to the provided Sprite component\r\n            sprite.spriteFrame = spriteFrame;\r\n        }\r\n\r\n        imgElement.onerror = (error) => {\r\n            console.error(\"Failed to load image:\", error);\r\n        };\r\n\r\n    };\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-06 10:21:53 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:05:15\r\n */\r\n\r\nimport { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.45){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n        \r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(name: string, reward: number){\r\n        this.label_name.string = name;\r\n        this.label_reward.string = reward.toString();\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n\r\n        if(fill >= 1){\r\n            this.task_not_done.active = false;\r\n        }\r\n    }\r\n\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    config : any  = null\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        this.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    MORE = 'MoreLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = Date.now();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                if(isOnline()){\r\n                    generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                        const gameToken = res;\r\n                        UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                            //console.log(\"game ended token\", response)\r\n                        }).catch((error) => {\r\n                            console.error(\"Failed to end game:\", error);\r\n                            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                            return;\r\n                        });\r\n    \r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n                }\r\n                else{\r\n                    console.error(\"Failed to end game. You need to be connected to network\");\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                }\r\n\r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = Date.now();\r\n            var userId;\r\n            try{\r\n                userId =TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            generateGameToken(userId, timestamp, config.GAME_SECRET_KEY).then((res)=>{\r\n                const gameToken = res;\r\n                UserController.Instance?.postGameStart(gameToken, timestamp).then((response) => {\r\n                    console.log(\"game started succesfully\")\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to start game:\", error);\r\n                });\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Failed to start game:\", error);\r\n            });\r\n        }\r\n\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING;\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING;\r\n        await StaticInstance.fadeManager.fadeOut();\r\n\r\n        window.addEventListener(\"offline\", (e) => {\r\n           this.handleGameOffline();\r\n        });\r\n          \r\n        window.addEventListener(\"online\", (e) => {\r\n           this.handleGameOnline();\r\n        });  \r\n    }\r\n\r\n\r\n    handleGameOnline(){\r\n        console.log(\"online\");\r\n\r\n    }\r\n\r\n    handleGameOffline(){\r\n        console.log(\"offline\");\r\n\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then((response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, `@${player.User.username}`, player.points);\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n}\r\n","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","declare var gameanalytics: any;\r\nimport gameanalytics from  \"./modules/GameAnalytics-4.2.0.min\";\r\n\r\nimport { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\nimport { MonetagController } from './ads/monetag/Monetag';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA2Ui3cL&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1734611418&signature=P7lJWOsK2PksSyPhr815D8JbqnOupQHjgIqde0T73aY3Mdz3DBWgs6J7rCil-V1gqtWeWUBvsE8XN9TC569bBg&hash=b23f345fbae219c8443dd67ce29409d09aaae2e4dfe0d6c1a66679e8e407a81b\";\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n    onLoad() {\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n        this.responsive()\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\t\t});\r\n\r\n        // AdsGramController.Instance.init().then(res =>{\r\n        //     console.log(\"adsgram init succes: \", res.success);\r\n        //     AdsGramController.Instance.initAdsContorller();\r\n        // })\r\n\r\n        MonetagController.Instance.init().then(res =>{\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n    }\r\n\r\n    async start() {\r\n\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n\r\n        //ініціалізація API клієнта\r\n        \r\n        await this.initApiClient();\r\n\r\n\r\n        // Операції з UI\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true, () => {\r\n            DataManager.instance.loadingRate = 1\r\n        })\r\n\r\n       \r\n        UserController.Instance.getUser().then(response => {\r\n            // handle success\r\n            console.log(\"user succes\");\r\n\r\n            if (typeof gameanalytics !== \"undefined\") {\r\n                // Initialize GameAnalytics\r\n                gameanalytics.GameAnalytics.configureUserId(response.data.id);\r\n                gameanalytics.GameAnalytics.setEnabledInfoLog(true);\r\n                gameanalytics.GameAnalytics.initialize(configRes.GAME_ANALYTICS_KEY, configRes.GAME_ANALYTICS_SECRET);\r\n                console.log(\"GameAnalytics initialized\");\r\n            } else {\r\n                console.error(\"GameAnalytics not loaded!\");\r\n            }\r\n            \r\n            if(response.data.first_login){\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n            //console.log(response);\r\n        }).catch(error =>{\r\n            \r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n        });\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = response.points;\r\n        });\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        const setFitWidth = () => {\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n}\r\n","const Polyglot = require('polyglot.min');\n\nlet polyInst = null;\nif (!window.i18n) {\n    window.i18n = {\n        languages: {},\n        curLang:''\n    };\n}\n\nif (CC_EDITOR) {\n    Editor.Profile.load('profile://project/i18n.json', (err, profile) => {\n        window.i18n.curLang = profile.data['default_language'];\n        if (polyInst) {\n            let data = loadLanguageData(window.i18n.curLang) || {};\n            initPolyglot(data);\n        }\n    });\n}\n\nfunction loadLanguageData (language) {\n    return window.i18n.languages[language];\n}\n\nfunction initPolyglot (data) {\n    if (data) {\n        if (polyInst) {\n            polyInst.replace(data);\n        } else {\n            polyInst = new Polyglot({ phrases: data, allowMissing: true });\n        }\n    }\n}\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        if (language === window.i18n.curLang) {\n            return;\n        }\n        let data = loadLanguageData(language) || {};\n        window.i18n.curLang = language;\n        initPolyglot(data);\n        this.inst = polyInst;\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        if (polyInst) {\n            return polyInst.t(key, opt);\n        }\n    },\n\n    inst: polyInst,\n\n    updateSceneRenderers () { // very costly iterations\n        let rootNodes = cc.director.getScene().children;\n        // walk all nodes with localize label and update\n        let allLocalizedLabels = [];\n        for (let i = 0; i < rootNodes.length; ++i) {\n            let labels = rootNodes[i].getComponentsInChildren('LocalizedLabel');\n            Array.prototype.push.apply(allLocalizedLabels, labels);\n        }\n        for (let i = 0; i < allLocalizedLabels.length; ++i) {\n            let label = allLocalizedLabels[i];\n            if(!label.node.active)continue;\n            label.updateLabel();\n        }\n        // walk all nodes with localize sprite and update\n        let allLocalizedSprites = [];\n        for (let i = 0; i < rootNodes.length; ++i) {\n            let sprites = rootNodes[i].getComponentsInChildren('LocalizedSprite');\n            Array.prototype.push.apply(allLocalizedSprites, sprites);\n        }\n        for (let i = 0; i < allLocalizedSprites.length; ++i) {\n            let sprite = allLocalizedSprites[i];\n            if(!sprite.node.active)continue;\n            sprite.updateSprite(window.i18n.curLang);\n        }\n    }\n};","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string,  score: number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    winners: cc.Node = null\r\n    winnersPanel: cc.Node = null\r\n    winnersContent: cc.Node = null\r\n    btnCloseWinners: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n\r\n\r\n    onLoad() {\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnWinners = cc.find('btn_winners', this.node)\r\n        this.winners = cc.find('winners', this.node)\r\n        this.winnersPanel = cc.find('panel', this.winners)\r\n        this.btnCloseWinners = cc.find('btn_close', this.winnersPanel)\r\n\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.on('click', this.onFindMeClick, this)\r\n        this.btnWinners.on('click', this.onWinnersClick, this)\r\n        this.winnersPanel.on('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.on('click', this.onCloseWinnersClick, this)\r\n\r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnFindMe.off('click', this.onFindMeClick, this)\r\n        this.btnWinners.off('click', this.onWinnersClick, this)\r\n        this.winnersPanel.off('click', this.onCloseWinnersClick, this)\r\n        this.btnCloseWinners.off('click', this.onCloseWinnersClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.winners.active = false;\r\n\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLeaderboard().then((response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                youItem.init(you.position, `@${you.username}`, you.points);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    leaderboardItem.init(player.position, `@${player.username}`, player.points);\r\n                }\r\n            }\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        // AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        // this.winners.active = true;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n\r\n    onCloseWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.winners.active = false;\r\n    }\r\n    \r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-05 XNUM * 2:03:26 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-0XNUM XNUM * 2 + 1:30:35\r\n */\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { getDistance, isOnline, random, vibrate } from \"../Utils\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70//78\r\nconst XNUM = 9 //8\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    //ui\r\n    panelSkill: cc.Node = null\r\n    usedSkillsText: cc.Node = null\r\n\r\n    btnOpenSkills: cc.Node = null\r\n    btnCloseSkills: cc.Node = null\r\n\r\n    skill_confirm_popup_1: cc.Node = null\r\n    skill_confirm_popup_2: cc.Node = null\r\n    skill_confirm_popup_3: cc.Node = null\r\n\r\n    btnSkill_1: cc.Node = null\r\n    btnSkill_1_ad: cc.Node = null\r\n    btnSkill_2: cc.Node = null\r\n    btnSkill_3: cc.Node = null\r\n\r\n    btnSkill_1_confirm: cc.Node = null\r\n    btnSkill_2_confirm: cc.Node = null\r\n    btnSkill_3_confirm: cc.Node = null\r\n\r\n    btnSkill_1_decline: cc.Node = null\r\n    btnSkill_2_decline: cc.Node = null\r\n    btnSkill_3_decline: cc.Node = null\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current/num', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        this.initMainBlocks()\r\n\r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.panelSkill = cc.find('hints_popup', this.node)\r\n        this.usedSkillsText = cc.find('panel/used_hints/label', this.panelSkill)\r\n        this.btnOpenSkills = cc.find('btn_hint', this.node)\r\n        this.btnCloseSkills = cc.find('panel/btn_close', this.panelSkill)\r\n\r\n        this.btnSkill_1 = cc.find('panel/layout/btn_hint_1/buttons/btn_bonus', this.panelSkill)\r\n        this.btnSkill_1_ad = cc.find('panel/layout/btn_hint_1/buttons/btn_ad', this.panelSkill)\r\n        this.btnSkill_2 = cc.find('panel/layout/btn_hint_2/btn_bonus', this.panelSkill)\r\n        this.btnSkill_3 = cc.find('panel/layout/btn_hint_3/btn_bonus', this.panelSkill)\r\n\r\n        this.skill_confirm_popup_1 = cc.find('skill_confirm_popup_1', this.node)\r\n        this.skill_confirm_popup_2 = cc.find('skill_confirm_popup_2', this.node)\r\n        this.skill_confirm_popup_3 = cc.find('skill_confirm_popup_3', this.node)\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n\r\n        this.btnSkill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_1)\r\n        this.btnSkill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_2)\r\n        this.btnSkill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.skill_confirm_popup_3)\r\n\r\n        this.btnSkill_1_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_1)\r\n        this.btnSkill_2_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_2)\r\n        this.btnSkill_3_decline = cc.find('panel/layout/buttons/btn_no', this.skill_confirm_popup_3)\r\n\r\n\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            this.skills.getChildByName('skill_bomb').on('click', this.onSkillBombConfirmClick, this)\r\n            this.skills.getChildByName('skill_shuffle').on('click', this.onSkillShuffleConfirmClick, this)\r\n\r\n            this.btnOpenSkills.on('click', this.onClickHint, this)\r\n            this.btnCloseSkills.on('click', this.onClickHintClose, this)\r\n\r\n            this.btnSkill_1_ad.on('click', this.showRewardedAd_shuffle, this)\r\n            this.btnSkill_1.on('click', this.openConfirmSkill_1, this)\r\n            this.btnSkill_2.on('click', this.openConfirmSkill_2, this)\r\n            this.btnSkill_3.on('click', this.openConfirmSkill_3, this)\r\n            \r\n            this.btnSkill_1_confirm.on('click', this.onSkillShuffleConfirmClick, this)\r\n            this.btnSkill_2_confirm.on('click', this.onSkillBombConfirmClick, this)\r\n            this.btnSkill_3_confirm.on('click', this.onSkillSelectConfirmClick, this)\r\n\r\n            this.btnSkill_1_decline.on('click', this.closeConfirmSkill_1, this)\r\n            this.btnSkill_2_decline.on('click', this.closeConfirmSkill_2, this)\r\n            this.btnSkill_3_decline.on('click', this.closeConfirmSkill_3, this)\r\n\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n        } else {\r\n            this.skills.getChildByName('skill_bomb').off('click', this.onSkillBombConfirmClick, this)\r\n            this.skills.getChildByName('skill_shuffle').off('click', this.onSkillShuffleConfirmClick, this)\r\n\r\n            this.btnOpenSkills.off('click', this.onClickHint, this)\r\n            this.btnCloseSkills.off('click', this.onClickHintClose, this)\r\n           \r\n            this.btnSkill_1_ad.off('click', this.showRewardedAd_shuffle, this)\r\n\r\n            this.btnSkill_1.off('click', this.openConfirmSkill_1, this)\r\n            this.btnSkill_2.off('click', this.openConfirmSkill_2, this)\r\n            this.btnSkill_3.off('click', this.openConfirmSkill_3, this)\r\n\r\n            this.btnSkill_1_confirm.off('click', this.onSkillShuffleConfirmClick, this)\r\n            this.btnSkill_2_confirm.off('click', this.onSkillBombConfirmClick, this)\r\n            this.btnSkill_3_confirm.off('click', this.onSkillSelectConfirmClick, this)\r\n\r\n            this.btnSkill_1_decline.off('click', this.closeConfirmSkill_1, this)\r\n            this.btnSkill_2_decline.off('click', this.closeConfirmSkill_2, this)\r\n            this.btnSkill_3_decline.off('click', this.closeConfirmSkill_3, this)\r\n\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     //AdsGramController.Instance.showFullscreenAd();\r\n        //     MonetagController.Instance.showFullscreenAd();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n         //AdsGramController.Instance.showFullscreenAd();\r\n         MonetagController.Instance.showFullscreenAd();\r\n    }\r\n\r\n    showRewardedAd_shuffle(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.onClickHintClose();\r\n            this.closeConfirmSkill_1();\r\n            this.doSkillShuffle();\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n\r\n            MonetagController.Instance.showFullscreenAdRewarded_2()\r\n            .then(() => {\r\n                // Ad successfully watched, resolve the reward logic here\r\n                console.log('Ad successfully watched!');\r\n                this.onClickHintClose();\r\n                this.closeConfirmSkill_1();\r\n                this.doSkillShuffle();\r\n            })\r\n            .catch((error) => {\r\n                // Ad failed to show or was skipped, handle rejection\r\n                console.error('Ad 2 failed or was skipped:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    showRewardedAd_bomb(){\r\n        MonetagController.Instance.showFullscreenAdRewarded()\r\n        .then(() => {\r\n            // Ad successfully watched, resolve the reward logic here\r\n            console.log('Ad successfully watched!');\r\n            this.onClickHintClose();\r\n            this.closeConfirmSkill_2();\r\n            this.doSkillBomb(false);\r\n        })\r\n        .catch((error) => {\r\n            // Ad failed to show or was skipped, handle rejection\r\n            console.error('Ad failed or was skipped:', error);\r\n            this.doGameOver();\r\n        });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n                this.doGameOver();\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    onClickHint(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panelSkill.active = true;\r\n        this.usedSkillsText.getComponent(cc.Label).string = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    onClickHintClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panelSkill.active = false;\r\n    }\r\n\r\n    openConfirmSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_1.active = true;\r\n        }\r\n    }\r\n\r\n    openConfirmSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_2.active = true;\r\n        }\r\n    }\r\n\r\n    openConfirmSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount < MAX_SKILLS){\r\n            this.skill_confirm_popup_3.active = true;\r\n        }\r\n    }\r\n\r\n    closeConfirmSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_1.active = false;\r\n    }\r\n\r\n    closeConfirmSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_2.active = false;\r\n    }\r\n\r\n    closeConfirmSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.skill_confirm_popup_3.active = false;\r\n    }\r\n\r\n    onSkillBombConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_2();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillBomb();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    onSkillShuffleConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_1();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillShuffle();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    onSkillSelectConfirmClick() {\r\n        this.onClickHintClose();\r\n        this.closeConfirmSkill_3();\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n\r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.showRewardedAd_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.onClickHintClose();\r\n                this.closeConfirmSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    onEnable(){}\r\n\r\n    onDisable(){}\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU)){\r\n                    this.hide()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\"\r\n    },\r\n\r\n    //general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\"\r\n    },\r\n\r\n    //main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    //settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\"\r\n    },\r\n\r\n    //settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\"\r\n    },\r\n\r\n    //leaderboard\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\"\r\n    },\r\n    \r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\"\r\n    },\r\n    \r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\"\r\n    },\r\n    \r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players will divide the Stars pool into their wallets!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців розділять пул Stars на свій гаманець!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler den Stars-Pool für ihre Geldbörsen!\",\r\n        \"es\": \"Esta semana, ¡los 5 mejores jugadores se repartirán el fondo de Estrellas para sus carteras!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков разделят пул Stars на свои кошельки!\"\r\n    },\r\n    \r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\"\r\n    },\r\n    \r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (50%)\",\r\n        \"ua\": \"1 місце (50%)\",\r\n        \"de\": \"1. Platz (50%)\",\r\n        \"es\": \"1er lugar (50%)\",\r\n        \"ru\": \"1 место (50%)\"\r\n    },\r\n    \r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (30%)\",\r\n        \"ua\": \"2 місце (30%)\",\r\n        \"de\": \"2. Platz (30%)\",\r\n        \"es\": \"2do lugar (30%)\",\r\n        \"ru\": \"2 место (30%)\"\r\n    },\r\n    \r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\"\r\n    },\r\n    \r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (3%)\",\r\n        \"ua\": \"4 місце (3%)\",\r\n        \"de\": \"4. Platz (3%)\",\r\n        \"es\": \"4to lugar (3%)\",\r\n        \"ru\": \"4 место (3%)\"\r\n    },\r\n    \r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (2%)\",\r\n        \"ua\": \"5 місце (2%)\",\r\n        \"de\": \"5. Platz (2%)\",\r\n        \"es\": \"5to lugar (2%)\",\r\n        \"ru\": \"5 место (2%)\"\r\n    },\r\n    \r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \"\r\n    },\r\n    \r\n\r\n    //tasks\r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\"\r\n    },\r\n    \r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\"\r\n    },\r\n    \r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \"\r\n    },\r\n    \r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\"\r\n    },\r\n    \r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\"\r\n    },\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"Победители\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 и продолжить игру!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"СПроизошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\"\r\n    },\r\n    \r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\"\r\n    },\r\n    \r\n\r\n};\r\n","const i18n = require('LanguageData');\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nfunction debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true,\n        menu: 'i18n/LocalizedLabel'\n    },\n\n    properties: {\n        dataID: {\n            get () {\n                return this._dataID;\n            },\n            set (val) {\n                if (this._dataID !== val) {\n                    this._dataID = val;\n                    if (CC_EDITOR) {\n                        this._debouncedUpdateLabel();\n                    } else {\n                        this.updateLabel();\n                    }\n                }\n            }\n        },\n        _dataID: ''\n    },\n    \n    onLoad () {\n        if(CC_EDITOR) {\n            this._debouncedUpdateLabel = debounce(this.updateLabel, 200);\n        }\n        if (!i18n.inst) {\n            i18n.init();\n        }\n        // cc.log('dataID: ' + this.dataID + ' value: ' + i18n.t(this.dataID));\n        this.fetchRender();\n    },\n\n    fetchRender () {\n        let label = this.getComponent(cc.Label);\n        if (label) {\n            this.label = label;\n            this.updateLabel();\n            return;\n        } \n    },\n\n    updateLabel () {\n        if (!this.label) {\n            cc.error('Failed to update localized label, label component is invalid!');\n            return;\n        }\n        let localizedString = i18n.t(this.dataID);\n        if (localizedString) {\n            this.label.string = i18n.t(this.dataID);\n        }\n    }\n});","const SpriteFrameSet = require('SpriteFrameSet');\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        executeInEditMode: true,\n        inspector: 'packages://i18n/inspector/localized-sprite.js',\n        menu: 'i18n/LocalizedSprite'\n    },\n\n    properties: {\n        spriteFrameSet: {\n            default: [],\n            type: SpriteFrameSet\n        }\n    },\n\n    onLoad () {\n        this.fetchRender();\n    },\n\n    fetchRender () {\n        let sprite = this.getComponent(cc.Sprite);\n        if (sprite) {\n            this.sprite = sprite;\n            this.updateSprite(window.i18n.curLang);\n            return;\n        }\n    },\n\n    getSpriteFrameByLang (lang) {\n        for (let i = 0; i < this.spriteFrameSet.length; ++i) {\n            if (this.spriteFrameSet[i].language === lang) {\n                return this.spriteFrameSet[i].spriteFrame;\n            }\n        }\n    },\n\n    updateSprite (language) {\n        if (!this.sprite) {\n            cc.error('Failed to update localized sprite, sprite component is invalid!');\n            return;\n        }\n\n        let spriteFrame = this.getSpriteFrameByLang(language);\n\n        if (!spriteFrame && this.spriteFrameSet[0]) {\n            spriteFrame = this.spriteFrameSet[0].spriteFrame;\n        }\n\n        this.sprite.spriteFrame = spriteFrame;\n    }\n});","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getUTCRemainingTimeToEndOfWeek, getUTCRemainingTimeToEndOfWeekToSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        this.btnStart.on('click', this.onStartClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n        this.btnShop.on('click', this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.on('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on('click', this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off('click', this.onStartClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n        this.btnShop.off('click', this.onShopClick, this)\r\n\r\n        \r\n        this.btnGiveaway.off('click', this.onGiveawayClick, this)\r\n        this.giveawayPanel.off('click', this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off('click', this.onCloseGiveawayClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        this.labelGiveawayTimeLeft.string = getUTCRemainingTimeToEndOfWeek();\r\n        this.labelGiveawayPanelTimeLeft.string = getUTCRemainingTimeToEndOfWeekToSeconds();\r\n    }\r\n\r\n    async onStartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public showFullscreenAd(){\r\n        (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            UserController.Instance?.patchAd();\r\n        }).catch(()=>{\r\n            this.showFullscreenAd_2();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAd_2(){\r\n        (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            UserController.Instance?.patchAd();\r\n        })\r\n    }\r\n    \r\n    public showFullscreenAdRewarded() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            UserController.Instance?.patchAd();\r\n        })\r\n    }\r\n\r\n    public showFullscreenAdRewarded_2() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            // You need to add your user reward function here, which will be executed after the user watches the ad.\r\n            // For more details, please refer to the detailed instructions.\r\n            console.log('You have seen ad ad!');\r\n            UserController.Instance?.patchAd();\r\n        })\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport UIScrollControl from \"../plugins/UIScrollControl\";\r\nimport ResourceManager from \"../manager/ResourceManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MoreLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    scrollNode: cc.Node = null\r\n    scrollItem: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.scrollNode = cc.find('scroll', this.panel)\r\n        this.scrollItem = PoolManager.instance.getNode('MoreItem')\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        this.rendor()\r\n        SdkManager.instance.toggleCustomRowAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleCustomRowAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        const games = DataManager.instance.games\r\n        let isScrollToTop = false\r\n        this.scrollNode.getComponent(UIScrollControl).init(this.scrollItem, games.length, cc.size(500, 110), 0, (node: cc.Node, index: number) => {\r\n            if (!isScrollToTop) {\r\n                isScrollToTop = true\r\n                this.scrollNode.getComponent(cc.ScrollView).scrollToTop()\r\n            }\r\n            const game = games[index]\r\n            node.getChildByName('icon').getComponent(cc.Sprite).spriteFrame = ResourceManager.instance.getSprite(`${game.icon}`)\r\n            node.getChildByName('title').getComponent(cc.Label).string = `${game.title}`\r\n            if (!node.hasEventListener('click')) {\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            } else {\r\n                node.off('click')\r\n                node.on('click', () => { this.onItemClick(game) }, this)\r\n            }\r\n        }, (scroll: cc.ScrollView) => {\r\n            // scroll.scrollToOffset(cc.v2(0, maxLevel * 110 - (scroll.node.height / 2)), 0.05)\r\n            scroll.scrollToTop()\r\n        })\r\n    }\r\n\r\n    onItemClick(item: any) {\r\n        let url: string = ''\r\n        if (typeof window['wx'] == 'undefined') {\r\n            url = item.url\r\n        } else {\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n            url = item.appid\r\n        }\r\n        if (url) SdkManager.instance.turnToApp(url)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MORE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on('click', this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on('click', this.onSettingsClick, this)\r\n        this.btnTutorial.on('click', this.onTutorialClick, this)\r\n        this.btnTryGame.on('click', this.onTryGameClick, this)\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnPrivacy.on('click', this.onPrivacyClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n        //AvatarLoader.loadAvatar(\"user.photo_url\", this.avatarNode);\r\n        //AvatarLoader.loadTextureFromImage(\"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\", this.avatarNode.getComponent(cc.Sprite));\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off('click', this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off('click', this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off('click', this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off('click', this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off('click', this.onSettingsClick, this)\r\n        this.btnTutorial.off('click', this.onTutorialClick, this)\r\n        this.btnTryGame.off('click', this.onTryGameClick, this)\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnPrivacy.off('click', this.onPrivacyClick, this)\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            this.nameNode.getComponent(cc.Label).string = \"@\" + response.data.username;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on('click', this.onBackClick, this)\r\n        this.btn_shop_1.on('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off('click', this.onBackClick, this)\r\n        this.btn_shop_1.off('click', this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off('click', this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off('click', this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","const SpriteFrameSet = cc.Class({\n    name: 'SpriteFrameSet',\n    properties: {\n        language: '',\n        spriteFrame: cc.SpriteFrame\n    }\n});\n\nmodule.exports = SpriteFrameSet;","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n\r\n        this.btnMain.on('click', this.onMainClick, this)\r\n        this.btnLeaderboard.on('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.on('click', this.onTasksClick, this)\r\n        this.btnProfile.on('click', this.onProfileClick, this)\r\n\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.on('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off('click', this.onMainClick, this)\r\n        this.btnLeaderboard.off('click', this.onLeaderboardClick, this)\r\n        this.btnTasks.off('click', this.onTasksClick, this)\r\n        this.btnProfile.off('click', this.onProfileClick, this)\r\n\r\n        this.btnDailyTab.off('click', this.onTabDailyClick, this)\r\n        this.btnInviteTab.off('click', this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off('click', this.onInviteFriendClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    // setSettingStyle(index: number = 0){\r\n    //     const layer: SettingLayer = this.uiMap.get(ENUM_UI_TYPE.SETTING) as SettingLayer\r\n    //     layer?.setStyle(index)\r\n    // }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport * as config from '../config.js';\r\n\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateGameToken(userId: number, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axios\"] = factory();\n\telse\n\t\troot[\"axios\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./index.js\":\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\n\n/***/ }),\n\n/***/ \"./lib/adapters/xhr.js\":\n/*!*****************************!*\\\n  !*** ./lib/adapters/xhr.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/axios.js\":\n/*!**********************!*\\\n  !*** ./lib/axios.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/Cancel.js\":\n/*!******************************!*\\\n  !*** ./lib/cancel/Cancel.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/CancelToken.js\":\n/*!***********************************!*\\\n  !*** ./lib/cancel/CancelToken.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\n\n/***/ }),\n\n/***/ \"./lib/cancel/isCancel.js\":\n/*!********************************!*\\\n  !*** ./lib/cancel/isCancel.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/Axios.js\":\n/*!***************************!*\\\n  !*** ./lib/core/Axios.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/InterceptorManager.js\":\n/*!****************************************!*\\\n  !*** ./lib/core/InterceptorManager.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/buildFullPath.js\":\n/*!***********************************!*\\\n  !*** ./lib/core/buildFullPath.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/createError.js\":\n/*!*********************************!*\\\n  !*** ./lib/core/createError.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/dispatchRequest.js\":\n/*!*************************************!*\\\n  !*** ./lib/core/dispatchRequest.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/enhanceError.js\":\n/*!**********************************!*\\\n  !*** ./lib/core/enhanceError.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/mergeConfig.js\":\n/*!*********************************!*\\\n  !*** ./lib/core/mergeConfig.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/settle.js\":\n/*!****************************!*\\\n  !*** ./lib/core/settle.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/core/transformData.js\":\n/*!***********************************!*\\\n  !*** ./lib/core/transformData.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/defaults.js\":\n/*!*************************!*\\\n  !*** ./lib/defaults.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/bind.js\":\n/*!*****************************!*\\\n  !*** ./lib/helpers/bind.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/buildURL.js\":\n/*!*********************************!*\\\n  !*** ./lib/helpers/buildURL.js ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/combineURLs.js\":\n/*!************************************!*\\\n  !*** ./lib/helpers/combineURLs.js ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/cookies.js\":\n/*!********************************!*\\\n  !*** ./lib/helpers/cookies.js ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\n/*!**************************************!*\\\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isAxiosError.js\":\n/*!*************************************!*\\\n  !*** ./lib/helpers/isAxiosError.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\n/*!****************************************!*\\\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\n/*!********************************************!*\\\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/parseHeaders.js\":\n/*!*************************************!*\\\n  !*** ./lib/helpers/parseHeaders.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/spread.js\":\n/*!*******************************!*\\\n  !*** ./lib/helpers/spread.js ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/helpers/validator.js\":\n/*!**********************************!*\\\n  !*** ./lib/helpers/validator.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./lib/utils.js\":\n/*!**********************!*\\\n  !*** ./lib/utils.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    //\"API_URL\" : \"https://0580-176-8-143-190.ngrok-free.app/api/\",\r\n    \"API_URL\" : \"https://block-stars.tgplay.games:8443/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","//     (c) 2012 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documention:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n(function(e,t){typeof define==\"function\"&&define.amd?define([],function(){return t(e)}):typeof exports==\"object\"?module.exports=t(e):e.Polyglot=t(e)})(this,function(e){\"use strict\";function t(e){e=e||{},this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||\"en\",this.allowMissing=!!e.allowMissing,this.warn=e.warn||c}function s(e){var t,n,r,i={};for(t in e)if(e.hasOwnProperty(t)){n=e[t];for(r in n)i[n[r]]=t}return i}function o(e){var t=/^\\s+|\\s+$/g;return e.replace(t,\"\")}function u(e,t,r){var i,s,u;return r!=null&&e?(s=e.split(n),u=s[f(t,r)]||s[0],i=o(u)):i=e,i}function a(e){var t=s(i);return t[e]||t.en}function f(e,t){return r[a(e)](t)}function l(e,t){for(var n in t)n!==\"_\"&&t.hasOwnProperty(n)&&(e=e.replace(new RegExp(\"%\\\\{\"+n+\"\\\\}\",\"g\"),t[n]));return e}function c(t){e.console&&e.console.warn&&e.console.warn(\"WARNING: \"+t)}function h(e){var t={};for(var n in e)t[n]=e[n];return t}t.VERSION=\"0.4.3\",t.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},t.prototype.extend=function(e,t){var n;for(var r in e)e.hasOwnProperty(r)&&(n=e[r],t&&(r=t+\".\"+r),typeof n==\"object\"?this.extend(n,r):this.phrases[r]=n)},t.prototype.clear=function(){this.phrases={}},t.prototype.replace=function(e){this.clear(),this.extend(e)},t.prototype.t=function(e,t){var n,r;return t=t==null?{}:t,typeof t==\"number\"&&(t={smart_count:t}),typeof this.phrases[e]==\"string\"?n=this.phrases[e]:typeof t._==\"string\"?n=t._:this.allowMissing?n=e:(this.warn('Missing translation for key: \"'+e+'\"'),r=e),typeof n==\"string\"&&(t=h(t),r=u(n,this.currentLocale,t.smart_count),r=l(r,t)),r},t.prototype.has=function(e){return e in this.phrases};var n=\"||||\",r={chinese:function(e){return 0},german:function(e){return e!==1?1:0},french:function(e){return e>1?1:0},russian:function(e){return e%10===1&&e%100!==11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},czech:function(e){return e===1?0:e>=2&&e<=4?1:2},polish:function(e){return e===1?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!==1||e%100===11?1:0}},i={chinese:[\"fa\",\"id\",\"ja\",\"ko\",\"lo\",\"ms\",\"th\",\"tr\",\"zh\"],german:[\"da\",\"de\",\"en\",\"es\",\"fi\",\"el\",\"he\",\"hu\",\"it\",\"nl\",\"no\",\"pt\",\"sv\"],french:[\"fr\",\"tl\",\"pt-br\"],russian:[\"hr\",\"ru\"],czech:[\"cs\"],polish:[\"pl\"],icelandic:[\"is\"]};return t});","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}"],"file":"index.js"}