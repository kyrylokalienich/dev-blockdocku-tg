{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManagerForBank.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/api/controllers/AuthController.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/ui/HourlyChallangeItem.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/layer/OutputLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/ads/richads/Richads.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/ads/tads/Tads.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/constants/prize-pool.const.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AdsGram_1","Monetag_1","Onclicka_1","Richads_1","AdsManagerForBank","currentProviderIndex","viewData","day","dayCount","hour","hourCount","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial_Timeout","showRewarded_Interstitial","requiresPreload","richads","onclicka","adsGram","tads","AdsManagerForBank_1","MonetagController","Instance","Onclicka","Richads","res","warn","error_1","loadViewData","showAd_Rewarded_Intestitial","canShowAd","maxAttempts","length","attempts","provider","tryShowAdFromProvider","patchAd","updateViewData","call","error_2","now","Date","today","toISOString","split","currentHour","getHours","saveViewData","json","localStorage","getItem","JSON","parse","e","setItem","stringify","Utils_1","AuthController_1","AdsManager","inApp_providers","preloadInApp_Interstitial_Timeout","showInApp_Interstitial","AdsManager_1","_i","showAd_InApp_Intestitial","setDesignResolution","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","postData","payload","method","body","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","TelegramMiniApp_1","apiClient","getTime","getUser","getChannelMembership","TelegramWebApp","getTelegramUser","id","number_of_ads","getUserDailyTasks","patchDailyTasksIncrement","getLastHourLeader","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","coins_amount","comission_amount","amount_stars","commission","type","postBonusTransaction","transactionType","getLeaderboard","getSumPointsLeaderboard","getLastWinners","getSumPointsLastWinners","getCurrentPrizePool","getLastWeekPrizePool","getGames","getGamesMaxPoints","getGames500_count","getGames250_count","postGameStart","gameToken","timeStamp","game_token","timestamp","toString","postGameFinish","scorePoints","points","postInvoiceStars","buyAmount","amount","postInvoicePremium","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","enc","Utf8","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","reward","dto","getRewardSprite","sub_tasks","completed","target","isCompleted","i","target_amount","setCompleted","setFill","fillRange","StaticInstance_1","AudioManager_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","task_id","done_amount","showAmount","interactable","on","onButtonClicked","onDestroy","CLICK","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","StaticInstance","fadeManager","fadeIn","uiManager","toggle","ENUM_UI_TYPE","TASKS","MAIN","score","gameManager","onGameStart","getPatchTaskDto","updateTasks","getLayerInstance","fetchDailyTasks","task","userId","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","Node","DataManager","userData","userTasks","lastHourLeader","nextMonday","prizePoolWinningAmount","serverTimestamp","serverTimeOffsetMiliseconds","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","encryptedData","encrypt","hmac","HmacSHA256","restore","storedData","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","PoolManager_1","EffectManager","effect","parent","options","effNode","getNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","content","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","off","eventArr","findIndex","item","splice","emit","forEach","clear","Baselayer_1","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnClose","btnMusic","btnSound","find","onSubmitClick","onRestartClick","onCloseClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","onDisable","EXIT","MENU","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","getServerTimestampNow","generateGameToken","SERVER_HTTP_ERROR","scheduleOnce","removeAllChildren","HistoryItem_1","HistoryCombinedLayer","totalWinningPoolLabel","btnMain","btnLeaderboard","btnTasks","btnProfile","btnOutput","EventType","TOUCH_START","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","onOutputClick","contentNode","poolManager","players","sort","a","b","destroyAllChildren","player","winning_amount","User","username","first_name","delay","total_winning_amount","toFixed","HISTORY_COMBINED","LEADERBOARD_COMBINED","PROFILE","LEADERBOARD","OUTPUT","HistoryItem","label_score","HistoryLayer","HISTORY","HourlyChallangeItem","label_time","setTestData","setFromCache","fetchFromServer","update","nextHour","getNextHourDate","getRemainingTimeToHourSeconds","setMinutes","setHours","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","OutputLayer_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","responsive","view","setResizeCallback","addEventListener","activeElement","tagName","preventDefault","passive","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","timeResponce","serverDate","localDate","timeDiffMiliseconds","getServerTimeNow","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","block_resize","LeaderboardItem_1","prize_pool_const_1","LeaderboardCombinedLayer","youItem","btnTabBest","btnTabCombine","btnWinners","btnInfo","btnCloseInfo","btnFindMe","info","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","onWinnersClick","onInfoClick","onInfoCloseClick","winningAmount","WINNING_AMOUNT_ADDITIONAL_PRIZES","user_position","you","youPrize","getPrizeAmount","position","leaderboard","prize","user_id","leaderboardItem","setGamesWeeklyAmount","sum_points","getRemainingTimeToDateSeconds","played","onTabCombineClick","LeaderboardItem","label_place","label_prize","place","LeaderboardLayer","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","main_bottom_tab_5","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","reward_each_hour","reward_each_hour_challange","reward_each_hour_challange_top","reward_each_hour_challange_points","tasks_done","tasks_streak","games_weekly_challange_title","games_weekly_challange_text","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_guidebook","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","output_main_title","output_out_title","output_main_btn","output_main_label_1","out_bullet_1","out_bullet_2","out_bullet_3","output_out_label_1","output_out_label_2","output_out_btn","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","preloadRewarded_Interstitial","show_8867073","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","preloadInApp_Interstitial","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","OutputLayer","btn_next","btn_out","btn_out_not_active","btn_close_out","panel_main","panel_out","edit_box","EditBox","onCloseOutClick","onNextClick","onOutClick","onEditBegan","onEditEnded","validateInput","scrollTo","inputStr","trim","value","max","isNaN","canOut","removeEventListener","preventScroll","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnGuidebookRules","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","onGuidebookClick","SETTING","openLinkPrivacy","openLinkPartnership","openLinkGuidebook","openDisableAdsPopup","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","assets","asset","getSprite","getJson","TelegramAdsController","triggerNativeNotification","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","Tads","adController","widgetId","Tads_1","tryInit","debug","onShowReward","adId","onClickReward","onAdsNotFound","loadAd","showAd","DailyTaskItem_1","HourlyChallangeItem_1","TasksLayer","info_popup","week_tasks_bar","week_tasks_bar_base","week_tasks_bar_streak","week_tasks_bar_fill","week_tasks_bar_amount","week_tasks_bar_streak_amount","info_popup_tasks_fill","info_popup_tasks_amount","info_popup_streak","info_popup_streak_amount","info_popup_timeLeft","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","openInfoPopupClick","closeInfoPopupClick","setWeeklyAmount","setStreakAmount","completed_tasks","weekly_streak","setDailyTasks","days","fetchHourlyChallange","hourly_challenge_item","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","addComponent","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","getRemainingTimeToDate","targetDate","diffMs","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","line","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","LOCAL_API_URL","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","WINNING_AMOUNT_ADDITIONAL_PLACES","WINNING_AMOUNT_ADDITIONAL_PRIZE","WINNING_PERCENT_1st_PLACE","WINNING_PERCENT_2st_PLACE","WINNING_PERCENT_3st_PLACE","WINNING_PERCENT_4st_PLACE","WINNING_PERCENT_5st_PLACE","prizeAmount","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto","LashHourLeaderDto","GetServerTimeDto","ServerTimestampDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           //debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\nimport { Tads } from \"./tads/Tads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst STORAGE_KEY = \"ads_view_data\";\r\n\r\n@ccclass('AdsManagerForBank')\r\nexport class AdsManagerForBank {\r\n    private static _instance: AdsManagerForBank;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManagerForBank {\r\n        if (!AdsManagerForBank._instance) {\r\n            AdsManagerForBank._instance = new AdsManagerForBank();\r\n        }\r\n        return AdsManagerForBank._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n    private tads: Tads;\r\n\r\n    private currentProviderIndex: number = 0;\r\n\r\n    private viewData: ViewData = {\r\n        day: '',\r\n        dayCount: 0,\r\n        hour: 0,\r\n        hourCount: 0\r\n    };\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'tads',\r\n            show: () => this.tads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n\r\n        this.loadViewData();\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        if (!this.canShowAd()) {\r\n            console.warn(\"Ad limit reached (per hour or per day)\");\r\n            return false;\r\n        }\r\n\r\n        const maxAttempts = this.rewarded_providers.length;\r\n        let attempts = 0;\r\n        let success = false;\r\n\r\n        while (attempts < maxAttempts) {\r\n            const provider = this.rewarded_providers[this.currentProviderIndex];\r\n            this.currentProviderIndex = (this.currentProviderIndex + 1) % this.rewarded_providers.length;\r\n\r\n            success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                this.updateViewData();\r\n                break;\r\n            }\r\n            attempts++;\r\n        }\r\n\r\n        if (!success) {\r\n            console.warn(\"No ad was successfully shown from any provider.\");\r\n        }\r\n        return success;\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad! Get your reward...');\r\n\r\n    }\r\n\r\n\r\n    private canShowAd(): boolean {\r\n        const now = new Date();\r\n\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        return this.viewData.dayCount < 100 && this.viewData.hourCount < 10;\r\n    }\r\n\r\n    private updateViewData() {\r\n        const now = new Date();\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        this.viewData.dayCount += 1;\r\n        this.viewData.hourCount += 1;\r\n\r\n        this.saveViewData();\r\n    }\r\n\r\n    private loadViewData() {\r\n        const json = localStorage.getItem(STORAGE_KEY);\r\n        if (json) {\r\n            try {\r\n                this.viewData = JSON.parse(json);\r\n            } catch (e) {\r\n                console.warn(\"Failed to parse view data:\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private saveViewData() {\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(this.viewData));\r\n    }\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\ninterface ViewData {\r\n    day: string;\r\n    dayCount: number;\r\n    hour: number;\r\n    hourCount: number;\r\n}\r\n","import { setDesignResolution } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                setDesignResolution(); //fix for onclicka resolution change bug\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial_Timeout(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\n\r\n","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetServerTimeDto, GetUserAuthDto, GetUserDailyTasksDto, LashHourLeaderDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //time\r\n    public async getTime(): Promise<GetServerTimeDto> {\r\n        return this.apiClient.get(\"time\");\r\n    }\r\n\r\n    //user\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //tasks - hour leader\r\n    public async getLastHourLeader(): Promise<LashHourLeaderDto> {\r\n        return this.apiClient.get(\"games/leader/last-hour\");\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n}"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn?.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn?.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { LashHourLeaderDto, UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    lastHourLeader : LashHourLeaderDto = null\r\n    nextMonday: Date = null\r\n\r\n    prizePoolWinningAmount: number = 0;\r\n\r\n    serverTimestamp: number = null;\r\n    serverTimeOffsetMiliseconds: number = 0;\r\n\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    OUTPUT = 'OutputLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, getServerTimestampNow, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = getServerTimestampNow();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = getServerTimestampNow();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then(async (response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n\r\n                await delay(100)\r\n\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\nimport { delay } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then(async (response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n\r\n                await delay(100)\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n   \r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n}\r\n","import { getRemainingTimeToDateSeconds, getRemainingTimeToHourSeconds } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { LashHourLeaderDto } from \"../dtos/user.dto\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HourlyChallangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_time: cc.Label | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    setTestData(){\r\n        this.reward = \"COIN\";\r\n        this.amount = 25;\r\n        this.label_name.string = \"none\";\r\n        this.label_score.string = \"0\";\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    setFromCache(){\r\n        if(DataManager.instance.lastHourLeader){\r\n            this.set(DataManager.instance.lastHourLeader);\r\n        }\r\n        else{\r\n            this.setTestData();\r\n        }\r\n    }\r\n\r\n    fetchFromServer(){\r\n        this.setFromCache();\r\n\r\n        UserController.Instance?.getLastHourLeader().then((response) => {\r\n            DataManager.instance.lastHourLeader = response;\r\n            this.set(response);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    set(dto: LashHourLeaderDto){\r\n        const name = (dto.username && dto.username != \"\" && dto.username != null) ? `@${dto.username}` : `${dto.first_name}`;\r\n\r\n        this.reward = \"COIN\";\r\n        this.amount = 25;\r\n        this.label_name.string = name;\r\n        this.label_score.string = `${dto.points}`;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        const nextHour = this.getNextHourDate();\r\n        this.label_time.string = getRemainingTimeToHourSeconds(nextHour);\r\n    }\r\n\r\n\r\n    getNextHourDate(): Date {\r\n        const now = new Date();\r\n        now.setMinutes(0, 0, 0); // Reset minutes, seconds, milliseconds\r\n        now.setHours(now.getHours() + 1); // Move to next hour\r\n        return now;\r\n    }\r\n    \r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/AuthController';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { getServerTimeNow, setDesignResolution } from './Utils';\r\nimport { AdsManager } from './ads/AdsManager';\r\nimport OutputLayer from './layer/OutputLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n\r\n\r\n        //Заборонити прокрутку сторінки під час фокусу на EditBox\r\n        document.body.addEventListener('touchmove', function (e) {\r\n            if (document.activeElement.tagName === 'INPUT' || document.activeElement.tagName === 'TEXTAREA') {\r\n              e.preventDefault();\r\n            }\r\n          }, { passive: false });\r\n    }\r\n\r\n    async start() {\r\n\r\n        setDesignResolution();\r\n\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n\r\n            //time \r\n\r\n            const timeResponce = await UserController.Instance.getTime();\r\n            console.log(\"time success\", timeResponce.data.timestamp);\r\n\r\n            const serverDate = new Date(timeResponce.data.timestamp); \r\n            const localDate = new Date();\r\n            const timeDiffMiliseconds = serverDate.getTime() - localDate.getTime(); // різниця в мілісекундах\r\n\r\n            console.log(\"timeDiffMiliseconds\", timeDiffMiliseconds, getServerTimeNow());\r\n\r\n            DataManager.instance.serverTimestamp = timeResponce.data.timestamp; \r\n            DataManager.instance.serverTimeOffsetMiliseconds = timeDiffMiliseconds;\r\n\r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        if(OutputLayer.block_resize){\r\n            return;\r\n        }\r\n\r\n        this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { delay, getRemainingTimeToDateSeconds, setDesignResolution } from \"../Utils\";\r\nimport { WINNING_AMOUNT_ADDITIONAL_PRIZES, getPrizeAmount } from \"../constants/prize-pool.const\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n    \r\n    info: cc.Node = null\r\n    \r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.btnTabBest.on(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        //this.btnTabCombine.on(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.on(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.btnTabBest.off(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        //this.btnTabCombine.off(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.off(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const winningAmountTotal = DataManager.instance.prizePoolWinningAmount;\r\n        const winningAmount = (winningAmountTotal - WINNING_AMOUNT_ADDITIONAL_PRIZES) / 2;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then(async (response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                const youPrize = getPrizeAmount(response.user_position.position - 1, winningAmount);\r\n                youItem.init(you.position, `@${you.username}`, you.points, youPrize);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n            setDesignResolution();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_prize: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string, score: number, prize : number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n        this.label_prize.string = prize.toFixed(2);\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { delay, getRemainingTimeToDateSeconds, setDesignResolution } from \"../Utils\";\r\nimport { WINNING_AMOUNT_ADDITIONAL_PRIZE, WINNING_AMOUNT_ADDITIONAL_PRIZES, WINNING_PERCENT_1st_PLACE as WINNING_PERCENT_1_PLACE, WINNING_PERCENT_2st_PLACE as WINNING_PERCENT_2_PLACE, WINNING_PERCENT_3st_PLACE as WINNING_PERCENT_3_PLACE, WINNING_PERCENT_4st_PLACE as WINNING_PERCENT_4_PLACE, WINNING_PERCENT_5st_PLACE as WINNING_PERCENT_5_PLACE, getPrizeAmount } from \"../constants/prize-pool.const\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.on(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        this.btnTabCombine.on(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.on(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        //this.btnTabBest.off(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        this.btnTabCombine.off(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.off(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const winningAmountTotal = DataManager.instance.prizePoolWinningAmount;\r\n        const winningAmount = (winningAmountTotal - WINNING_AMOUNT_ADDITIONAL_PRIZES) / 2;\r\n      \r\n        UserController.Instance?.getLeaderboard().then(async (response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                const youPrize = getPrizeAmount(response.user_position.position - 1, winningAmount);\r\n                youItem.init(you.position, `@${you.username}`, you.points, youPrize);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n                }\r\n            }\r\n\r\n            \r\n            \r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n            setDesignResolution();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init(){\r\n        \r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key : string) : string{\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if(!localizedString){\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language){\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" +   DataManager.instance.language );\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n    \r\n    // general\r\n    \r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n    \r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n    \r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n    \r\n    // main\r\n    \r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n    \r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n    \r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n    \r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"main_bottom_tab_5\": { \r\n        \"en\": \"Output\",\r\n        \"ua\": \"Вивід\",\r\n        \"de\": \"Ausgabe\",\r\n        \"es\": \"Retiro\",\r\n        \"ru\": \"Вывод\",\r\n        \"cs\": \"Výběr\",\r\n        \"sk\": \"Výber\",\r\n        \"pl\": \"Wypłata\"\r\n    },\r\n    \r\n    // settings\r\n    \r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n    \r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n    \r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n    \r\n    // settings language\r\n    \r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n    \r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n    \r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n    \r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n    \r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n    \r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n    \r\n    // leaderboard\r\n    \r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n    \r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n    \r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n    \r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n    \r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n    \r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n    \r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"reward_each_hour\": {\r\n        \"en\": \"Reward each hour\",\r\n        \"ua\": \"Приз щогодини\",\r\n        \"de\": \"Belohnung pro Stunde\",\r\n        \"es\": \"Recompensa por hora\",\r\n        \"ru\": \"Награда каждый час\",\r\n        \"cs\": \"Odměna každou hodinu\",\r\n        \"sk\": \"Odmena každú hodinu\",\r\n        \"pl\": \"Nagroda co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange\": {\r\n        \"en\": \"Hourly Challenge\",\r\n        \"ua\": \"Годинний челендж\",\r\n        \"de\": \"Stündliche Herausforderung\",\r\n        \"es\": \"Desafío por hora\",\r\n        \"ru\": \"Ежечасный челлендж\",\r\n        \"cs\": \"Hodinová výzva\",\r\n        \"sk\": \"Hodinová výzva\",\r\n        \"pl\": \"Wyzwanie co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_top\": {\r\n        \"en\": \"Top Player:\",\r\n        \"ua\": \"Топ гравець:\",\r\n        \"de\": \"Top-Spieler:\",\r\n        \"es\": \"Jugador top:\",\r\n        \"ru\": \"Топ игрок:\",\r\n        \"cs\": \"Top hráč:\",\r\n        \"sk\": \"Top hráč:\",\r\n        \"pl\": \"Top gracz:\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_points\": {\r\n        \"en\": \"Points:\",\r\n        \"ua\": \"Очки:\",\r\n        \"de\": \"Punkte:\",\r\n        \"es\": \"Puntos:\",\r\n        \"ru\": \"Очки:\",\r\n        \"cs\": \"Body:\",\r\n        \"sk\": \"Body:\",\r\n        \"pl\": \"Punkty:\"\r\n    },\r\n\r\n    \"tasks_done\": {\r\n        \"en\": \"Tasks Done\",\r\n        \"ua\": \"Завершено завданнь\",\r\n        \"de\": \"Aufgaben erledigt\",\r\n        \"es\": \"Tareas completadas\",\r\n        \"ru\": \"Выполнено заданий\",\r\n        \"cs\": \"Splněné úkoly\",\r\n        \"sk\": \"Splnené úlohy\",\r\n        \"pl\": \"Wykonane zadania\"\r\n    },\r\n\r\n    \"tasks_streak\" : {\r\n        \"en\": \"Your streak:\",\r\n        \"ua\": \"Твоя безперервна серія:\",\r\n        \"de\": \"Deine Serie:\",\r\n        \"es\": \"Tu racha:\",\r\n        \"ru\": \"Твоя серия:\",\r\n        \"cs\": \"Tvoje série:\",\r\n        \"sk\": \"Tvoja séria:\",\r\n        \"pl\": \"Twoja passa:\"\r\n    },\r\n\r\n    \"games_weekly_challange_title\" : { \r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Date prisa!\",\r\n        \"ru\": \"Поспеши!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_challange_text\" : {\r\n        \"en\": \"The more tasks you complete during the week, the higher your chance to win!\",\r\n        \"ua\": \"Чим більше завдань ви виконаєте за тиждень, тим вищий ваш шанс виграти!\",\r\n        \"de\": \"Je mehr Aufgaben du in der Woche erledigst, desto höher ist deine Gewinnchance!\",\r\n        \"es\": \"¡Cuantas más tareas completes durante la semana, mayor será tu oportunidad de ganar!\",\r\n        \"ru\": \"Чем больше заданий ты выполнишь за неделю, тем выше твой шанс на победу!\",\r\n        \"cs\": \"Čím více úkolů během týdne splníš, tím větší máš šanci na výhru!\",\r\n        \"sk\": \"Čím viac úloh za týždeň splníš, tým vyššia je tvoja šanca na výhru!\",\r\n        \"pl\": \"Im więcej zadań wykonasz w tygodniu, tym większa szansa na wygraną!\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n    \r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n    \r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"profile_guidebook\": {\r\n        \"en\": \"Guidebook & rules\",\r\n        \"ua\": \"Посібник та правила\",\r\n        \"de\": \"Leitfaden & Regeln\",\r\n        \"es\": \"Guía y reglas\",\r\n        \"ru\": \"Руководство и правила\",\r\n        \"cs\": \"Příručka a pravidla\",\r\n        \"sk\": \"Príručka a pravidlá\",\r\n        \"pl\": \"Poradnik i zasady\"\r\n    },\r\n    \r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n    \r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n    \r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n    \r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n    \r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n    \r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n    \r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n    \r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n    \r\n    \r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n    \r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n    \r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\" ,\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n    \r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n    \r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n    \r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n    \r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },    \r\n    \r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n    \r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n    \r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n    \r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n    \r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n    \r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n    \r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n    \r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n    \r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n    \r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n    \r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n    \r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n    \r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n    \r\n    //output\r\n\r\n    \"output_main_title\" :{\r\n        \"en\": \"Block Stars Withdrawal\",\r\n        \"ua\": \"Виведення Block Stars\",\r\n        \"de\": \"Block Stars Auszahlung\",\r\n        \"es\": \"Retiro de Block Stars\",\r\n        \"ru\": \"Вывод Block Stars\",\r\n        \"cs\": \"Výběr Block Stars\",\r\n        \"sk\": \"Výber Block Stars\",\r\n        \"pl\": \"Wypłata Block Stars\"\r\n    },\r\n\r\n    \"output_out_title\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_btn\" :{\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_label_1\": {\r\n        \"en\": \"Withdraw in-game coins from Block Stars to your Stars Bank account and use them.\",\r\n        \"ua\": \"Виводьте ігрові монети із Block Stars на акаунт Stars Bank та використовуйте їх. \",\r\n        \"de\": \"Ziehe Spielmünzen von Block Stars auf dein Stars Bank-Konto ab und verwende sie.\",\r\n        \"es\": \"Retira monedas del juego de Block Stars a tu cuenta de Stars Bank y úsalas.\",\r\n        \"ru\": \"Выводите игровые монеты из Block Stars на аккаунт Stars Bank и используйте их.\",\r\n        \"cs\": \"Vyber herní mince z Block Stars na účet Stars Bank a používej je.\",\r\n        \"sk\": \"Vyber herné mince z Block Stars na účet Stars Bank a použi ich.\",\r\n        \"pl\": \"Wypłać monety z gry Block Stars na konto Stars Bank i używaj ich.\"\r\n    },\r\n\r\n    \"out_bullet_1\" : {\r\n        \"en\": \"Withdraw available from 300 coins\",\r\n        \"ua\": \"Вивід доступний від 300 монет\",\r\n        \"de\": \"Výběr dostupný od 300 mincí\",\r\n        \"es\": \"Retiro disponible a partir de 300 monedas\",\r\n        \"ru\": \"Вывод доступен от 300 монет\",\r\n        \"cs\": \"Výběr dostupný od 300 mincí\",\r\n        \"sk\": \"Výber dostupný od 300 mincí\",\r\n        \"pl\": \"Wypłata dostępna od 300 monet\"\r\n    },\r\n\r\n    \"out_bullet_2\" : {\r\n        \"en\": \"Exchange rate: 1 Block Star = 1 Telegram Star\",\r\n        \"ua\": \"Курс обміну відбувається наступним чином: 1 Block Star = 1 Telegram Star.\",\r\n        \"de\": \"Wechselkurs: 1 Block Star = 1 Telegram Star\",\r\n        \"es\": \"Tasa de cambio: 1 Block Star = 1 Telegram Star\",\r\n        \"ru\": \"Курс обмена: 1 Block Star = 1 Telegram Star\",\r\n        \"cs\": \"Směnný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"sk\": \"Výmenný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"pl\": \"Kurs wymiany: 1 Block Star = 1 Telegram Star\"\r\n    },\r\n\r\n    \"out_bullet_3\" : {\r\n        \"en\": \"Make sure you have a Stars Bank account. If not, open Stars Bank in Telegram and start.\",\r\n        \"ua\": \"Переконайтеся, що у вас є акаунт Stars Bank. Якщо його ще немає, просто відкрийте Stars Bank у Telegram і запустіть.\",\r\n        \"de\": \"Stelle sicher, dass du ein Stars Bank-Konto hast. Wenn nicht, öffne Stars Bank in Telegram und starte.\",\r\n        \"es\": \"Asegúrate de tener una cuenta en Stars Bank. Si no la tienes, abre Stars Bank en Telegram y empieza.\",\r\n        \"ru\": \"Убедитесь, что у вас есть аккаунт Stars Bank. Если нет — откройте Stars Bank в Telegram и запустите.\",\r\n        \"cs\": \"Ujisti se, že máš účet ve Stars Bank. Pokud ho nemáš, otevři Stars Bank v Telegramu a spusť.\",\r\n        \"sk\": \"Uisti sa, že máš účet v Stars Bank. Ak nie, otvor Stars Bank v Telegrame a spusti.\",\r\n        \"pl\": \"Upewnij się, że masz konto w Stars Bank. Jeśli nie, otwórz Stars Bank w Telegramie i rozpocznij.\"\r\n    },\r\n\r\n    \"output_out_label_1\" :{\r\n        \"en\": \"Enter the amount you want to withdraw to your Stars Bank account.\",\r\n        \"ua\": \"Введіть бажану суму для виведення на акаунт Stars Bank.\",\r\n        \"de\": \"Gib den gewünschten Betrag ein, den du auf dein Stars Bank-Konto abheben möchtest.\",\r\n        \"es\": \"Introduce la cantidad que deseas retirar a tu cuenta de Stars Bank.\",\r\n        \"ru\": \"Введите желаемую сумму для вывода на аккаунт Stars Bank.\",\r\n        \"cs\": \"Zadej částku, kterou chceš vybrat na účet Stars Bank.\",\r\n        \"sk\": \"Zadaj sumu, ktorú chceš vybrať na účet Stars Bank.\",\r\n        \"pl\": \"Wpisz kwotę, którą chcesz wypłacić na konto Stars Bank.\"\r\n    },\r\n\r\n    \"output_out_label_2\" :{\r\n        \"en\": \"Minimum withdrawal amount is 500 coins\",\r\n        \"ua\": \"мінімальна сума виводу 500 монет\",\r\n        \"de\": \"Mindestbetrag für Auszahlung: 500 Münzen\",\r\n        \"es\": \"Cantidad mínima para retirar: 500 monedas\",\r\n        \"ru\": \"Минимальная сумма вывода: 500 монет\",\r\n        \"cs\": \"Minimální částka pro výběr: 500 mincí\",\r\n        \"sk\": \"Minimálna suma na výber: 500 mincí\",\r\n        \"pl\": \"Minimalna kwota wypłaty: 500 monet\"\r\n    },\r\n\r\n    \"output_out_btn\" :{\r\n        \"en\": \"Withdraw\",\r\n        \"ua\": \"Вивести\",\r\n        \"de\": \"Auszahlen\",\r\n        \"es\": \"Retirar\",\r\n        \"ru\": \"Вывести\",\r\n        \"cs\": \"Vybrat\",\r\n        \"sk\": \"Vybrať\",\r\n        \"pl\": \"Wypłać\"\r\n    },\r\n\r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, getServerTimeNow, setDesignResolution, starsToDollars} from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n\r\n\r\n\r\n\r\n        this.btnStart.on(cc.Node.EventType.TOUCH_START, this.onStartClick, this)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START , this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n        this.btnShop.on(cc.Node.EventType.TOUCH_START, this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on(cc.Node.EventType.TOUCH_START, this.onGiveawayClick, this)\r\n        this.giveawayPanel.on(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on(cc.Node.EventType.TOUCH_START, this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off(cc.Node.EventType.TOUCH_START, this.onStartClick, this)\r\n\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n        this.btnShop.off(cc.Node.EventType.TOUCH_START, this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off(cc.Node.EventType.TOUCH_START, this.onGiveawayClick, this)\r\n        this.giveawayPanel.off(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = getServerTimeNow(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n            DataManager.instance.prizePoolWinningAmount = response.data.total_winning_amount;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/AuthController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public preloadInApp_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867075({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OutputLayer extends BaseLayer {\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    labelCoinsAmount: cc.Label = null;\r\n    \r\n    btn_next: cc.Node = null\r\n    btn_out: cc.Node = null\r\n    btn_out_not_active: cc.Node = null\r\n    btn_close_out: cc.Node = null\r\n    \r\n    panel_main: cc.Node = null\r\n    panel_out: cc.Node = null\r\n\r\n    edit_box: cc.EditBox = null;\r\n   \r\n\r\n    public static block_resize: boolean = false;\r\n\r\n\r\n    onLoad() {\r\n        this.panel_main = cc.find('main', this.node)\r\n        this.panel_out = cc.find('out', this.node)\r\n\r\n        this.labelCoinsAmount = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.edit_box = cc.find('edit_box', this.panel_out).getComponent(cc.EditBox)\r\n\r\n        this.btn_close_out = cc.find('btn_close', this.node)\r\n        this.btn_next = cc.find('btn_start', this.panel_main)\r\n        this.btn_out = cc.find('btn_start', this.panel_out)\r\n        this.btn_out_not_active = cc.find('btn_start_2', this.panel_out)\r\n\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btn_close_out.on(cc.Node.EventType.TOUCH_START, this.onCloseOutClick, this)\r\n        this.btn_next.on(cc.Node.EventType.TOUCH_START, this.onNextClick, this)\r\n        this.btn_out.on(cc.Node.EventType.TOUCH_START, this.onOutClick, this)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n\r\n        this.edit_box.node.on('editing-did-began',  this.onEditBegan, this);\r\n        this.edit_box.node.on('editing-did-ended', this.onEditEnded, this);\r\n        this.edit_box.node.on('text-changes', this.validateInput, this);\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n\r\n        this.btn_close_out.off(cc.Node.EventType.TOUCH_START, this.onCloseOutClick, this)\r\n        this.btn_next.off(cc.Node.EventType.TOUCH_START, this.onNextClick, this)\r\n        this.btn_out.off(cc.Node.EventType.TOUCH_START, this.onOutClick, this)\r\n\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n\r\n        this.edit_box.node.off('editing-did-began',  this.onEditBegan, this);\r\n        this.edit_box.node.off('editing-did-ended', this.onEditEnded, this);\r\n        this.edit_box.node.off('text-changes', this.validateInput, this);\r\n    }\r\n\r\n    onEnable() {\r\n        OutputLayer.block_resize = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.edit_box.string = this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        if(this.panel_main){\r\n            this.panel_main.active = true;\r\n        }\r\n\r\n        if(this.panel_out){\r\n            this.panel_out.active = false;\r\n            this.btn_close_out.active = false;\r\n        }\r\n        \r\n    }\r\n\r\n    onDisable() { }\r\n\r\n   \r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        OutputLayer.block_resize = false;\r\n\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n        OutputLayer.block_resize = false;\r\n\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n        OutputLayer.block_resize = false;\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n        OutputLayer.block_resize = false;\r\n    }\r\n\r\n    onCloseOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n        this.btn_close_out.active = false;\r\n        OutputLayer.block_resize = false;\r\n    }\r\n\r\n    onNextClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = false;\r\n        this.panel_out.active = true;\r\n        this.btn_close_out.active = true;\r\n        OutputLayer.block_resize = true;\r\n\r\n        //this.edit_box.adjustPan\r\n\r\n        //cc.view.resizeWithBrowserSize(false);\r\n    }\r\n\r\n    onOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo\r\n        //backend request\r\n        //open wallet app\r\n    }\r\n\r\n    validateInput(){\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n        }, 200);\r\n\r\n        const inputStr = this.edit_box.string.trim();\r\n        const value = parseInt(inputStr, 10);\r\n\r\n        const max = DataManager.instance.userData.balance_stars;\r\n\r\n        // Якщо не число або менше 0 — ставимо 0\r\n        if (isNaN(value) || value < 0) {\r\n            this.edit_box.string = '0';\r\n        }\r\n        // Якщо більше за баланс — ставимо максимальне значення\r\n        else if (value > max) {\r\n            this.edit_box.string = max.toString();\r\n        }\r\n        // Інакше залишаємо як є\r\n\r\n        const canOut = value >= 500;\r\n        this.btn_out.active = canOut;\r\n        this.btn_out_not_active.active = !canOut;\r\n    }\r\n\r\n    onEditEnded(){\r\n        this.validateInput();\r\n\r\n        document.body.removeEventListener('touchmove', preventScroll);\r\n    }\r\n\r\n    onEditBegan(){\r\n        document.body.addEventListener('touchmove', preventScroll, { passive: false });\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n        }, 200);\r\n    }\r\n\r\n   \r\n}\r\n\r\n\r\nvar preventScroll = function (e) {\r\n    e.preventDefault();\r\n};","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n    btnGuidebookRules: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnGuidebookRules = cc.find('main/btns_group_2/btn_guidebook', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        \r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on(cc.Node.EventType.TOUCH_START, this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on(cc.Node.EventType.TOUCH_START, this.onSettingsClick, this)\r\n        this.btnTutorial.on(cc.Node.EventType.TOUCH_START, this.onTutorialClick, this)\r\n        this.btnTryGame.on(cc.Node.EventType.TOUCH_START, this.onTryGameClick, this)\r\n        this.btnSupport.on(cc.Node.EventType.TOUCH_START, this.onSupportClick, this)\r\n        this.btnPrivacy.on(cc.Node.EventType.TOUCH_START, this.onPrivacyClick, this)\r\n        this.btnPartership.on(cc.Node.EventType.TOUCH_START, this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.on(cc.Node.EventType.TOUCH_START, this.onGuidebookClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.btnOpenDisableAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off(cc.Node.EventType.TOUCH_START, this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off(cc.Node.EventType.TOUCH_START, this.onSettingsClick, this)\r\n        this.btnTutorial.off(cc.Node.EventType.TOUCH_START, this.onTutorialClick, this)\r\n        this.btnTryGame.off(cc.Node.EventType.TOUCH_START, this.onTryGameClick, this)\r\n        this.btnSupport.off(cc.Node.EventType.TOUCH_START, this.onSupportClick, this)\r\n        this.btnPrivacy.off(cc.Node.EventType.TOUCH_START, this.onPrivacyClick, this)\r\n        this.btnPartership.off(cc.Node.EventType.TOUCH_START, this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.off(cc.Node.EventType.TOUCH_START, this.onGuidebookClick, this)\r\n\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n    \r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onGuidebookClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkGuidebook();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Richads')\r\nexport class Richads {\r\n    private static _instance: Richads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Richads {\r\n        if (!Richads._instance) {\r\n            Richads._instance = new Richads();\r\n        }\r\n        return Richads._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).TelegramAdsController.triggerNativeNotification(true);  \r\n    }\r\n}","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    //toggleGroup: cc.ToggleGroup = null\r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n\r\n        this.btnMusic.on(cc.Node.EventType.TOUCH_START, this.onMusicClick, this)\r\n        this.btnSound.on(cc.Node.EventType.TOUCH_START, this.onSoundClick, this)\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off(cc.Node.EventType.TOUCH_START, this.onMusicClick, this)\r\n        this.btnSound.off(cc.Node.EventType.TOUCH_START, this.onSoundClick, this)\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n        \r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/AuthController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on(cc.Node.EventType.TOUCH_START, this.onBackClick, this)\r\n        this.btn_shop_1.on(cc.Node.EventType.TOUCH_START, this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on(cc.Node.EventType.TOUCH_START, this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on(cc.Node.EventType.TOUCH_START, this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off(cc.Node.EventType.TOUCH_START, this.onBackClick, this)\r\n        this.btn_shop_1.off(cc.Node.EventType.TOUCH_START, this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off(cc.Node.EventType.TOUCH_START, this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off(cc.Node.EventType.TOUCH_START, this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Tads')\r\nexport class Tads {\r\n    private static _instance: Tads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    private adController: any = null; // посилання на tads контролер\r\n    private widgetId: string = '403'; // <-- ВСТАВ СВІЙ ID сюди\r\n\r\n    public static get Instance(): Tads {\r\n        if (!Tads._instance) {\r\n            Tads._instance = new Tads();\r\n        }\r\n        return Tads._instance;\r\n    }\r\n\r\n    public init(){\r\n        return new Promise<void>((resolve, reject) => {\r\n            const tryInit = () => {\r\n                if (typeof (window as any).tads !== 'undefined' && (window as any).tads.init) {\r\n                    this.adController = (window as any).tads.init({\r\n                        widgetId: this.widgetId,\r\n                        debug: false,\r\n                        onShowReward: (adId: any) => {\r\n                            console.log('Show ad:', adId);\r\n                        },\r\n                        onClickReward: (adId: any) => {\r\n                            console.log('Click on ad:', adId);\r\n                        },\r\n                        onAdsNotFound: () => {\r\n                            console.warn('No ads found to show');\r\n                        }\r\n                    });\r\n                    console.log(\"Tads controller initialized.\");\r\n                    resolve();\r\n                } else {\r\n                    console.warn('Tads not loaded yet.');\r\n                    setTimeout(tryInit, 100);\r\n                }\r\n            };\r\n\r\n            tryInit();\r\n        });\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<void>{\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.adController) {\r\n                console.warn('Tads controller not initialized.');\r\n                reject('Tads controller not initialized.');\r\n                return;\r\n            }\r\n\r\n            this.adController.loadAd()\r\n                .then(() => {\r\n                    return this.adController.showAd();\r\n                })\r\n                .then(() => {\r\n                    console.log('Ad shown successfully');\r\n                    resolve();\r\n                })\r\n                .catch((err: any) => {\r\n                    console.error('Failed to show ad', err);\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/AuthController\";\r\nimport HourlyChallangeItem from \"../ui/HourlyChallangeItem\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    \r\n    info_popup: cc.Node = null\r\n\r\n    week_tasks_bar: cc.Node = null\r\n    week_tasks_bar_base: cc.Node = null\r\n    week_tasks_bar_streak: cc.Node = null\r\n\r\n    week_tasks_bar_fill: cc.Sprite = null;\r\n    week_tasks_bar_amount: cc.Label = null;\r\n    week_tasks_bar_streak_amount: cc.Label = null;\r\n    \r\n    info_popup_tasks_fill: cc.Sprite = null;\r\n    info_popup_tasks_amount: cc.Label = null;\r\n    info_popup_streak: cc.Node = null;\r\n    info_popup_streak_amount: cc.Label = null;\r\n    info_popup_timeLeft: cc.Label = null;\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    //bottomPanel\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        //bottom\r\n        this.btnMain = cc.find('tabs_panel/btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('tabs_panel/btn_leader', this.node)\r\n        this.btnTasks = cc.find('tabs_panel/btn_tasks', this.node)\r\n        this.btnProfile = cc.find('tabs_panel/btn_profile', this.node)\r\n        this.btnOutput = cc.find('tabs_panel/btn_out', this.node)\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        //screens\r\n        this.info_popup = cc.find('info_popup', this.node)\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        //content -- tasks\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        //week task bar\r\n        this.week_tasks_bar = cc.find('main/tasks_weekly', this.dailyPanel)\r\n        this.week_tasks_bar_base = cc.find('base', this.week_tasks_bar)\r\n        this.week_tasks_bar_streak = cc.find('streak', this.week_tasks_bar)\r\n\r\n        this.week_tasks_bar_fill = cc.find('fill_bar/fill', this.week_tasks_bar_base).getComponent(cc.Sprite)\r\n        this.week_tasks_bar_amount = cc.find('amount', this.week_tasks_bar_base).getComponent(cc.Label)\r\n        this.week_tasks_bar_streak_amount = cc.find('layout/label', this.week_tasks_bar_streak).getComponent(cc.Label)\r\n\r\n        //info popup\r\n        this.info_popup_tasks_fill = cc.find('panel/games_weekly/fill_bar/fill', this.info_popup).getComponent(cc.Sprite)\r\n        this.info_popup_tasks_amount = cc.find('panel/games_weekly/amount', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_streak = cc.find('panel/streak', this.info_popup)\r\n        this.info_popup_streak_amount = cc.find('panel/streak/label', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_timeLeft = cc.find('panel/bottom/time_text', this.info_popup).getComponent(cc.Label)\r\n\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info_popup)\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on(cc.Node.EventType.TOUCH_START, this.onTabDailyClick, this)\r\n        this.btnInviteTab.on(cc.Node.EventType.TOUCH_START, this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on(cc.Node.EventType.TOUCH_START, this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.on(cc.Node.EventType.TOUCH_START, this.openInfoPopupClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.closeInfoPopupClick, this)\r\n\r\n\r\n        this.setWeeklyAmount(0,14);\r\n        this.setStreakAmount(0);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n\r\n        this.btnDailyTab.off(cc.Node.EventType.TOUCH_START, this.onTabDailyClick, this)\r\n        this.btnInviteTab.off(cc.Node.EventType.TOUCH_START, this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off(cc.Node.EventType.TOUCH_START, this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.off(cc.Node.EventType.TOUCH_START, this.openInfoPopupClick, this)\r\n\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userData){\r\n            this.setWeeklyAmount(DataManager.instance.userData.completed_tasks,14);\r\n            this.setStreakAmount(DataManager.instance.userData.weekly_streak);\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks, false);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n\r\n       \r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            //this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.info_popup_timeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.week_tasks_bar_amount.string = this.info_popup_tasks_amount.string = `${played}/${target}`\r\n        this.week_tasks_bar_fill.fillRange = this.info_popup_tasks_fill.fillRange = fillRange;\r\n    }\r\n\r\n    setStreakAmount( days : number){\r\n        this.week_tasks_bar_streak_amount.string = `x${days}`;\r\n        this.info_popup_streak_amount.string = `streak x${days}`;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto, fetchHourlyChallange: boolean = true){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n\r\n        const hourly_challenge_item = PoolManager.instance.getNode(`task_item_hourly_challenge`, this.dailyPanelContent).getComponent(HourlyChallangeItem);\r\n        if(fetchHourlyChallange){\r\n            hourly_challenge_item.fetchFromServer();\r\n        }\r\n        else{\r\n            hourly_challenge_item.setFromCache();\r\n        }\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    openInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = true;\r\n    }\r\n\r\n    closeInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = false;\r\n    }\r\n\r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n\r\n    onMainClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLinkGuidebook(){\r\n        this.openLink(\"https://telegram.org\")\r\n    }\r\n\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserController } from './api/controllers/AuthController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport OutputLayer from './layer/OutputLayer';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    if(OutputLayer.block_resize)\r\n        return;\r\n\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function getServerTimeNow() : Date{\r\n    return new Date(Date.now() + DataManager.instance.serverTimeOffsetMiliseconds);\r\n}\r\n\r\nexport function getServerTimestampNow() : number{\r\n    return getServerTimeNow().getTime();\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = getServerTimeNow();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToHourSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = getServerTimestampNow();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    \"API_URL\" : \"https://1083-46-185-70-251.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    \"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}\r\n","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","export const WINNING_AMOUNT_ADDITIONAL_PLACES: number = 95;\r\nexport const WINNING_AMOUNT_ADDITIONAL_PRIZE: number = 50;\r\nexport const WINNING_AMOUNT_ADDITIONAL_PRIZES: number = WINNING_AMOUNT_ADDITIONAL_PRIZE * WINNING_AMOUNT_ADDITIONAL_PLACES * 2;\r\n\r\n\r\nexport const WINNING_PERCENT_1st_PLACE: number = 0.35;\r\nexport const WINNING_PERCENT_2st_PLACE: number = 0.20;\r\nexport const WINNING_PERCENT_3st_PLACE: number = 0.15;\r\nexport const WINNING_PERCENT_4st_PLACE: number = 0.10;\r\nexport const WINNING_PERCENT_5st_PLACE: number = 0.05;\r\n\r\n\r\nexport function getPrizeAmount(index: number, winningAmount: number): number {\r\n    let prizeAmount: number = 0;\r\n\r\n    if(index > 99)\r\n        return 0;\r\n\r\n    switch (index) {\r\n        case 0:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_1st_PLACE;\r\n            break;\r\n        case 1:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_2st_PLACE;\r\n            break;\r\n        case 2:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_3st_PLACE;\r\n            break;\r\n        case 3:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_4st_PLACE;\r\n            break;\r\n        case 4:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_5st_PLACE;\r\n            break;\r\n        default:\r\n            prizeAmount = WINNING_AMOUNT_ADDITIONAL_PRIZE;\r\n            break;\r\n    }\r\n\r\n    return Math.max(prizeAmount, 0);\r\n}","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n  completed_tasks: number;\r\n  weekly_streak: number;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}\r\n\r\nexport class LashHourLeaderDto{\r\n  public position: number;\r\n  public user_id: string;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public photo_url?: string;\r\n  public points: number;\r\n  public game_duration: number;\r\n}\r\n\r\nexport class GetServerTimeDto{\r\n  public data: ServerTimestampDto;\r\n  public message: string;\r\n}\r\n\r\nexport class ServerTimestampDto{\r\n  public timestamp: number;\r\n}"],"file":"index.js"}