{"version":3,"sources":["assets/scripts/localization/ALocaleLabel.ts","assets/scripts/ads/ads-gram/AdsGram.ts","assets/scripts/ads/AdsManagerForBank.ts","assets/scripts/ads/AdsManager.ts","assets/scripts/api/ApiClientFactory.ts","assets/scripts/api/ApiClient.ts","assets/scripts/api/ApiErrors.ts","assets/scripts/manager/ApiManager.ts","assets/scripts/manager/AudioManager.ts","assets/scripts/utils/AvatarLoader.ts","assets/scripts/layer/Baselayer.ts","assets/scripts/game/BlockReady.ts","assets/scripts/game/Block.ts","assets/scripts/ui/BottomNavigationPanel.ts","assets/scripts/layer/ClubHistoryLayer.ts","assets/scripts/layer/ClubLayer.ts","assets/scripts/utils/ConfigLoader.ts","assets/scripts/ui/DailyTaskItem.ts","assets/scripts/ui/DailyTaskSubItem.ts","assets/scripts/manager/DataManager.ts","assets/scripts/manager/EffectManager.ts","assets/scripts/Enum.ts","assets/scripts/manager/EventManager.ts","assets/scripts/layer/ExitLayer.ts","assets/scripts/manager/FadeManager.ts","assets/scripts/manager/GameManager.ts","assets/scripts/layer/HistoryCombinedLayer.ts","assets/scripts/ui/HistoryItem.ts","assets/scripts/layer/HistoryLayer.ts","assets/scripts/ui/HourlyChallangeItem.ts","assets/scripts/layer/HttpErrorLayer.ts","assets/scripts/Index.ts","assets/scripts/layer/LeaderboardCombinedLayer.ts","assets/scripts/ui/LeaderboardItem.ts","assets/scripts/layer/LeaderboardLayer.ts","assets/scripts/game/Level.ts","assets/scripts/layer/LoadingLayer.ts","assets/scripts/manager/LocalizationManager.ts","assets/scripts/layer/LoseLayer.ts","assets/scripts/layer/MainLayer.ts","assets/scripts/layer/MenuLayer.ts","assets/scripts/ads/monetag/Monetag.ts","assets/scripts/layer/NoConnectionErrorLayer.ts","assets/scripts/ads/onclicka/Onclicka.ts","assets/scripts/layer/OutputLayer.ts","assets/scripts/manager/PoolManager.ts","assets/scripts/layer/ProfileLayer.ts","assets/scripts/manager/ResourceManager.ts","assets/scripts/ads/richads/Richads.ts","assets/scripts/manager/SdkManager.ts","assets/scripts/layer/ServerResponceErrorLayer.ts","assets/scripts/layer/SettingLayer.ts","assets/scripts/layer/ShopLayer.ts","assets/scripts/plugins/SizeFitter.ts","assets/scripts/StaticInstance.ts","assets/scripts/ads/tads/Tads.ts","assets/scripts/layer/TasksLayer.ts","assets/scripts/telegram/TelegramMiniApp.ts","assets/scripts/api/TestManager.ts","assets/scripts/ui/ThemeSetter.ts","assets/scripts/manager/ToastManager.ts","assets/scripts/manager/UIManager.ts","assets/scripts/plugins/UIScrollControl.ts","assets/scripts/api/controllers/UserController.ts","assets/scripts/Utils.ts","assets/scripts/layer/WinLayer.ts","assets/scripts/modules/axios.js","assets/config.js","assets/scripts/dtos/game.dto.ts","assets/scripts/dtos/invoice.dto.ts","assets/scripts/constants/prize-pool.const.ts","assets/scripts/dtos/user-transaction.dto.ts","assets/scripts/constants/user-transactions.const.ts","assets/scripts/dtos/user.dto.ts"],"names":["LocalizationManager_1","require","_a","cc","_decorator","ccclass","property","ALocaleLabel","_super","_this","apply","this","arguments","label","stringLocalizationKey","__extends","prototype","onLoad","fetchRender","onEnable","getComponent","Label","updateLabel","localizedString","default","instance","getLocalizedString","string","error","__decorate","Component","exports","adsGramLoadPromise","Promise","resolve","reject","sys","platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Adsgram","clearInterval","onerror","Error","head","appendChild","AdsGramController","_adsGramJS","rewarded_adController","interstitial_adController","AdsGramController_1","Object","defineProperty","get","_instance","init","__awaiter","_b","sent","success","getAdsGram","initAdsContorllers","adsgram","rewarder_adController","blockId","debugBannerType","showAd_Rewarded","show","showAd_Intersitital","showFullscreenAd","then","result","console","log","catch","AdsGram_1","Monetag_1","Onclicka_1","Richads_1","AdsManagerForBank","currentProviderIndex","viewData","day","dayCount","hour","hourCount","rewarded_providers","name","preload","monetag","preloadRewarded_Interstitial_Timeout","showRewarded_Interstitial","requiresPreload","richads","onclicka","adsGram","tads","AdsManagerForBank_1","MonetagController","Instance","Onclicka","Richads","res","warn","error_1","loadViewData","showAd_Rewarded_Intestitial","canShowAd","maxAttempts","length","attempts","provider","tryShowAdFromProvider","patchAd","updateViewData","call","error_2","now","Date","today","toISOString","split","currentHour","getHours","saveViewData","json","localStorage","getItem","JSON","parse","e","setItem","stringify","Utils_1","UserController_1","AdsManager","inApp_providers","preloadInApp_Interstitial_Timeout","showInApp_Interstitial","AdsManager_1","_i","showAd_InApp_Intestitial","setDesignResolution","UserController","ApiClient_1","ApiClientFactory","baseUrl","headers","createClient","ApiClient","createAuthorizedClient","authToken","axios_1","endpoint","params","response","status","data","handleError","post","patch","error_3","uploadFile","formData","Content-Type","error_4","config","baseURL","Authorization","ngrok-skip-browser-warning","create","HttpError","message","Unauthorized","Forbidden","ApiManager","getInstance","getData","url","fetch","ok","postData","payload","method","body","Enum_1","DataManager_1","ResourceManager_1","AudioManager","audioSource","AudioSource","loop","volume","playMusic","isMusicOn","clip","play","getClip","ENUM_AUDIO_CLIP","BGM","stopMusic","stop","playSound","isLoop","isSoundOn","audioEngine","playEffect","stopSound","audioId","stopEffect","AvatarLoader","loadAvatar","photoUrl","spriteNode","sprite","Sprite","assetManager","loadRemote","err","texture","spriteFrame","SpriteFrame","BaseLayer","node","active","hide","zoomIn","scale","speed","setScale","act","scaleTo","tween","start","zoomOut","flip","act1","act2","sequence","BlockReady","basicPos","v2","index","pos","size","isActive","currentPos","ENUM_RBLOCK_STATUS","SHOW","setPosition","setOpacity","HIDE","Layout","enabled","getContentSize","opacity","setActive","bool","x","y","zIndex","setContentSize","setMove","mx","my","getRelPos","wpos","convertToWorldSpaceAR","convertToNodeSpaceAR","Block","ENUM_BLOCK_STATUS","isCombine","getChildByName","StaticInstance_1","AudioManager_1","BottomNavigationPanel","btnMain","btnLeaderboard","btnTasks","btnProfile","btnOutput","btnClub","find","on","Node","EventType","TOUCH_START","onMainClick","onLeaderboardClick","onTasksClick","onProfileClick","onOutputClick","onClubClick","onDestroy","off","hideAllPanels","StaticInstance","uiManager","toggle","ENUM_UI_TYPE","MENU","LEADERBOARD","TASKS","PROFILE","OUTPUT","CLUB","CLICK","LEADERBOARD_COMBINED","HISTORY","HISTORY_COMBINED","SETTING","CLUB_HISTORY","PoolManager_1","Baselayer_1","HistoryItem_1","BottomNavigationPanel_1","ClubHistoryLayer","btnClose","totalWinningPoolLabel","content","addComponent","onCloseClick","contentNode","poolManager","getLastWinners","players","sort","a","b","points","destroyAllChildren","i","player","getNode","winning_amount","User","username","first_name","delay","getLastWeekPrizePool","total_winning_amount","toFixed","LeaderboardItem_1","prize_pool_const_1","ClubLayer","youItem","blogerItem","info","btnWinners","btnCloseInfo","blogger_name","club_members","tournament_bar","tournament_bar_base","tournament_bar_fill","tournament_bar_time_left","info_tournament_time_left","info_tournament_prize","onWinnersClick","onInfoClick","onInfoCloseClick","winningAmount","prizePoolWinningAmount","WINNING_AMOUNT_ADDITIONAL_PRIZES","initBlogger","getLeaderboard","user_position","you","youPrize","getPrizeAmount","position","leaderboard","prize","item","user_id","leaderboardItem","nextMonday","setTournamentEndFill","getRemainingTimeToDateMs","onDisable","update","getRemainingTimeToDateSeconds","played","target","fillRange","ConfigLoader","loadConfig","decryptedBytes","CryptoJS","AES","decrypt","ENC_DATA","passphrase","toString","enc","Utf8","DailyTaskSubItem_1","DailyTaskItem","sprite_reward","label_reward","sub_task_0","sub_task_1","fill","shuffle_frame","bomb_frame","replace_frame","coin_frame","id","reward","amount","dto","getRewardSprite","sub_tasks","completed","isCompleted","target_amount","setCompleted","setFill","TelegramMiniApp_1","ConfigLoader_1","DailyTaskSubItem","label_name","label_amount","btn","task_done","task_not_done","type","task_id","done_amount","showAmount","interactable","onButtonClicked","showRewardedAd","openTelegramGroup","startGame","adWathcedSuccesfully","incrementTaskAndUpdate","TelegramWebApp","openTelegramLinkChannel","mode","ENUM_GAME_MODE","SCORE","fadeManager","fadeIn","MAIN","score","gameManager","onGameStart","getPatchTaskDto","patchDailyTasksIncrement","updateTasks","getLayerInstance","fetchDailyTasks","timestamp","task","userId","getTelegramUser","getUser","_c","generateJsonDataToken","GAME_SECRET_KEY","token","Button","DataManager","userData","userTasks","lastHourLeader","serverTimestamp","serverTimeOffsetMiliseconds","ENUM_GAME_STATUS","UNRUNING","loadingRate","loadingMessage","_isMusicOn","_isSoundOn","games","title","icon","appid","level","levelMax","scoreMax","historyData","gameCreatedAtDate","language","isDarkThemeOn","set","reset","setGameStatusUnrunning","generateSecureKey","SHA256","Hex","save","SECRET_KEY","SAVE_SECRET","gameCreatedAtTimeStamp","getTime","encryptedData","encrypt","hmac","HmacSHA256","restore","storedData","_d","resetDefaults","decryptedData","setGameStatusRunning","getElementById","setAttribute","RUNING","EffectManager","effect","parent","options","effNode","Animation","anim","removeFromParent","ParticleSystem","resetSystem","ENUM_RESOURCE_TYPE","AudioClip","path","ratio","Prefab","EventManager","eventMap","Map","event","context","has","push","eventArr","findIndex","splice","emit","forEach","clear","SdkManager_1","ExitLayer","panel","btnSubmit","btnRestart","btnMusic","btnSound","onSubmitClick","onRestartClick","onMusicClick","onSoundClick","toggleBannerAd","rendorMusic","rendorSound","EXIT","FadeManager","setFadeManager","seconds","to","fadeOut","Level_1","GameManager","stage","setGameManager","initGame","onGameOver","ui","LOSE","score_1","timestamp_1","getServerTimestampNow","generateGameToken","gameToken","postGameFinish","SERVER_HTTP_ERROR","scheduleOnce","postGameStart","removeAllChildren","HistoryCombinedLayer","getSumPointsLastWinners","HistoryItem","label_score","HistoryLayer","HourlyChallangeItem","label_time","setTestData","setFromCache","fetchFromServer","getLastHourLeader","nextHour","getNextHourDate","getRemainingTimeToHourSeconds","setMinutes","setHours","HttpErrorLayer","btnSupport","btnRefresh","tip","errorMessage","onSupportClick","onRefreshClick","openTelegramLinkSupport","HTTP_ERROR","onHomeClick","ApiClientFactory_1","OutputLayer_1","Index","requestFullscreen","enableClosingConfirmation","webApp","getTelegramWebApp","onEvent","responsive","view","setResizeCallback","addEventListener","activeElement","tagName","preventDefault","passive","configRes","resource","loadRes","initAudioEndListener","passiveShare","getRank","initBannerAd","initInterstitialAd","initVideoAd","initCustomRowAd","initCustomColAd","initApiClient","first_login","changeLanguage","language_code","timeResponce","serverDate","localDate","timeDiffMiliseconds","getServerTimeNow","getUserDailyTasks","apiClientFactory","API_URL","Accept","tries","getTelegramInitData","apiClientAuthorized","userController","ms","setTimeout","responsiveOld","designSize","getDesignResolutionSize","viewSize","getFrameSize","setFitBoth","Canvas","fitHeight","fitWidth","designRatio","width","height","viewRatio","block_resize","LeaderboardCombinedLayer","btnTabBest","btnTabCombine","btnInfo","btnFindMe","taskFill","taskAmountLabel","taskTimeLeft","onTabBestClick","onFindMeClick","getSumPointsLeaderboard","getGames250_count","setGamesWeeklyAmount","sum_points","onTabCombineClick","LeaderboardItem","label_place","label_prize","place","LeaderboardLayer","getGames500_count","count","EffectManager_1","ToastManager_1","Block_1","BlockReady_1","Level","blocks_select","blocks_change","isPremiumPurchased","skills","skillTip","blocks_main","eff","combo","slots_ready","blocks_ready","score_current_num","score_max_num","isInitReadyBlock","hasShowTip","combineNum","comboNum","isBomb","skillsCount","blocksPlacedCount","isFreeBombUsed","btnSkill_1_shuffle","btnSkill_2_bomb","btnSkill_3_select","btnSkill_1_shuffle_icon_video","label_skill_1_shuffle_amount","label_skill_2_bomb_amount","label_skill_3_replace_amount","buy_skill_popup_1_shuffle","buy_skill_popup_2_bomb","buy_skill_popup_3_replace","btn_buy_skill_1_confirm","btn_buy_skill_1_ad","btn_buy_skill_1_decline","btn_buy_skill_2_confirm","btn_buy_skill_2_decline","btn_buy_skill_3_confirm","btn_buy_skill_3_decline","buy_skill_popup_1_used_label","buy_skill_popup_2_used_label","buy_skill_popup_3_used_label","use_skill_popup_1_shuffle","use_skill_popup_2_bomb","use_skill_popup_3_replace","btn_use_skill_1_confirm","btn_use_skill_1_decline","btn_use_skill_2_confirm","btn_use_skill_2_decline","btn_use_skill_3_confirm","btn_use_skill_3_decline","use_skill_popup_1_used_label","use_skill_popup_2_used_label","use_skill_popup_3_used_label","lose_confirm_popup_buyShuffle_used_label","hint_select_change","hint_select_new","btnShop","labelCoinsAmount","block_to_change_index","block_to_change_new_index","lose_confirm_popup_ad","lose_confirm_popup_subscribe","lose_confirm_popup_buyShuffle","btnLoseAd_confirm","btnLoseAd_decline","btnLoseSubscribe_confirm","btnLoseSubscribe_decline","btnLoseBuyShuffle_confirm_buy","btnLoseBuyShuffle_confirm_ad","btnLoseBuyShuffle_decline","isTouchStarted","shuffleTween","skills_1_shuffle_owned","bonuses","shuffle_amount","skills_2_bomb_owned","bomb_amount","skills_3_change_block_owned","change_block_amount","initMainBlocks","initSelectNewBlocks","initReadyBlocks","setTouch","setSkill","fetchUserData","setSkillsButtons","setEvents","telegram","handleEventActivated","handleEventDeactivated","offEvent","setHistoryData","XNUM","blockComp","Math","floor","main","bonusesUsed","children","initSelectChangeBlocks","_loop_1","block_index","this_1","slotReady","onSelectChangeBlockClick","blockReady","blockReady_comp","childrenCount","_loop_2","this_2","onSelectNewBlockClick","blocks_indexes","blocks_active","block","slot","checkReadyBlocks","isInit","ready","random","j","blockReadyComp","onTouchStart","onTouchMove","onTouchOver","startSkillShuffleTween","union","repeatForever","stopSkillShuffleTween","skill_1_shuffle_clicked","skill_2_bomb_clicked","skill_3_select_clicked","show_ad_rewarded_skill_1_shuffle","buy_skill_1_shuffle_confirm_clicked","buy_skill_2_bomb_confirm_clicked","buy_skill_3_select_confirm_clicked","closeBuySkill_1","closeBuySkill_2","closeBuySkill_3","use_skill_1_shuffle_confirm_clicked","use_skill_2_bomb_confirm_clicked","use_skill_3_select_confirm_clicked","closeUseSkill_1","closeUseSkill_2","closeUseSkill_3","openShop","onLoseAdConfirmClicked","onLoseDeclineClicked","onLoseSbuscribeConfirmClicked","onLoseBuyShuffle_Confirm_Buy_Clicked","onLoseBuyShuffle_Confirm_Ad_Clicked","onLoseBuyShuffle_Decline_Clicked","location","getLocation","point_main","getBoundingBox","contains","row","indexArr","lindex","rindex","urow","lindex_1","rindex_1","drow","lindex_2","rindex_2","SKILL_BOMB","hapticHeavyImpact","block_1","blockComp_1","includes","setScore","getPosition","point_ready","BLOCK_ACTIVE","delta","getDelta","checkPlace","BLOCK_UNACTIVE","hapticLightImpact","tryShowPlace","createReadyBlock","tryShowAdOnBlockCount","doCombine","checkIfGameOver","isOnline","tryShowAdGameEnd","closeLoseBuyShufflePopup","doSkillShuffle","show_ad_rewarded_skill_2_bomb","doSkillBomb","doGameOver","rIndex","rPos","TIP","dis","getDistance","BSIZE","blockIndexArr","showPlaceTip","checkCombine","arr","bIndex","showCount","blocks","isPlaced","isHideAny","isShow","getReadyBlockStatus","checkReadyStatus","hapticSuccesNotification","setCombo","num","showLoseBuyShufflePopup","getChannelMembership","showFreeBombForAdPopup","showFreeBombForSubscribePopup","hapticErrorNotification","layers","layer","parseInt","stopAllActions","moveTo","delayTime","act3","act4","callFunc","setUsedSkillsLabels","activeColor","color","unactiveColor","showSkillsUsedMessage","msg","gravity","bg_color","postBonusTransaction","responce","buyCoins","doSkillSelectNewBlock","decrementShuffleAndUpdate","decrementBombsAndUpdate","decrementChangeBlockAndUpdate","doCount","showVideoAd","getPlatform","SKILL_SHUFFLE","blockStatusArr","blockReadyIndexArr","tempReadyCompArr","_loop_3","this_3","com","SHOP","coins_amount","postInvoiceStars","invoice_link","openInvoice","balance_stars","is_premium","closeFreeBombPopup","patchBonusesAmount","LoadingLayer","loadfill","progress","connect","loadingImage","by","angle","setString","text","ALocaleLabel_1","LocalizationManager","langCode","refreshUI","key","jsonLocalization","en","ua","de","es","ru","cs","sk","pl","getComponentsInChildren","testKey","loading","coins_balance","btn_yes","btn_no","main_start_btn","main_bottom_tab_1","main_bottom_tab_2","main_bottom_tab_3","main_bottom_tab_4","main_bottom_tab_5","main_bottom_tab_6","settings_title","settings_sounds","settings_music","settings_language","settings_lang_ua","settings_lang_en","settings_lang_de","settings_lang_es","settings_lang_ru","settings_lang_cs","settings_lang_sk","settings_lang_pl","leaderboard_tab_1","leaderboard_tab_2","leaderboard_winner_best_label","leaderboard_winner_sum_label","leaderboard_title","leaderboard_giveaway","leaderboard_giveaway_winners","leaderboard_points","leaderboard_nickname","giveaway_title","giveaway_pool_title","giveaway_bullet_1","giveaway_bullet_2","giveaway_bullet_3","giveaway_bullet_4","giveaway_place_1","giveaway_place_2","giveaway_place_3","giveaway_place_4","giveaway_place_5","giveaway_place_6","giveaway_time_left_label","tasks_title","tasks_daily","tasks_invite","tasks_invite_title","tasks_invite_detail_1","tasks_invite_detail_2","tasks_invite_button","reward_each_hour","reward_each_hour_challange","reward_each_hour_challange_top","reward_each_hour_challange_points","tasks_done","tasks_streak","games_weekly_challange_title","games_weekly_challange_text","subtask_ads","subtask_reaction_to_post","subtask_play_game","profile_title","profile_account_owner","profile_support","profile_guidebook","profile_privacy","profile_partnerhsip","profile_no_ads","disable_ads_popup_title","disable_ads_popup_descprition","success_ads_popup_title","success_ads_popup_descprition","shop_title","shop_descprition","exit_title","exit_main_button","exit_restart_button","lose_title","lose_score","lose_score_best","lose_new_game_button","all_time_best","hints_popup_title","hints_used","btn_hint_1","btn_hint_2","btn_hint_3","hint_confirm_title","hint_confirm_desc_1","hint_confirm_desc_2","hint_confirm_desc_3","hint_confirm_desc_1_use","hint_confirm_desc_2_use","hint_confirm_desc_3_use","hint_select_blowup_place","hint_select_block_1","hint_select_block_2","givaway_card_title","givaway_card_about","givaway_card_collected","givaway_card_time_end","giveaway_history_title","giveaway_history_combined_title","giveaway_history_detail","lose_no_space_title","lose_no_space_detail","btn_watch_ad","lose_no_space_detail_subscribe","lose_no_space_detail_buy_shuffle","btn_subscribe_now","btn_refresh","btn_support","http_error_1_title","http_error_1_detail","http_error_2_title","http_error_2_detail","http_error_3_title","http_error_3_detail","http_error_4_title","http_error_4_detail","games_weekly_text","games_weekly_text_2","games_weekly_title","games_weekly_title_2","games_weekly_played","games_weekly_played_2","btn_see_leaderboard","output_main_title","output_out_title","output_main_btn","output_main_label_1","out_bullet_1","out_bullet_2","out_bullet_3","output_out_label_1","output_out_label_2","output_out_btn","club_title","club_winners_label","club_tournament_till_end","club_tournament_title","club_tournament__text","club_tournament_prize","club_history_title","LoseLayer","btnRevive","btnHome","best_score","onReviveClick","rendor","MainLayer","btnPause","onPauseClick","MenuLayer","btnStart","btnGiveaway","giveaway","giveawayPanel","btnCloseGiveaway","labelGiveawayStarsAmount","labelGiveawayStarsDollarsAmount","labelGiveawayTimeLeft","labelGiveawayPanelStarsAmount","labelGiveawayPanelTimeLeft","btnGamesWeekly","panelGamesWeekly","btnCloseGamesWeekly","btnSeeLeaderboardWeekly","labelGamesWeeklyFill","labelGamesWeeklyAmount","labelGamesWeeklyPanelFill","labelGamesWeeklyPanelAmount","labelGamesWeeklyPanelTimeLeft","btnGamesTotalWeekly","panelGamesTotalWeekly","btnCloseGamesTotalWeekly","btnSeeLeaderboardTotalWeekly","labelGamesTotalWeeklyFill","labelGamesTotalWeeklyAmount","labelGamesTotalWeeklyPanelFill","labelGamesTotalWeeklyPanelAmount","labelGamesTotalWeeklyPanelTimeLeft","setGamesTotalWeeklyAmount","onStartClick","onShopClick","onGiveawayClick","onCloseGiveawayClick","onGamesWeeklyClick","onCloseGamesWeeklyClick","onGamesWeeklyLeaderboardClick","onGamesTotalWeeklyClick","onCloseGamesTotalWeeklyClick","onGamesTotalWeeklyLeaderboardClick","getCurrentPrizePool","secondsToNextMonday","seconds_to_next_monday","setSeconds","getSeconds","starsToDollars","getGamesMaxPoints","getRemainingTimeToDateMinutes","monetagLoadPromise","dataset","zone","sdk","monetagLoadPromise2","_monetagJS","_monetagJS_2","MonetagController_1","preloadRewarded_Interstitial","show_8867073","timeoutSeconds","timeout","showRewarded_Popup","show_8867074","preloadInApp_Interstitial","show_8867075","old_1_showRewarded_Interstitial","old_1_showInApp_Interstitial","showOncklicka_Rewarded_1","old_2_showRewarded_Interstitial","old_2_showInApp_Interstitial","show_6065984","preloadAd_Test","NoConnectionErrorLayer","NO_CONNECTION_ERROR","OutputLayer","btn_next","btn_out","btn_out_not_active","btn_close_out","panel_main","panel_out","edit_box","EditBox","onCloseOutClick","onNextClick","onOutClick","onEditBegan","onEditEnded","validateInput","inputStr","trim","max","isNaN","postWithdrawStars","openTelegramLinkBank","scrollTo","value","canOut","removeEventListener","preventScroll","PoolManager","_dictPool","_dictPrefab","copyNode","copynode","hasOwnProperty","pool","instantiate","NodePool","prefab","tempPre","putNode","put","clearPool","setPrefab","getPrefab","ProfileLayer","avatarNode","nameNode","btnSettings","btnTutorial","btnTryGame","btnPrivacy","btnPartership","btnGuidebookRules","btnOpenDisableAdsPopup","btnCloseDisableAdsPopup","btnBuyDisableAds","btnCloseSuccessAdsPopup","disableAdsPopup","successAdsPopup","onDisableAdsClickOpen","onDisableAdsClickClose","onBuyDisableAdsClick","onSuccessAdsClickClose","onSettingsClick","onTutorialClick","onTryGameClick","onPrivacyClick","onPartnershipClick","onGuidebookClick","openLinkPrivacy","openLinkPartnership","openLinkGuidebook","openDisableAdsPopup","postInvoicePremium","ResourceManager","clipMap","spriteMap","jsonMap","rate","resources","loadDir","finished","total","assets","asset","getSprite","getJson","TelegramAdsController","triggerNativeNotification","SdkManager","shareTitle","shareImg","videoId","videoAd","interstitialId","interstitialAd","bannerId","bannerAd","customRowId","customRowAd","customColId","customColAd","videoRecorder","videoRecordState","videoStartTime","videoRecordTime","videoPath","videoIsExist","videoTopics","WECHAT_GAME","BYTEDANCE_GAME","activeShare","imageUrl","query","shareAppMessage","showShareMenu","fail","onShareAppMessage","getShareQuery","getLaunchOptionsSync","turnToApp","appId","navigateToMiniProgram","turnToBrowser","open","onAudioInterruptionEnd","winSize","getSystemInfoSync","createBannerAd","adUnitId","adIntervals","style","windowHeight","left","top","windowWidth","onResize","realHeight","realWidth","onError","createInterstitialAd","showInterstitialAd","createRewardedVideoAd","offClose","onClose","isEnded","undefined","load","createCustomAd","screenWidth","screenHeight","fixed","toggleCustomRowAd","toggleCustomColAd","postMessage","setRank","recordingVideoStart","getGameRecorderManager","onStart","duration","onStop","recordingVideoEnd","recordingVideoShare","channel","extra","createChallenge","isVideoExist","getLoginCode","callback","obj","login","code","getLoginInfo","getSetting","authSetting","getUserInfo","userInfo","user","openid","uuid","nickname","nickName","gender","avatar","avatarUrl","button_1","createUserInfoButton","backgroundColor","fontSize","textAlign","lineHeight","onTap","destroy","getLoginInfoLocal","substring","ServerResponceErrorLayer","SettingLayer","btnLangUa","btnLangEn","btnLangDe","btnLangEs","btnLangRu","toggleContainer","togglesNode","toggleEN_node","toggleUK_node","toggleDE_node","toggleES_node","toggleRU_node","toggleCS_node","toggleSK_node","togglePL_node","toggleEN","toggleUK","toggleDE","toggleES","toggleRU","toggleCS","toggleSK","togglePL","ToggleContainer","Toggle","setupListeners","renderCurrentLanguage","isChecked","ShopLayer","btn_close","btn_shop_1","btn_shop_2","btn_shop_3","coins_amount_label","onBackClick","onBuyPack1Click","onBuyPack2Click","onBuyPack3Click","fetchCoins","buyCoinsForStars","buyRemoveAds","fetchPremiumStatus","SizeFitter","fitWidht","fit","canvas","designResolution","frameSize","designAspectRatio","frameAspectRatio","newWidth","Boolean","displayName","setUIManager","Tads","adController","widgetId","Tads_1","tryInit","debug","onShowReward","adId","onClickReward","onAdsNotFound","loadAd","showAd","DailyTaskItem_1","HourlyChallangeItem_1","TasksLayer","info_popup","week_tasks_bar","week_tasks_bar_base","week_tasks_bar_streak","week_tasks_bar_fill","week_tasks_bar_amount","week_tasks_bar_streak_amount","info_popup_tasks_fill","info_popup_tasks_amount","info_popup_streak","info_popup_streak_amount","info_popup_timeLeft","dailyPanel","invitePanel","btnDailyTab","btnInviteTab","btnInviteFriend","dailyPanelContent","onTabDailyClick","onTabInviteClick","onInviteFriendClick","openInfoPopupClick","closeInfoPopupClick","setWeeklyAmount","setStreakAmount","completed_tasks","weekly_streak","setDailyTasks","days","fetchHourlyChallange","hourly_challenge_item","tasks","shareReferral","tgLoadPromise","Telegram","WebApp","_tgWebAppJS","TelegramWebApp_1","openTelegramLink","CHANNEL_INVITE_URL","SUPPORT_URL","BANK_URL","openLink","share","shareUrl","encodeURIComponent","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","REFERRAL_URL","getTelegramWebAppInitData","initDataUnsafe","initData","alert","showAlert","HapticFeedback","impactOccurred","hapticMediumImpact","notificationOccurred","TestManager","apiClient","getTest","postTest","ThemeSetter","btn_theme_switch","node_theme_dark","node_theme_light","node_score_max_icon","label_coins","label_score_current","label_score_max","label_score_max_text","sprite_background","sprite_coins","sprite_theme_switch","sprite_board","sprite_slot_ready_1","sprite_slot_ready_2","sprite_slot_ready_3","frame_panel_coin","frame_panel_coin_dark","frame_board","frame_board_dark","frame_ready_item","frame_ready_item_dark","switchCurrentTheme","setTheme","setLabels","setSprites","setBackground","darkThemeColor","lightThemeColor","lightTheme_darkBlueText","lightTheme_darkGrayText","darkTheme_grayText","ToastManager","_e","director","getScene","getComponentInChildren","bgNode","group","textNode","textLabel","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","PI","lineTo","fillColor","addChild","action","moveBy","UIManager","uiMap","getActiveTypes","types","ENUM_SCROLL_DIR","UIScrollControl","scrollView","contentSize","scrollDirection","V","totalCount","itemCount","childrenList","itemDistance","contentSizeStart","isStartFlag","theMaxID","refreshCB","_tempNode","_totalCount","_size","_dir","callBack","ScrollView","setAnchorPoint","_maskWidget","Widget","isAlignLeft","isAlignRight","right","isAlignTop","isAlignBottom","bottom","Size","_tempCount","H","scrollEvents","eventHandler","EventHandler","component","handler","initShowAreaItems","_temp_node","curPos","onRefresh","OnScroll","scrollOffset","getScrollOffset","offset","refreshLayout","_curOffset","_max_rect_size","_index","_min_index","refreshItem","_node_index","curPosition","Vec2","ZERO","nodeIndex","number_of_ads","stars_amount","patchBonuses","getTransactions","getTransactionById","postCoinsTransaction","comission_amount","amount_stars","commission","transactionType","getGames","timeStamp","game_token","scorePoints","buyAmount","getBloggerClubLeaderboard","getBloggerClubLeaderboardSumPoints","getBloggerClubWinners","getBloggerPrizePool","getBloggerPrizePoolLastDrawn","getRemainingTimeToDate","targetDate","diffMs","hours","minutes","jsonString","secret","createHash","encoder","TextEncoder","encode","crypto","subtle","digest","hashBuffer","Array","from","Uint8Array","map","padStart","join","getPatchBonusesDto","bomb_new_amount","shuffle_new_amount","change_block_new_amount","setFrameSize","setDesignResolutionSize","ResolutionPolicy","FIXED_HEIGHT","starsCoins","vibrate","navigator","lower","upper","shuffle","randomIndex","temp","flag","sortSpriteNameByNum","frames","getNumberInSpriteName","match","formatSeconds","dateFormat","Number","h","String","s","replace","end","sqrt","getAngle","dx","dy","signAngle","toXY","node1","node2","wxAvatar","isCached","time","loader","d","c","r","getUTCRemainingTimeToEndOfWeek","nowUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","daysRemaining","getUTCDay","timeDifference","getUTCRemainingTimeToEndOfWeekToSeconds","toLocaleString","timeZone","score_points","onLine","patchBonusesNewAmount","WinLayer","btnNext","btnShare","onShareClick","WIN","root","factory","modules","installedModules","__webpack_require__","moduleId","module","l","m","getter","o","enumerable","Symbol","toStringTag","t","__esModule","ns","bind","n","object","p","./index.js","./lib/adapters/xhr.js","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","responseType","isFormData","request","XMLHttpRequest","auth","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","toUpperCase","paramsSerializer","onreadystatechange","readyState","responseURL","indexOf","onabort","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","./lib/axios.js","Axios","mergeConfig","createInstance","defaultConfig","extend","axios","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","./lib/cancel/Cancel.js","__CANCEL__","./lib/cancel/CancelToken.js","executor","TypeError","resolvePromise","reason","throwIfRequested","source","./lib/cancel/isCancel.js","./lib/core/Axios.js","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","silentJSONParsing","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","concat","shift","newConfig","onFulfilled","onRejected","getUri","./lib/core/InterceptorManager.js","handlers","use","eject","fn","./lib/core/buildFullPath.js","isAbsoluteURL","combineURLs","requestedURL","./lib/core/createError.js","enhanceError","./lib/core/dispatchRequest.js","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","./lib/core/enhanceError.js","toJSON","description","number","fileName","lineNumber","columnNumber","stack","./lib/core/mergeConfig.js","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","isPlainObject","isArray","slice","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","filter","./lib/core/settle.js","validateStatus","./lib/core/transformData.js","fns","./lib/defaults.js","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","strictJSONParsing","isString","maxContentLength","maxBodyLength","./lib/helpers/bind.js","thisArg","args","./lib/helpers/buildURL.js","serializedParams","parts","v","isDate","hashmarkIndex","./lib/helpers/combineURLs.js","relativeURL","./lib/helpers/cookies.js","write","expires","domain","secure","cookie","isNumber","toGMTString","RegExp","decodeURIComponent","remove","./lib/helpers/isAbsoluteURL.js","test","./lib/helpers/isAxiosError.js","./lib/helpers/isURLSameOrigin.js","originURL","msie","userAgent","urlParsingNode","pathname","resolveURL","href","protocol","host","search","hash","hostname","port","charAt","requestURL","parsed","./lib/helpers/normalizeHeaderName.js","normalizedName","./lib/helpers/parseHeaders.js","ignoreDuplicateOf","line","substr","./lib/helpers/spread.js","./lib/helpers/validator.js","pkg","thing","deprecatedWarnings","currentVerArr","version","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","./lib/utils.js","getPrototypeOf","isFunction","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","str","stripBOM","charCodeAt","./package.json","define","amd","StartGameDto","FinishGameDto","CreateStarsInvoiceDto","CreatePremiumInvoiceDto","WINNING_AMOUNT_ADDITIONAL_PLACES","WINNING_AMOUNT_ADDITIONAL_PRIZE","WINNING_PERCENT_1st_PLACE","WINNING_PERCENT_2st_PLACE","WINNING_PERCENT_3st_PLACE","WINNING_PERCENT_4st_PLACE","WINNING_PERCENT_5st_PLACE","prizeAmount","CreateUserTransactionDto","UserTransactionsType","TRANSACTION_AMOUNTS","BUY_SHUFFLE","BUY_BOMB","BUY_CHANGE_BLOCK","BUY_PREMIUM","CreateUserDto","UpdateUserDto","UserAuthDto","GetUserAuthDto","GetUserDailyTasksDto","UserDailyTasksDto","TaskDto","SubTaskDto","PatchTaskDto","PatchTaskDataDto","PatchBonusesDto","BonusesDto","LashHourLeaderDto","GetServerTimeDto","ServerTimestampDto"],"mappings":"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","sourcesContent":["import LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ALocaleLabel extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    stringLocalizationKey: string = 'testKey';\r\n\r\n    onLoad () {\r\n        this.fetchRender();\r\n    }\r\n\r\n    onEnable(): void {\r\n        this.fetchRender();\r\n    }\r\n\r\n    fetchRender () {\r\n        let label = this.getComponent(cc.Label);\r\n        if (label) {\r\n            this.label = label;\r\n            this.updateLabel();\r\n            return;\r\n        } \r\n    }\r\n\r\n    updateLabel () {\r\n        if (!this.label) {\r\n            cc.error('Failed to update localized label, label component is invalid!');\r\n            return;\r\n        }\r\n        let localizedString = LocalizationManager.instance.getLocalizedString(this.stringLocalizationKey);\r\n        if (localizedString) {\r\n            this.label.string = localizedString;\r\n        }\r\n    }\r\n}\r\n\r\n","const {ccclass, property} = cc._decorator;\r\n\r\nconst adsGramLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://sad.adsgram.ai/js/sad.min.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Adsgram) {\r\n                    resolve((window as any).Adsgram);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load AdsGram SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\n@ccclass('AdsGramController')\r\nexport class AdsGramController {\r\n    private static _instance: AdsGramController;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): AdsGramController {\r\n        if (!AdsGramController._instance) {\r\n            AdsGramController._instance = new AdsGramController();\r\n        }\r\n        return AdsGramController._instance;\r\n    }\r\n\r\n    private _adsGramJS: any = null;\r\n    private rewarded_adController: AdController = null;\r\n    private interstitial_adController: AdController = null;\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._adsGramJS = await adsGramLoadPromise;\r\n\r\n        if (this._adsGramJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n\r\n    public getAdsGram() {\r\n        return this._adsGramJS;\r\n    }\r\n\r\n    public initAdsContorllers(){\r\n\r\n       // const initParams : AdsgramInitParams = new(){};\r\n\r\n        const adsgram = this.getAdsGram();\r\n        const rewarder_adController = adsgram.init({\r\n            blockId: \"9539\", \r\n            //debug: true,\r\n            debugBannerType: \"FullscreenMedia\"\r\n        });\r\n        this.rewarded_adController = rewarder_adController;\r\n\r\n\r\n        const interstitial_adController = adsgram.init({\r\n           blockId: \"int-9540\", \r\n           //debug: true,\r\n           debugBannerType: \"FullscreenMedia\"\r\n       });\r\n\r\n        this.interstitial_adController = interstitial_adController;\r\n\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<ShowPromiseResult>{\r\n        return this.rewarded_adController.show();\r\n    }\r\n\r\n    public showAd_Intersitital() : Promise<ShowPromiseResult>{\r\n        return this.interstitial_adController.show();\r\n    }\r\n\r\n    public showFullscreenAd(){ //rewarded\r\n        this.rewarded_adController.show().then((result: ShowPromiseResult) => {\r\n            // user watch ad till the end or close it in interstitial format\r\n            // your code to reward user for rewarded format\r\n\r\n            console.log(`AdsGram ad watched ${result}`)\r\n\r\n        }).catch((result: ShowPromiseResult) => {\r\n            // user get error during playing ad or skip ad\r\n            // do nothing or whatever you want\r\n\r\n            console.log(`AdsGram ad error: ${result}`)\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport interface ShowPromiseResult {\r\n    done: boolean;\r\n    description: string;\r\n    state: 'load' | 'render' | 'playing' | 'destroy';\r\n    error: boolean;\r\n  }\r\n  \r\n  type BannerType = 'RewardedVideo' | 'FullscreenMedia';\r\n  \r\n  interface AdsgramInitParams {\r\n    blockId: string;\r\n    debug?: boolean;\r\n    debugBannerType?: BannerType;\r\n  }\r\n  \r\n  type EventType =\r\n    | 'onReward'\r\n    | 'onComplete'\r\n    | 'onStart'\r\n    | 'onSkip'\r\n    | 'onBannerNotFound'\r\n    | 'onNonStopShow'\r\n    | 'onError';\r\n  type HandlerType = () => void;\r\n  \r\n  export interface AdController {\r\n    show(): Promise<ShowPromiseResult>;\r\n    addEventListener(event: EventType, handler: HandlerType): void;\r\n    removeEventListener(event: EventType, handler: HandlerType): void;\r\n    destroy(): void;\r\n  }\r\n  \r\n  declare global {\r\n      interface Window {\r\n        Adsgram?: {\r\n          init(params: AdsgramInitParams): AdController;\r\n        };\r\n      }\r\n  }","import { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\nimport { Tads } from \"./tads/Tads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst STORAGE_KEY = \"ads_view_data\";\r\n\r\n@ccclass('AdsManagerForBank')\r\nexport class AdsManagerForBank {\r\n    private static _instance: AdsManagerForBank;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManagerForBank {\r\n        if (!AdsManagerForBank._instance) {\r\n            AdsManagerForBank._instance = new AdsManagerForBank();\r\n        }\r\n        return AdsManagerForBank._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n    private tads: Tads;\r\n\r\n    private currentProviderIndex: number = 0;\r\n\r\n    private viewData: ViewData = {\r\n        day: '',\r\n        dayCount: 0,\r\n        hour: 0,\r\n        hourCount: 0\r\n    };\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'tads',\r\n            show: () => this.tads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n\r\n        this.loadViewData();\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        if (!this.canShowAd()) {\r\n            console.warn(\"Ad limit reached (per hour or per day)\");\r\n            return false;\r\n        }\r\n\r\n        const maxAttempts = this.rewarded_providers.length;\r\n        let attempts = 0;\r\n        let success = false;\r\n\r\n        while (attempts < maxAttempts) {\r\n            const provider = this.rewarded_providers[this.currentProviderIndex];\r\n            this.currentProviderIndex = (this.currentProviderIndex + 1) % this.rewarded_providers.length;\r\n\r\n            success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                this.updateViewData();\r\n                break;\r\n            }\r\n            attempts++;\r\n        }\r\n\r\n        if (!success) {\r\n            console.warn(\"No ad was successfully shown from any provider.\");\r\n        }\r\n        return success;\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad! Get your reward...');\r\n\r\n    }\r\n\r\n\r\n    private canShowAd(): boolean {\r\n        const now = new Date();\r\n\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        return this.viewData.dayCount < 100 && this.viewData.hourCount < 10;\r\n    }\r\n\r\n    private updateViewData() {\r\n        const now = new Date();\r\n        const today = now.toISOString().split('T')[0];\r\n        const currentHour = now.getHours();\r\n\r\n        if (this.viewData.day !== today) {\r\n            this.viewData.day = today;\r\n            this.viewData.dayCount = 0;\r\n        }\r\n\r\n        if (this.viewData.hour !== currentHour) {\r\n            this.viewData.hour = currentHour;\r\n            this.viewData.hourCount = 0;\r\n        }\r\n\r\n        this.viewData.dayCount += 1;\r\n        this.viewData.hourCount += 1;\r\n\r\n        this.saveViewData();\r\n    }\r\n\r\n    private loadViewData() {\r\n        const json = localStorage.getItem(STORAGE_KEY);\r\n        if (json) {\r\n            try {\r\n                this.viewData = JSON.parse(json);\r\n            } catch (e) {\r\n                console.warn(\"Failed to parse view data:\", e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private saveViewData() {\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(this.viewData));\r\n    }\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\ninterface ViewData {\r\n    day: string;\r\n    dayCount: number;\r\n    hour: number;\r\n    hourCount: number;\r\n}\r\n","import { setDesignResolution } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { AdsGramController } from \"./ads-gram/AdsGram\";\r\nimport { MonetagController } from \"./monetag/Monetag\";\r\nimport { Onclicka } from \"./onclicka/Onclicka\";\r\nimport { Richads } from \"./richads/Richads\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass('AdsManager')\r\nexport class AdsManager {\r\n    private static _instance: AdsManager;\r\n    private constructor() {}\r\n\r\n    public static get Instance(): AdsManager {\r\n        if (!AdsManager._instance) {\r\n            AdsManager._instance = new AdsManager();\r\n        }\r\n        return AdsManager._instance;\r\n    }\r\n\r\n    private monetag: MonetagController;\r\n    private adsGram: AdsGramController;\r\n    private onclicka: Onclicka;\r\n    private richads: Richads;\r\n\r\n    public async init() {\r\n        console.log(\"INITIALIZING ADS...\");\r\n\r\n        this.monetag = MonetagController.Instance;\r\n        this.adsGram = AdsGramController.Instance;\r\n        this.onclicka = Onclicka.Instance;\r\n        this.richads = Richads.Instance;\r\n\r\n        this.monetag.init().then(res => {\r\n            console.log(\"MonetagController init succes: \", res.success);\r\n        })\r\n\r\n        this.onclicka.init()\r\n\r\n        try{\r\n            await this.adsGram.init()\r\n            AdsGramController.Instance.initAdsContorllers();\r\n            console.log(\"adsgram init succes: \", true);\r\n        }\r\n        catch(error) {\r\n            console.warn(`Failed to init adsgram:`, error);\r\n        }\r\n    }\r\n\r\n\r\n    public async showAd_Rewarded_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.rewarded_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    public async showAd_InApp_Intestitial(): Promise<boolean> {\r\n        for (const provider of this.inApp_providers) {\r\n            const success = await this.tryShowAdFromProvider(provider);\r\n            if (success) {\r\n                await this.patchAd();\r\n                setDesignResolution(); //fix for onclicka resolution change bug\r\n                return success;\r\n            }\r\n        }\r\n        console.warn('No ad was successfully shown from any provider.');\r\n    }\r\n\r\n    private async tryShowAdFromProvider(provider: AdProvider): Promise<boolean> {\r\n        try {\r\n            if (provider.requiresPreload) {\r\n                await provider.preload?.();\r\n                console.log(`Ad successfully preloaded from: ${provider.name}`);\r\n            }\r\n            \r\n            await provider.show();\r\n            console.log(`Ad successfully shown from: ${provider.name}`);\r\n            return true;\r\n        } catch (error) {\r\n            console.warn(`Failed to show ad from: ${provider.name}`, error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private patchAd() {\r\n        console.log('You have seen ad ad!');\r\n        try { UserController.Instance?.patchAd(); }\r\n        catch { e => console.log(e) }\r\n    }\r\n\r\n\r\n    private rewarded_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadRewarded_Interstitial_Timeout(),\r\n            show: () => this.monetag.showRewarded_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'richads',\r\n            show: () => this.richads.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n\r\n    private inApp_providers: AdProvider[] = [\r\n        {\r\n            name: 'monetag',\r\n            preload: () => this.monetag.preloadInApp_Interstitial_Timeout(),\r\n            show: () => this.monetag.showInApp_Interstitial(),\r\n            requiresPreload: true,\r\n        },\r\n        {\r\n            name: 'onclicka',\r\n            show: () => this.onclicka.showAd_Rewarded(),\r\n            requiresPreload: false,\r\n        },\r\n        {\r\n            name: 'adsGram',\r\n            show: () => this.adsGram.showAd_Intersitital(),\r\n            requiresPreload: false,\r\n        },\r\n    ];\r\n}\r\n\r\ninterface AdProvider {\r\n    name: string;\r\n    preload?: () => Promise<any>;\r\n    show: () => Promise<any>;\r\n    requiresPreload: boolean;\r\n}\r\n\r\n\r\n","import {ApiClient} from \"./ApiClient\";\r\nimport { Headers } from './ApiTypes';\r\n\r\nexport class ApiClientFactory {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers = {}\r\n    ) {}\r\n\r\n    public createClient(): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers);\r\n    }\r\n\r\n    public createAuthorizedClient(authToken: string): ApiClient {\r\n        return new ApiClient(this.baseUrl, this.headers, authToken);\r\n    }\r\n}","//import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\r\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"../modules/axios\";\r\nimport {\r\n    Forbidden,\r\n    HttpError,\r\n    Unauthorized\r\n} from './ApiErrors';\r\nimport { Headers } from './ApiTypes';\r\n\r\n\r\nexport class ApiClient {\r\n    constructor(\r\n        private readonly baseUrl: string,\r\n        private readonly headers: Headers,\r\n        private readonly authToken: string = \"\"\r\n    ) {}\r\n\r\n    public async get(endpoint: string = \"\", params?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient(params);\r\n            const response = await client.get(endpoint);\r\n\r\n             // Ensure the status code is in the success range\r\n             if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error: any) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async post(endpoint: string = \"\", data?: any): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, data);\r\n\r\n            console.log(\"post\", response.status, response.data)\r\n\r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    public async patch(endpoint: string = \"\", data?: any): Promise<any> {\r\n\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.patch(endpoint, data);\r\n    \r\n            console.log(\"patch\", response.status, response.data);\r\n    \r\n            // Ensure the status code is in the success range\r\n            if (response.status >= 200 && response.status < 300) {\r\n                return response.data;\r\n            } else {\r\n                throw new Error(`Unexpected response status: ${response.status} data: ${response.data}`);\r\n            }\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }    \r\n\r\n    public async uploadFile(endpoint: string = \"\", formData: FormData): Promise<any> {\r\n        try {\r\n            const client = this.createClient();\r\n            const response = await client.post(endpoint, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                }\r\n            })\r\n            return response.data;\r\n        } catch (error) {\r\n            this.handleError(error);\r\n        }\r\n    }\r\n\r\n    private createClient(params: object = {}): AxiosInstance {\r\n        const config: AxiosRequestConfig = {\r\n            baseURL: this.baseUrl,\r\n            headers: this.headers,\r\n            params: params\r\n        }\r\n        if (this.authToken) {\r\n            config.headers = {\r\n                Authorization: `tma ${this.authToken}`,\r\n                \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n            }\r\n        }\r\n        return axios.create(config);\r\n    }\r\n\r\n    private handleError(error: any): never {\r\n        throw error;\r\n    }\r\n}","// Base HTTP Error\r\nexport class HttpError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.name = \"HttpError\";\r\n    }\r\n}\r\n\r\n// Unauthorized Error (HTTP 401)\r\nexport class Unauthorized extends HttpError {\r\n    constructor(message: string = \"Unauthorized\") {\r\n        super(message);\r\n        this.name = \"Unauthorized\";\r\n    }\r\n}\r\n\r\n// Forbidden Error (HTTP 403)\r\nexport class Forbidden extends HttpError {\r\n    constructor(message: string = \"Forbidden\") {\r\n        super(message);\r\n        this.name = \"Forbidden\";\r\n    }\r\n}","//const API_URL = \"localhost:1234\";\r\n\r\nexport default class ApiManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ApiManager>()\r\n    }\r\n\r\n    init(){\r\n    }\r\n\r\n    public async getData(url: string) {\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            console.log(\"Data received:\", data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    }\r\n\r\n    async postData(url: string, payload: object) {\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(payload),\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const result = await response.json();\r\n            console.log(\"Data posted successfully:\", result);\r\n        } catch (error) {\r\n            console.error(\"Error posting data:\", error);\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP } from './../Enum';\r\nimport DataManager from './DataManager';\r\nimport ResourceManager from \"./ResourceManager\"\r\n\r\nexport default class AudioManager {\r\n    private audioSource: cc.AudioSource = null\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<AudioManager>()\r\n    }\r\n\r\n    init(){\r\n        this.audioSource = new cc.AudioSource()\r\n        this.audioSource.loop = true\r\n        this.audioSource.volume = 0.3\r\n    }\r\n\r\n    async playMusic(){\r\n        if(!DataManager.instance.isMusicOn) return\r\n        if(this.audioSource.clip){\r\n            this.audioSource.play()\r\n            return\r\n        }\r\n        const clip = await ResourceManager.instance.getClip(ENUM_AUDIO_CLIP.BGM)\r\n        this.audioSource.clip = clip\r\n        this.audioSource.play()\r\n    }\r\n\r\n    stopMusic(){\r\n        this.audioSource.stop()\r\n    }\r\n\r\n    async playSound(name: ENUM_AUDIO_CLIP | string, isLoop: boolean = false){\r\n        if(!DataManager.instance.isSoundOn) return\r\n        const clip = await ResourceManager.instance.getClip(name)\r\n        return cc.audioEngine.playEffect(clip, isLoop)\r\n    }\r\n\r\n    stopSound(audioId: number){\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n}\r\n"," export default class AvatarLoader {\r\n    static loadAvatar(photoUrl: string, spriteNode: cc.Node) {\r\n        if (!photoUrl) {\r\n            console.warn(\"No photo URL provided.\");\r\n            return;\r\n        }\r\n\r\n        // Ensure the node has a Sprite component\r\n        const sprite = spriteNode.getComponent(cc.Sprite);\r\n        if (!sprite) {\r\n            console.error(\"Provided node does not have a Sprite component.\");\r\n            return;\r\n        }\r\n\r\n        //photoUrl = \"https://t.me/i/userpic/320/2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg\";\r\n\r\n        // Load image from the URL\r\n        cc.assetManager.loadRemote(photoUrl, (err, texture: cc.Texture2D) => {\r\n            if (err) {\r\n                console.error(\"Failed to load avatar:\", err);\r\n                return;\r\n            }\r\n\r\n            // Apply the texture to the sprite\r\n            sprite.spriteFrame = new cc.SpriteFrame(texture);\r\n        });\r\n    }\r\n}","// Created by carolsail\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseLayer extends cc.Component {\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    zoomIn(node: cc.Node, scale: number = 1.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    zoomOut(node: cc.Node, scale: number = 0.5, speed: number = 0.3) {\r\n        node.setScale(scale)\r\n        const act = cc.scaleTo(speed, 1)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n\r\n    flip(node: cc.Node) {\r\n        const act1 = cc.scaleTo(0.1, 0, 1)\r\n        const act2 = cc.scaleTo(0.1, 1, 1)\r\n        const act = cc.sequence(act1, act2)\r\n        cc.tween(node).then(act).start()\r\n    }\r\n}\r\n","import { ENUM_RBLOCK_STATUS } from \"../Enum\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockReady extends cc.Component {\r\n    @property\r\n    basicPos: cc.Vec2 = cc.v2(0, 0)\r\n    index: number = -1\r\n    pos: cc.Vec2 = null\r\n    size: cc.Size = null\r\n    scale: number = 0.45\r\n    isActive: boolean = false\r\n    currentPos: cc.Vec2 = null\r\n    status: ENUM_RBLOCK_STATUS = ENUM_RBLOCK_STATUS.SHOW\r\n\r\n    init(index: number, pos: cc.Vec2, scale: number = 0.6){\r\n\r\n        //console.log(\"INIT BLOCK \" + this.node.name + \" pos \" + pos + \" index \" + index);\r\n\r\n        this.index = index\r\n        this.pos = pos\r\n        this.node.scale = scale\r\n        this.node.setPosition(pos)\r\n        this.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n        this.node.getComponent(cc.Layout).enabled = false;\r\n        this.size = this.node.getContentSize();\r\n        //this.node.setContentSize(this.node.parent.getContentSize())\r\n    }\r\n\r\n    setOpacity(status: ENUM_RBLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean = true){\r\n        this.isActive = bool\r\n        if(bool){\r\n            const {x, y} = this.node\r\n            this.currentPos = cc.v2(x, y + 150)\r\n            this.node.setPosition(this.currentPos)\r\n            this.node.scale = 1\r\n            this.node.zIndex = 10\r\n            this.node.setContentSize(this.size)\r\n        }else{\r\n            //console.log(\"BLOCK SET ACTIVE FALSE \" + this.node.name + \" pos \" + this.pos + \" index \" + this.index);\r\n            this.node.setPosition(this.pos)\r\n            this.node.scale = this.scale\r\n            this.node.zIndex = 1\r\n            this.node.setContentSize(100 / this.scale, 100 / this.scale)\r\n        }\r\n    }\r\n\r\n    setMove(x: number, y: number){\r\n        if(this.currentPos){\r\n            const mx = this.currentPos.x + x\r\n            const my = this.currentPos.y + y\r\n            this.currentPos = cc.v2(mx, my)\r\n            this.node.setPosition(this.currentPos)\r\n        }\r\n    }\r\n\r\n    getRelPos(node: cc.Node){\r\n        const wpos = this.node.convertToWorldSpaceAR(this.basicPos)\r\n        const rpos = node.convertToNodeSpaceAR(wpos)\r\n        return rpos\r\n    }\r\n}\r\n","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-07 15:23:11 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 15:30:07\r\n */\r\n\r\nimport { ENUM_BLOCK_STATUS } from \"../Enum\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Block extends cc.Component {\r\n    x: number = -1\r\n    y: number = -1\r\n    index: number = -1\r\n    status: ENUM_BLOCK_STATUS = ENUM_BLOCK_STATUS.HIDE\r\n    isCombine: boolean = false\r\n\r\n    init(x: number, y: number, index: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.index = index\r\n        this.isCombine = false\r\n        this.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        this.setActive(false)\r\n    }\r\n\r\n    setOpacity(status: ENUM_BLOCK_STATUS) {\r\n        this.status = status\r\n        this.node.opacity = status\r\n    }\r\n\r\n    setActive(bool: boolean) {\r\n        this.node.getChildByName('active').active = bool\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BottomNavigationPanel extends cc.Component {\r\n\r\n    btnMain: cc.Node = null\r\n    btnLeaderboard: cc.Node = null\r\n    btnTasks: cc.Node = null\r\n    btnProfile: cc.Node = null\r\n    btnOutput: cc.Node = null\r\n    btnClub: cc.Node = null\r\n    \r\n    onLoad() {\r\n        this.btnMain = cc.find('btn_main', this.node)\r\n        this.btnLeaderboard = cc.find('btn_leader', this.node)\r\n        this.btnTasks = cc.find('btn_tasks', this.node)\r\n        this.btnProfile = cc.find('btn_profile', this.node)\r\n        this.btnOutput = cc.find('btn_out', this.node)\r\n        this.btnClub = cc.find('btn_club', this.node)\r\n\r\n\r\n        this.btnMain.on(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.on(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.on(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.on(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.on(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n        this.btnClub.on(cc.Node.EventType.TOUCH_START, this.onClubClick, this)\r\n\r\n        this.btnOutput.active = true;\r\n    }\r\n\r\n    onDestroy() {\r\n        //cc.Node.EventType.MOUSE_DOWN\r\n        this.btnMain.off(cc.Node.EventType.TOUCH_START, this.onMainClick, this)\r\n        this.btnLeaderboard.off(cc.Node.EventType.TOUCH_START, this.onLeaderboardClick, this)\r\n        this.btnTasks.off(cc.Node.EventType.TOUCH_START, this.onTasksClick, this)\r\n        this.btnProfile.off(cc.Node.EventType.TOUCH_START, this.onProfileClick, this)\r\n        this.btnOutput.off(cc.Node.EventType.TOUCH_START, this.onOutputClick, this)\r\n        this.btnClub.off(cc.Node.EventType.TOUCH_START, this.onClubClick, this)\r\n    }\r\n\r\n    onMainClick() {\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onLeaderboardClick() {\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTasksClick() {\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS)\r\n    }\r\n\r\n    onProfileClick() {\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE)\r\n    }\r\n\r\n    onOutputClick() {\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT)\r\n    }\r\n\r\n    onClubClick(){\r\n        this.hideAllPanels();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB)\r\n    }\r\n\r\n    hideAllPanels(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.OUTPUT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB_HISTORY, false)\r\n\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\nimport { delay } from \"../Utils\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ClubHistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then(async (response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n\r\n                await delay(100)\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB_HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB)\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { delay, getRemainingTimeToDateMs, getRemainingTimeToDateSeconds, setDesignResolution } from \"../Utils\";\r\nimport { WINNING_AMOUNT_ADDITIONAL_PRIZE, WINNING_AMOUNT_ADDITIONAL_PRIZES, WINNING_PERCENT_1st_PLACE as WINNING_PERCENT_1_PLACE, WINNING_PERCENT_2st_PLACE as WINNING_PERCENT_2_PLACE, WINNING_PERCENT_3st_PLACE as WINNING_PERCENT_3_PLACE, WINNING_PERCENT_4st_PLACE as WINNING_PERCENT_4_PLACE, WINNING_PERCENT_5st_PLACE as WINNING_PERCENT_5_PLACE, getPrizeAmount } from \"../constants/prize-pool.const\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ClubLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n    blogerItem: LeaderboardItem = null\r\n\r\n    info: cc.Node = null\r\n    content: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    blogger_name: cc.Label = null;\r\n    club_members: cc.Label = null;\r\n\r\n\r\n    tournament_bar: cc.Node = null\r\n    tournament_bar_base: cc.Node = null\r\n    tournament_bar_fill: cc.Sprite = null;\r\n    tournament_bar_time_left: cc.Label = null;\r\n\r\n    info_tournament_time_left: cc.Label = null;\r\n    info_tournament_prize: cc.Label = null;\r\n\r\n    onLoad() {\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n        this.blogerItem = cc.find('main/leaderboard_item_blogger', this.node).getComponent(LeaderboardItem);\r\n\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info)\r\n\r\n        this.blogger_name = cc.find('blogger_nickname', this.node).getComponent(cc.Label)\r\n        this.club_members = cc.find('users/label', this.node).getComponent(cc.Label)\r\n\r\n        //week task bar\r\n        this.tournament_bar = cc.find('main/tasks_weekly', this.node)\r\n        this.tournament_bar_base = cc.find('base', this.tournament_bar)\r\n        this.tournament_bar_fill = cc.find('fill_bar/fill', this.tournament_bar_base).getComponent(cc.Sprite)\r\n        this.tournament_bar_time_left = cc.find('time_left_layout/label', this.tournament_bar_base).getComponent(cc.Label)\r\n\r\n        this.info_tournament_time_left = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n        this.info_tournament_prize = cc.find('panel/used_hints/prize_layout/amount', this.info).getComponent(cc.Label)\r\n\r\n\r\n        this.btnWinners.on(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.tournament_bar.on(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n\r\n        this.youItem.node.active = false;\r\n\r\n        this.club_members.string = \"111\"\r\n        this.info_tournament_prize.string = \"111111\"\r\n        this.blogger_name.string = \"@test\"\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnWinners.off(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.tournament_bar.off(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const winningAmountTotal = DataManager.instance.prizePoolWinningAmount;\r\n        const winningAmount = (winningAmountTotal - WINNING_AMOUNT_ADDITIONAL_PRIZES) / 2;\r\n      \r\n\r\n        this.blogerItem.initBlogger(`@test`, 11111);\r\n\r\n        UserController.Instance?.getLeaderboard().then(async (response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                const youPrize = getPrizeAmount(response.user_position.position - 1, winningAmount);\r\n                youItem.init(you.position, `@${you.username}`, you.points, youPrize);\r\n                //youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n                }\r\n            }\r\n            \r\n            setDesignResolution();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n\r\n        if(DataManager.instance.nextMonday){\r\n            this.setTournamentEndFill(getRemainingTimeToDateMs(DataManager.instance.nextMonday), 604800000);\r\n        } \r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n           this.info_tournament_time_left.string = this.tournament_bar_time_left.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n\r\n\r\n           //this.setTournamentEndFill(getRemainingTimeToDateMs(DataManager.instance.nextMonday), 604800000);\r\n\r\n        } \r\n    }\r\n\r\n    setTournamentEndFill(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.tournament_bar_fill.fillRange = fillRange;\r\n    }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.CLUB_HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","declare var CryptoJS: any;\r\n\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport * as config from '../../config.js';\r\n\r\n\r\nexport default class ConfigLoader {\r\n    private static passphrase = \"cGYBfTthjUrwMW/LtOoaDdkFKtnPuAm+VC28dDgNNm9EK0rfX3ExiUgtCcz6v2h3\";\r\n\r\n    static async loadConfig(): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                // Decrypt the data\r\n                const decryptedBytes = CryptoJS.AES.decrypt(config.ENC_DATA, this.passphrase);\r\n                const decryptedConfig = JSON.parse(decryptedBytes.toString(CryptoJS.enc.Utf8));\r\n                resolve(decryptedConfig);\r\n            } catch (e) {\r\n                console.error(\"Decryption error:\", e);\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// ConfigLoader.loadConfig().then(config => {\r\n//     console.log(\"API Key:\", config.apiKey);\r\n// });","import { TaskDto } from \"../dtos/user.dto\";\r\nimport DailyTaskSubItem from \"./DailyTaskSubItem\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_0: DailyTaskSubItem | null = null;\r\n\r\n    @property(DailyTaskSubItem)\r\n    public sub_task_1: DailyTaskSubItem | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    public fill: cc.Sprite = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(dto: TaskDto){\r\n        this.id = dto.id;\r\n        this.reward = dto.reward;\r\n        this.amount = dto.amount;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(dto.reward);\r\n        \r\n        this.label_reward.string = `x${dto.amount}`;\r\n\r\n        this.sub_task_0.init(dto.sub_tasks[0], dto.id);\r\n        this.sub_task_1.init(dto.sub_tasks[1], dto.id);\r\n\r\n        var completed = 0;\r\n        var target = 0;\r\n\r\n        var isCompleted = true;\r\n\r\n        for (let i = 0; i < dto.sub_tasks.length; i++) {\r\n            isCompleted = isCompleted && (dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount);\r\n            completed +=  dto.sub_tasks[i].amount >= dto.sub_tasks[i].target_amount ? dto.sub_tasks[i].target_amount : dto.sub_tasks[i].amount;\r\n            target +=  dto.sub_tasks[i].target_amount;\r\n        }\r\n\r\n        this.setCompleted(isCompleted);\r\n        this.setFill(completed/target);\r\n    }\r\n\r\n    setFill(fill: number){\r\n        this.fill.fillRange = fill;\r\n    }\r\n\r\n    setCompleted(isCompleted: boolean){\r\n        this.node.opacity = isCompleted ? 130 : 255;\r\n    }\r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateJsonDataToken } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { BonusesDto, PatchBonusesDto, PatchTaskDataDto, PatchTaskDto, SubTaskDto } from \"../dtos/user.dto\";\r\nimport TasksLayer from \"../layer/TasksLayer\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DailyTaskSubItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_amount: cc.Label | null = null;\r\n\r\n    @property(cc.Button)\r\n    public btn: cc.Button | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_done: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public task_not_done: cc.Node | null = null;\r\n\r\n    public type: string = null;\r\n    public task_id: number = null;\r\n    public done_amount: number = null;\r\n\r\n    init(dto: SubTaskDto, task_id: number){\r\n        this.type = dto.type;\r\n        this.task_id = task_id;\r\n        this.label_name.string = LocalizationManager.instance.getLocalizedString(`subtask_${ dto.type}`);\r\n        this.done_amount = dto.amount;\r\n\r\n        const showAmount = dto.amount > dto.target_amount ? dto.target_amount : dto.amount;\r\n\r\n        this.label_amount.string = `${showAmount}/${dto.target_amount}`;\r\n\r\n        this.task_done.active = dto.amount >= dto.target_amount;\r\n        this.btn.interactable = this.task_not_done.active = !(this.task_done.active);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.btn?.node.on('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        //this.btn?.node.off('click', this.onButtonClicked, this)\r\n    }\r\n\r\n    onButtonClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        switch(this.type){\r\n            case \"ads\":\r\n                this.showRewardedAd();     \r\n                break;\r\n            case \"reaction_to_post\":\r\n                //open group and update\r\n                this.openTelegramGroup();\r\n                break;\r\n            case \"play_game\":\r\n                //start game\r\n                this.startGame();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async showRewardedAd(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.adWathcedSuccesfully();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        // //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.adWathcedSuccesfully();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.adWathcedSuccesfully();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    adWathcedSuccesfully(){\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    openTelegramGroup(){\r\n        TelegramWebApp.Instance.openTelegramLinkChannel();\r\n        this.incrementTaskAndUpdate();\r\n    }\r\n\r\n    async startGame(){\r\n        console.log(\"aaa\")\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    async incrementTaskAndUpdate(){\r\n        const data: PatchTaskDto = await this.getPatchTaskDto();\r\n        UserController.Instance.patchDailyTasksIncrement(data).then(()=>{\r\n            //update\r\n            this.updateTasks();\r\n        })\r\n    }\r\n\r\n    updateTasks(){\r\n        (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.TASKS) as TasksLayer).fetchDailyTasks();\r\n    }\r\n\r\n    async getPatchTaskDto() : Promise<PatchTaskDto> {\r\n        const timestamp = Date.now();\r\n        const task: PatchTaskDataDto = {\r\n            id: this.task_id,\r\n            type: this.type,\r\n            amount: 1\r\n        }\r\n\r\n        var userId;\r\n        try{\r\n            userId = TelegramWebApp.Instance.getTelegramUser().id\r\n        }\r\n        catch{\r\n            await UserController.Instance?.getUser().then((response) => {\r\n                userId = response.data.id;\r\n            }).catch((error) => {\r\n                console.error(\"Failed to fetch user data:\", error);\r\n            });\r\n        }\r\n        \r\n        const config = await ConfigLoader.loadConfig();\r\n        const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(task), config.GAME_SECRET_KEY);\r\n\r\n        const data: PatchTaskDto = {\r\n            task: task,\r\n            token: token,\r\n            timestamp: timestamp\r\n        };\r\n\r\n        return data;\r\n    }\r\n}","declare var CryptoJS: any;\r\nimport CryptoJS from  \"../modules/crypto-js\";\r\nimport { ENUM_GAME_MODE, ENUM_GAME_STATUS } from '../Enum';\r\nimport { LashHourLeaderDto, UserAuthDto, UserDailyTasksDto } from \"../dtos/user.dto\";\r\n\r\nconst STORAGE_KEY = 'BLOCK_STARS'\r\n\r\nexport type ICallBack = {\r\n    status: boolean,\r\n    data: any,\r\n    msg: string\r\n}\r\n\r\nexport type IUser = {\r\n    openid: string,\r\n    nickname: string,\r\n    gender: number,\r\n    avatar: string\r\n}\r\n\r\nexport default class DataManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<DataManager>()\r\n    }\r\n    \r\n    config : any  = null\r\n    userData : UserAuthDto = null\r\n    userTasks : UserDailyTasksDto = null\r\n    lastHourLeader : LashHourLeaderDto = null\r\n    nextMonday: Date = null\r\n\r\n    prizePoolWinningAmount: number = 0;\r\n\r\n    serverTimestamp: number = null;\r\n    serverTimeOffsetMiliseconds: number = 0;\r\n\r\n\r\n    // 游戏模式\r\n    mode: ENUM_GAME_MODE = ENUM_GAME_MODE.SCORE\r\n    // 游戏状态\r\n    status: ENUM_GAME_STATUS = ENUM_GAME_STATUS.UNRUNING\r\n    // 加载进度\r\n    loadingRate: number = 0\r\n\r\n    loadingMessage: string = null\r\n\r\n    // 声音开启\r\n    _isMusicOn: boolean = true\r\n    _isSoundOn: boolean = true\r\n\r\n    // 更多游戏\r\n    games: any[] = [\r\n        { title: '消灭星星', icon: 'xiao2d', appid: 'wxefd5a4ddd8e31b44', url: 'https://store.cocos.com/app/detail/4183' },\r\n        { title: '实况足球杯', icon: 'football', appid: 'wx0c16e9d7f9e87dac', url: 'https://store.cocos.com/app/detail/4221' },\r\n        { title: '爬了个爬', icon: 'stairway', appid: 'wx025bcf3a316bfa27', url: 'https://store.cocos.com/app/detail/4314' },\r\n        { title: '咩了个咩3D', icon: 'xiao3d', appid: 'wx5841e5a26082b380', url: 'https://store.cocos.com/app/detail/4148' },\r\n        { title: '经典泡泡龙', icon: 'bubble', appid: 'wxcc2f90afdf28ae3b', url: 'https://store.cocos.com/app/detail/4370' },\r\n    ]\r\n    // 关卡\r\n    level: number = 1\r\n    levelMax: number = 1\r\n    // 分数\r\n    score: number = 0\r\n    scoreMax: number = 0\r\n\r\n    // 历史数据\r\n    historyData: { main: number[], ready: number[], score: number, bonusesUsed: number, isFreeBombUsed: boolean  } = null\r\n\r\n    gameCreatedAtDate: Date = null\r\n    language: string = \"en\"\r\n    isDarkThemeOn: boolean = true\r\n\r\n    get isMusicOn() {\r\n        return this._isMusicOn\r\n    }\r\n\r\n    set isMusicOn(data: boolean) {\r\n        this._isMusicOn = data\r\n    }\r\n\r\n    get isSoundOn() {\r\n        return this._isSoundOn\r\n    }\r\n\r\n    set isSoundOn(data: boolean) {\r\n        this._isSoundOn = data\r\n    }\r\n\r\n    init(config : any){\r\n        this.config = config;\r\n    }\r\n\r\n    reset() {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n    }\r\n\r\n    // Generate a secure AES key from the passphrase\r\n    generateSecureKey(passphrase: string): string {\r\n        return CryptoJS.SHA256(passphrase).toString(CryptoJS.enc.Hex);\r\n    }\r\n\r\n    save() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n\r\n        const data = JSON.stringify({\r\n            isSoundOn: this.isSoundOn,\r\n            isMusicOn: this.isMusicOn,\r\n            isDarkThemeOn: this.isDarkThemeOn,\r\n            level: this.level,\r\n            levelMax: this.levelMax,\r\n            scoreMax: this.scoreMax,\r\n            historyData: this.historyData,\r\n            gameCreatedAtTimeStamp: this.gameCreatedAtDate ? this.gameCreatedAtDate.getTime() : null,\r\n            language: this.language,\r\n        });\r\n\r\n        // Encrypt data with AES-256\r\n        const encryptedData = CryptoJS.AES.encrypt(data, SECRET_KEY).toString();\r\n\r\n        // Generate HMAC signature to verify data integrity\r\n        const hmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n\r\n        // Store both encrypted data & HMAC signature\r\n        const payload = JSON.stringify({ encryptedData, hmac });\r\n        cc.sys.localStorage.setItem(STORAGE_KEY, payload);\r\n    }\r\n\r\n    restore() {\r\n        const SECRET_KEY = this.generateSecureKey(this.config.SAVE_SECRET);\r\n        const storedData = cc.sys.localStorage.getItem(STORAGE_KEY);\r\n\r\n        if (!storedData) {\r\n            this.resetDefaults();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Parse stored JSON\r\n            const { encryptedData, hmac } = JSON.parse(storedData);\r\n\r\n            // Validate HMAC integrity\r\n            const calculatedHmac = CryptoJS.HmacSHA256(encryptedData, SECRET_KEY).toString();\r\n            if (calculatedHmac !== hmac) {\r\n                console.error(\"Data integrity check failed!\");\r\n                this.resetDefaults();\r\n                return;\r\n            }\r\n\r\n            // Decrypt data\r\n            const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n            const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\r\n\r\n            const data = JSON.parse(decryptedData);\r\n\r\n            // Assign values safely\r\n            this.isMusicOn = data?.isMusicOn ?? true;\r\n            this.isSoundOn = data?.isSoundOn ?? true;\r\n            this.isDarkThemeOn = data?.isDarkThemeOn ?? false;\r\n            this.level = typeof data.level === \"number\" ? data.level : 1;\r\n            this.levelMax = typeof data.levelMax === \"number\" ? data.levelMax : 1;\r\n            this.scoreMax = typeof data.scoreMax === \"number\" ? data.scoreMax : 0;\r\n            this.historyData = data?.historyData || null;\r\n            this.gameCreatedAtDate = typeof data.gameCreatedAtTimeStamp === \"number\" ? new Date(data.gameCreatedAtTimeStamp) : null;\r\n            this.language = data?.language || \"en\";\r\n        } catch (error) {\r\n            console.error(\"Failed to decrypt/parse data:\", error);\r\n            this.resetDefaults();\r\n        }\r\n    }\r\n\r\n    resetDefaults() {\r\n        this.isMusicOn = true;\r\n        this.isSoundOn = true;\r\n        this.isDarkThemeOn = false;\r\n        this.level = 1;\r\n        this.levelMax = 1;\r\n        this.scoreMax = 0;\r\n        this.historyData = null;\r\n        this.gameCreatedAtDate = null;\r\n        this.language = \"en\";\r\n    }\r\n\r\n    setGameStatusRunning(){\r\n        try{\r\n            document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:flex;justify-content:center;\");\r\n        }\r\n        catch{\r\n\r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.RUNING\r\n    }\r\n\r\n    setGameStatusUnrunning(){\r\n        try{\r\n        document.getElementById(\"ads-banner-1\").setAttribute(\"style\",\"position:fixed;bottom:0%;width:100%;display:none;justify-content:center;\");\r\n        }\r\n        catch{\r\n            \r\n        }\r\n        DataManager.instance.status = ENUM_GAME_STATUS.UNRUNING\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport PoolManager from \"./PoolManager\";\r\n\r\nexport default class EffectManager {\r\n    public static _instance: EffectManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    play(effect: string, parent: cc.Node, options?: any) {\r\n        const effNode = PoolManager.instance.getNode(`${effect}`, parent)\r\n        if (options) {\r\n            options.pos && effNode.setPosition(options.pos)\r\n        }\r\n        if (effNode.getComponent(cc.Animation)) {\r\n            const anim = effNode.getComponent(cc.Animation)\r\n            anim.on('finished', () => {\r\n                effNode.removeFromParent()\r\n            })\r\n            anim.play()\r\n        } else if (effNode.getComponent(cc.ParticleSystem)) {\r\n            effNode.getComponent(cc.ParticleSystem).resetSystem()\r\n        }\r\n    }\r\n}","/*\r\n * @Author: carolsail \r\n * @Date: 2023-12-08 09:40:56 \r\n * @Last Modified by: carolsail\r\n * @Last Modified time: 2023-12-08 11:04:05\r\n */\r\n\r\n// модель\r\nexport enum ENUM_GAME_MODE {\r\n    SCORE = 'SCORE',\r\n    LEVEL = 'LEVEL'\r\n}\r\n\r\n// стан\r\nexport enum ENUM_GAME_STATUS {\r\n    UNRUNING = 'UNRUNING',\r\n    RUNING = 'RUNING'\r\n}\r\n\r\n// звукові ефекти\r\nexport enum ENUM_AUDIO_CLIP {\r\n    BGM = 'bgm',\r\n    CLICK = 'click',\r\n    LOSE = 'lose',\r\n    WIN = 'win',\r\n    BLOCK_ACTIVE = 'block_active',\r\n    BLOCK_UNACTIVE = 'block_unactive',\r\n    SKILL_BACK = 'skill_back',\r\n    SKILL_BOMB = 'skill_bomb',\r\n    SKILL_SHUFFLE = 'skill_shuffle',\r\n}\r\n\r\n// ui layer\r\nexport enum ENUM_UI_TYPE {\r\n    MENU = 'MenuLayer',\r\n    MAIN = 'MainLayer',\r\n    SETTING = 'SettingLayer',\r\n    EXIT = 'ExitLayer',\r\n    LOSE = 'LoseLayer',\r\n    WIN = 'WinLayer',\r\n    PROFILE = 'ProfileLayer',\r\n    LEADERBOARD = 'LeaderboardLayer',\r\n    LEADERBOARD_COMBINED = 'LeaderboardCombinedLayer',\r\n    HISTORY = 'HistoryLayer',\r\n    HISTORY_COMBINED = 'HistoryCombinedLayer', \r\n    TASKS = 'TasksLayer',\r\n    SHOP = 'ShopLayer',\r\n    OUTPUT = 'OutputLayer',\r\n    CLUB = 'ClubLayer',\r\n    CLUB_HISTORY ='ClubHistoryLayer',\r\n    HTTP_ERROR = 'HttpErrorLayer',\r\n    NO_CONNECTION_ERROR = 'NoConnectionErrorLayer',\r\n    SERVER_HTTP_ERROR = 'ServerResponceErrorLayer',\r\n}\r\n\r\n// block status\r\nexport enum ENUM_BLOCK_STATUS {\r\n    SHOW = 255,\r\n    TIP = 100,\r\n    HIDE = 0\r\n}\r\nexport enum ENUM_RBLOCK_STATUS {\r\n    SHOW = 255,\r\n    HIDE = 100\r\n}\r\n\r\n// 资源\r\nexport const ENUM_RESOURCE_TYPE = ([\r\n    { content: cc.AudioClip, path: 'audio', type: 'audio', ratio: 0.4 },\r\n    { content: cc.Prefab, path: 'prefab', type: 'prefab', ratio: 0.3 },\r\n    { content: cc.SpriteFrame, path: 'sprite', type: 'sprite', ratio: 0.3 },\r\n    // {content: cc.JsonAsset, path: 'json', type: 'json', ratio: 0.1},\r\n])","// Created by carolsail\r\n\r\ninterface IEventItem {\r\n    event: Function\r\n    context: unknown\r\n}\r\n\r\nexport default class EventManager {\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    eventMap: Map<String, Array<IEventItem>> = new Map()\r\n\r\n    static get instance() {\r\n        return this.getInstance<EventManager>()\r\n    }\r\n\r\n    on(name: string, event: Function, context?: unknown){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.push({event, context})\r\n        }else{\r\n            this.eventMap.set(name, [{event, context}])\r\n        }\r\n    }\r\n\r\n    off(name: string, event: Function){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            const index = eventArr.findIndex(item => item.event == event)\r\n            if(index > -1) eventArr.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    emit(name: string, ...params: unknown[]){\r\n        if(this.eventMap.has(name)){\r\n            const eventArr = this.eventMap.get(name)\r\n            eventArr.forEach(({event, context}) => {\r\n                context ? event.apply(context, params) : event(params)\r\n            })\r\n        }\r\n    }\r\n\r\n    clear(){\r\n        this.eventMap.clear()\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ExitLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSubmit: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnClose: cc.Node = null\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnSubmit = cc.find('buttons/btn_submit', this.panel)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnClose = cc.find('btn_close', this.panel)\r\n        this.btnSubmit.on('click', this.onSubmitClick, this)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnClose.on('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic = cc.find('buttons/btn_music', this.panel)\r\n        this.btnSound = cc.find('buttons/btn_sound', this.panel)\r\n        this.btnMusic.on('click', this.onMusicClick, this)\r\n        this.btnSound.on('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSubmit.off('click', this.onSubmitClick, this)\r\n        this.btnSubmit.off('click', this.onRestartClick, this)\r\n        this.btnClose.off('click', this.onCloseClick, this)\r\n\r\n        this.btnMusic.off('click', this.onMusicClick, this)\r\n        this.btnSound.off('click', this.onSoundClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n    }\r\n\r\n    onSubmitClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.historyData = null\r\n        DataManager.instance.gameCreatedAtDate = null\r\n        DataManager.instance.save()\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class FadeManager extends cc.Component {\r\n    onLoad() {\r\n        this.node.active = false\r\n        StaticInstance.setFadeManager(this)\r\n    }\r\n\r\n    fadeIn(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 0\r\n            cc.tween(this.node).to(seconds, { opacity: 255 }).call(() => {\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n\r\n    fadeOut(seconds: number = 0.2) {\r\n        return new Promise(resolve => {\r\n            this.node.active = true\r\n            this.node.opacity = 255\r\n            cc.tween(this.node).to(seconds, { opacity: 0 }).call(() => {\r\n                this.node.active = false\r\n                resolve(null)\r\n            }).start()\r\n        })\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { generateGameToken, getServerTimestampNow, isOnline } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport Level from \"../game/Level\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport DataManager from \"./DataManager\";\r\nimport PoolManager from \"./PoolManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport ConfigLoader from \"../utils/ConfigLoader\";\r\n\r\n@ccclass\r\nexport default class GameManager extends cc.Component {\r\n\r\n    stage: cc.Node = null;\r\n\r\n    onLoad() {\r\n        StaticInstance.setGameManager(this);\r\n        this.stage = cc.find('Stage', this.node);\r\n    }\r\n\r\n    onDestroy() { }\r\n\r\n    // Почати гру\r\n    onGameStart() {\r\n        DataManager.instance.reset();\r\n        this.initGame();\r\n    }\r\n\r\n    // Завершити гру\r\n    async onGameOver(ui: ENUM_UI_TYPE) {\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        if (ui == ENUM_UI_TYPE.LOSE) {\r\n            if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                const score = DataManager.instance.score;\r\n                const timestamp = getServerTimestampNow();\r\n\r\n                var userId;\r\n                try{\r\n                    userId = TelegramWebApp.Instance.getTelegramUser().id\r\n                }\r\n                catch{\r\n                    await UserController.Instance?.getUser().then((response) => {\r\n                        userId = response.data.id;\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to fetch user data:\", error);\r\n                    });\r\n                }\r\n\r\n                const config = await ConfigLoader.loadConfig();\r\n\r\n                generateGameToken(userId, timestamp, config.GAME_SECRET_KEY, score).then((res)=>{\r\n                    const gameToken = res;\r\n                    UserController.Instance?.postGameFinish(score, gameToken, timestamp).then((response) => {\r\n                        //console.log(\"game ended token\", response)\r\n                    }).catch((error) => {\r\n                        console.error(\"Failed to end game:\", error);\r\n                        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                        return;\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to end game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR)\r\n                    return;\r\n                });\r\n                \r\n                DataManager.instance.gameCreatedAtDate = null;\r\n                DataManager.instance.historyData = null;\r\n                DataManager.instance.save();\r\n            }\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n\r\n            AudioManager.instance.playSound(ENUM_AUDIO_CLIP.LOSE);\r\n            this.scheduleOnce(() => {\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE);\r\n            }, 0.3);\r\n        }\r\n    }\r\n\r\n    // Ініціалізація гри\r\n    async initGame() {\r\n\r\n        if(!DataManager.instance.historyData){\r\n            const timestamp = getServerTimestampNow();\r\n            var userId;\r\n            try{\r\n                userId = TelegramWebApp.Instance.getTelegramUser().id\r\n            }\r\n            catch{\r\n                await UserController.Instance?.getUser().then((response) => {\r\n                    userId = response.data.id;\r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                });\r\n            }\r\n\r\n            const config = await ConfigLoader.loadConfig();\r\n\r\n            try {\r\n                console.log(config.GAME_SECRET_KEY)\r\n\r\n                const gameToken = await generateGameToken(userId, timestamp, config.GAME_SECRET_KEY);\r\n            \r\n                try {\r\n                    await UserController.Instance?.postGameStart(gameToken, timestamp);\r\n                    console.log(\"Game started successfully\");\r\n                    DataManager.instance.gameCreatedAtDate = new Date();\r\n                } catch (error) {\r\n                    console.error(\"Failed to start game:\", error);\r\n                    StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                    StaticInstance.fadeManager.fadeOut();\r\n                    return;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Failed to generate game token:\", error);\r\n                StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR);\r\n                StaticInstance.fadeManager.fadeOut();\r\n                return;\r\n            }\r\n        }\r\n\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SERVER_HTTP_ERROR, false)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        this.stage.removeAllChildren();\r\n        const levelScore = PoolManager.instance.getNode('LevelScore', this.stage);\r\n        levelScore.getComponent(Level).init();\r\n        DataManager.instance.setGameStatusRunning();\r\n        await StaticInstance.fadeManager.fadeOut();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\nimport { delay } from \"../Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryCombinedLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getSumPointsLastWinners().then(async (response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n\r\n                await delay(100)\r\n\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(reward: number, name: string,  score: number){\r\n        this.label_reward.string = reward.toFixed(2);\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport HistoryItem from \"../ui/HistoryItem\";\r\nimport { delay } from \"../Utils\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HistoryLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    totalWinningPoolLabel: cc.Label = null\r\n\r\n    content: cc.Node = null\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.totalWinningPoolLabel = cc.find('top/layout/pool_amount', this.node).getComponent(cc.Label);\r\n\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        UserController.Instance?.getLastWinners().then(async (response) => {\r\n           \r\n            const players = response.data;\r\n\r\n            players.sort((a, b) => b.points - a.points);\r\n\r\n            contentNode.destroyAllChildren();\r\n\r\n            for (let i = 0; i < players.length; i++) {\r\n                const player = players[i];\r\n                const item = poolManager.getNode(`history_item`, contentNode);\r\n                const leaderboardItem = item.getComponent(HistoryItem);\r\n                leaderboardItem.init(player.winning_amount, player.User.username ? `@${player.User.username}` : `${player.User.first_name}`, player.points);\r\n\r\n                await delay(100)\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n        UserController.Instance?.getLastWeekPrizePool().then((response) => {\r\n            this.totalWinningPoolLabel.string = response.data.total_winning_amount.toFixed(2);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n}\r\n","import { getRemainingTimeToDateSeconds, getRemainingTimeToHourSeconds } from \"../Utils\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { LashHourLeaderDto } from \"../dtos/user.dto\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HourlyChallangeItem extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_reward: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_reward: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_time: cc.Label | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public shuffle_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public bomb_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public replace_frame: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public coin_frame: cc.SpriteFrame = null;\r\n\r\n    public id: number = null;\r\n    public reward: string = null;\r\n    public amount: number = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    setTestData(){\r\n        this.reward = \"COIN\";\r\n        this.amount = 25;\r\n        this.label_name.string = \"none\";\r\n        this.label_score.string = \"0\";\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    setFromCache(){\r\n        if(DataManager.instance.lastHourLeader){\r\n            this.set(DataManager.instance.lastHourLeader);\r\n        }\r\n        else{\r\n            this.setTestData();\r\n        }\r\n    }\r\n\r\n    fetchFromServer(){\r\n        this.setFromCache();\r\n\r\n        UserController.Instance?.getLastHourLeader().then((response) => {\r\n            DataManager.instance.lastHourLeader = response;\r\n            this.set(response);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    set(dto: LashHourLeaderDto){\r\n        const name = (dto.username && dto.username != \"\" && dto.username != null) ? `@${dto.username}` : `${dto.first_name}`;\r\n\r\n        this.reward = \"COIN\";\r\n        this.amount = 25;\r\n        this.label_name.string = name;\r\n        this.label_score.string = `${dto.points}`;\r\n\r\n        this.sprite_reward.spriteFrame = this.getRewardSprite(this.reward);\r\n        this.label_reward.string = `x${this.amount}`;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        const nextHour = this.getNextHourDate();\r\n        this.label_time.string = getRemainingTimeToHourSeconds(nextHour);\r\n    }\r\n\r\n\r\n    getNextHourDate(): Date {\r\n        const now = new Date();\r\n        now.setMinutes(0, 0, 0); // Reset minutes, seconds, milliseconds\r\n        now.setHours(now.getHours() + 1); // Move to next hour\r\n        return now;\r\n    }\r\n    \r\n\r\n    getRewardSprite(reward: string) : cc.SpriteFrame{\r\n        switch(reward){\r\n            case \"BOMB\":\r\n                return this.bomb_frame;\r\n            case \"SHUFFLE\":\r\n                return this.shuffle_frame; \r\n            case \"CHANGE_BLOCK\":\r\n                return this.replace_frame;\r\n            case \"COIN\":\r\n            case \"STAR\":\r\n            case \"STARS\":\r\n\r\n                return this.coin_frame;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n}","\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HttpErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n    errorMessage: cc.Label = null\r\n\r\n    init(message: string){\r\n        //todo. pass specific error and refresh callback action\r\n        this.errorMessage.string = message;\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n        this.errorMessage = cc.find('errorMessage', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            DataManager.instance.userData = response.data;\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, false)\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n        }).catch(error =>{\r\n            // Операції з UI\r\n            this.init(error.message);\r\n            console.log(JSON.stringify(error))\r\n        });\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","import { StaticInstance } from './StaticInstance';\r\nimport { ENUM_RESOURCE_TYPE, ENUM_UI_TYPE } from './Enum';\r\nimport AudioManager from \"./manager/AudioManager\";\r\nimport DataManager from './manager/DataManager';\r\nimport ResourceManager from \"./manager/ResourceManager\";\r\nimport SdkManager from './manager/SdkManager';\r\n\r\nimport { TelegramWebApp, WebAppInitData } from './telegram/TelegramMiniApp';\r\nimport { ApiClientFactory } from './api/ApiClientFactory';\r\nimport { UserController } from './api/controllers/UserController';\r\n\r\nimport * as config from '../config.js';\r\nimport LocalizationManager from './manager/LocalizationManager';\r\nimport ConfigLoader from \"./utils/ConfigLoader\";\r\nimport HttpErrorLayer from './layer/HttpErrorLayer';\r\nimport { getServerTimeNow, setDesignResolution } from './Utils';\r\nimport { AdsManager } from './ads/AdsManager';\r\nimport OutputLayer from './layer/OutputLayer';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n//const TEST_TELEGRAM_TOKEN = \"user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&chat_instance=3591124487722041371&chat_type=sender&auth_date=1736760962&signature=Apzb5N74Rrtv7PnYEOs6mKRkStMSBA1La5F5O2lW2w6sYn6SSrIsJj-g3uhMnrEZlHKQGdfrHDEYOVat6KsqCw&hash=d758e391a5af042859b8a90e87a91b0d6be3739c1794f30c943f50d3b468315b\";\r\n//const TEST_TELEGRAM_TOKEN =\"query_id=AAHLDoANAAAAAMsOgA2RQIty&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1741260439&signature=8izuE3Zh-7qtC7jR7pcNwXPIApB_uVc3IOManQjm1FJAzesuCKUWIJ6dM3r3bOXkSNxx0HF3hgf7mSxboT5lBQ&hash=748a2a7f3d8c8b6e2e4e9325b1f25ee7d181b24156772a762b08c946f02f074a\";\r\n//const TEST_TELEGRAM_TOKEN = \"query_id=AAHLDoANAAAAAMsOgA1v1jqm&user=%7B%22id%22%3A226496203%2C%22first_name%22%3A%22%D1%80%D0%B5%D0%BF%D0%BB%D1%96%D0%BA%D0%B0%D0%BD%D1%82%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22pertusini%22%2C%22language_code%22%3A%22uk%22%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F2uptPMrsaIXViYtEoOWxkkLiDexwDDkQySVmeA8FsxU.svg%22%7D&auth_date=1738596311&signature=Be68ytJKSA4LpkaNOt_4kp9UST34QzCy4S6rKuRCASBd8M2h0XEfxn_Apx-XOKNKcXMDJeka-YStZ44TLl2RBA&hash=cfe451b73670d7aa9bf3d66613640b9d10c60453eab20b8479bfce5602e7f204\"\r\n@ccclass\r\nexport default class Index extends cc.Component {\r\n\r\n\r\n    onLoad() {\r\n        //console.log(`AA___5555`)\r\n        //console.log(`default DESIGN SIZE ${cc.view.getDesignResolutionSize()}`)\r\n        //console.log(`default VIEW SIZE ${cc.view.getFrameSize()}`)\r\n        //console.log(`default RES POLICY ${cc.view.getResolutionPolicy()}`)\r\n\r\n        this.node.getChildByName('UI').opacity = 255\r\n        DataManager.instance.loadingRate = 0\r\n\r\n        TelegramWebApp.Instance.init().then(res => {\r\n            TelegramWebApp.Instance.requestFullscreen();\r\n            TelegramWebApp.Instance.enableClosingConfirmation();\r\n\r\n            const webApp = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n            webApp.onEvent('fullscreenChanged', () => {\r\n                console.log('fullscreenChanged')\r\n            }) \r\n\r\n            webApp.onEvent('viewportChanged', () => {\r\n                console.log(`viewportChanged.`)\r\n                setDesignResolution();\r\n                this.responsive();\r\n            })\r\n\r\n            webApp.onEvent('activated', () => {\r\n                console.log(`activated.`)\r\n                setDesignResolution();\r\n            })\r\n\t\t});\r\n\r\n        cc.view.setResizeCallback(() => this.responsive())\r\n\r\n        AdsManager.Instance.init();\r\n\r\n\r\n        //Заборонити прокрутку сторінки під час фокусу на EditBox\r\n        document.body.addEventListener('touchmove', function (e) {\r\n            if (document.activeElement.tagName === 'INPUT' || document.activeElement.tagName === 'TEXTAREA') {\r\n              e.preventDefault();\r\n            }\r\n          }, { passive: false });\r\n    }\r\n\r\n    async start() {\r\n\r\n        setDesignResolution();\r\n\r\n        const configRes = await ConfigLoader.loadConfig();\r\n\r\n        // Завантаження ресурсів\r\n        for (const index in ENUM_RESOURCE_TYPE) {\r\n            const resource = ENUM_RESOURCE_TYPE[index]\r\n            await ResourceManager.instance.loadRes(resource)\r\n        }\r\n\r\n        // Завантаження UI\r\n        StaticInstance.uiManager.init()\r\n        // Відновлення даних\r\n        DataManager.instance.init(configRes);\r\n        DataManager.instance.restore()\r\n        // Відтворення музики\r\n        AudioManager.instance.playMusic()\r\n        // Ініціалізація SDK\r\n        SdkManager.instance.initAudioEndListener()\r\n        SdkManager.instance.passiveShare()\r\n        SdkManager.instance.getRank()\r\n        SdkManager.instance.initBannerAd()\r\n        SdkManager.instance.initInterstitialAd()\r\n        SdkManager.instance.initVideoAd()\r\n        SdkManager.instance.initCustomRowAd()\r\n        SdkManager.instance.initCustomColAd()\r\n        \r\n        DataManager.instance.loadingRate = 1\r\n\r\n        setDesignResolution();\r\n\r\n        //ініціалізація API клієнта\r\n        await this.initApiClient();\r\n\r\n        try {\r\n            const response = await UserController.Instance.getUser();\r\n            // handle success\r\n            console.log(\"user success\");\r\n            DataManager.instance.userData = response.data;\r\n        \r\n            if (response.data.first_login) {\r\n                LocalizationManager.instance.changeLanguage(response.data.language_code);\r\n            }\r\n\r\n            //time \r\n\r\n            const timeResponce = await UserController.Instance.getTime();\r\n            console.log(\"time success\", timeResponce.data.timestamp);\r\n\r\n            const serverDate = new Date(timeResponce.data.timestamp); \r\n            const localDate = new Date();\r\n            const timeDiffMiliseconds = serverDate.getTime() - localDate.getTime(); // різниця в мілісекундах\r\n\r\n            console.log(\"timeDiffMiliseconds\", timeDiffMiliseconds, getServerTimeNow());\r\n\r\n            DataManager.instance.serverTimestamp = timeResponce.data.timestamp; \r\n            DataManager.instance.serverTimeOffsetMiliseconds = timeDiffMiliseconds;\r\n\r\n            // UI operations\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n        } catch (error) {\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, true);\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HTTP_ERROR, true, () => {\r\n                (StaticInstance.uiManager.getLayerInstance(ENUM_UI_TYPE.HTTP_ERROR) as HttpErrorLayer).init(error.message);\r\n                console.log(JSON.stringify(error));\r\n            });\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false);\r\n            return;\r\n        }\r\n\r\n\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n\r\n        //patchBonusesNewAmount(5, 5, 5)\r\n    }\r\n\r\n    async initApiClient() : Promise<any>{\r\n        const apiClientFactory = new ApiClientFactory(config.API_URL, {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Accept\": \"application/json\",\r\n            \"ngrok-skip-browser-warning\" : \"skip-browser-warning\",\r\n        });\r\n\r\n        var token = null;\r\n        var tries = 0;\r\n        do{\r\n            try{\r\n                tries++;\r\n                token = TelegramWebApp.Instance.getTelegramInitData();\r\n                //token = TEST_TELEGRAM_TOKEN;\r\n                const apiClientAuthorized = apiClientFactory.createAuthorizedClient(token)\r\n                const userController = new UserController(apiClientAuthorized);\r\n                UserController.Instance = userController;\r\n            }\r\n            catch{\r\n                console.log(\"failed getTelegramInitData. retrying..\")\r\n                await this.delay(500); // Waits for 0.5 seconds\r\n            }\r\n        }\r\n        while(!token && tries < 5)\r\n    }\r\n\r\n    delay(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    // Адаптивність екрану\r\n    responsiveOld() {\r\n        console.log(`RESPONSIVE OLD`);\r\n\r\n        const designSize = cc.view.getDesignResolutionSize();\r\n        const viewSize = cc.view.getFrameSize();\r\n\r\n        console.log(`RESPONSIVE OLD DESIGN SIZE ${designSize}`)\r\n        console.log(`RESPONSIVE OLD VIEW SIZE ${viewSize}`)\r\n\r\n        const setFitWidth = () => {\r\n            console.log(\"setFitWidth\")\r\n            cc.Canvas.instance.fitHeight = false;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const setFitHeight = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = false;\r\n        }\r\n\r\n        const setFitBoth = () => {\r\n            console.log(\"setFitHeight\")\r\n            cc.Canvas.instance.fitHeight = true;\r\n            cc.Canvas.instance.fitWidth = true;\r\n        }\r\n\r\n        const designRatio = designSize.width / designSize.height\r\n        const viewRatio = viewSize.width / viewSize.height\r\n        if (designRatio < 1) {\r\n            // console.error('--Гра у вертикальному режимі')\r\n            if (viewRatio < 1) {\r\n                if (viewRatio > designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitWidth()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        } else {\r\n            // console.error('--Гра у горизонтальному режимі')\r\n            if (viewRatio > 1) {\r\n                if (viewRatio < designRatio) {\r\n                    setFitBoth()\r\n                } else {\r\n                    setFitHeight()\r\n                }\r\n            } else {\r\n                setFitBoth()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // Адаптивність екрану\r\n    responsive() {\r\n        if(OutputLayer.block_resize){\r\n            return;\r\n        }\r\n\r\n        this.responsiveOld();\r\n    }\r\n\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from '../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { TestManager } from \"../api/TestManager\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { delay, getRemainingTimeToDateSeconds, setDesignResolution } from \"../Utils\";\r\nimport { WINNING_AMOUNT_ADDITIONAL_PRIZES, getPrizeAmount } from \"../constants/prize-pool.const\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardCombinedLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n    \r\n    info: cc.Node = null\r\n    \r\n\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n    \r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        this.btnTabBest.on(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        //this.btnTabCombine.on(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.on(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnTabBest.off(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        //this.btnTabCombine.off(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.off(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const winningAmountTotal = DataManager.instance.prizePoolWinningAmount;\r\n        const winningAmount = (winningAmountTotal - WINNING_AMOUNT_ADDITIONAL_PRIZES) / 2;\r\n\r\n        UserController.Instance?.getSumPointsLeaderboard().then(async (response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                const youPrize = getPrizeAmount(response.user_position.position - 1, winningAmount);\r\n                youItem.init(you.position, `@${you.username}`, you.points, youPrize);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames250_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.sum_points, 5000);\r\n            });\r\n\r\n            setDesignResolution();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY_COMBINED)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    public label_place: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_name: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score: cc.Label | null = null;\r\n\r\n    @property(cc.Label)\r\n    public label_prize: cc.Label | null = null;\r\n\r\n    show() {\r\n        this.node.active = true;\r\n    }\r\n\r\n    hide() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    init(place: number, name: string, score: number, prize : number){\r\n        this.label_place.string = place.toString();\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n        this.label_prize.string = prize.toFixed(2);\r\n    }\r\n\r\n    initBlogger(name: string, score: number){\r\n        this.label_name.string = name;\r\n        this.label_score.string = score.toString();\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport LeaderboardItem from \"../ui/LeaderboardItem\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { delay, getRemainingTimeToDateSeconds, setDesignResolution } from \"../Utils\";\r\nimport { WINNING_AMOUNT_ADDITIONAL_PRIZE, WINNING_AMOUNT_ADDITIONAL_PRIZES, WINNING_PERCENT_1st_PLACE as WINNING_PERCENT_1_PLACE, WINNING_PERCENT_2st_PLACE as WINNING_PERCENT_2_PLACE, WINNING_PERCENT_3st_PLACE as WINNING_PERCENT_3_PLACE, WINNING_PERCENT_4st_PLACE as WINNING_PERCENT_4_PLACE, WINNING_PERCENT_5st_PLACE as WINNING_PERCENT_5_PLACE, getPrizeAmount } from \"../constants/prize-pool.const\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LeaderboardLayer extends BaseLayer {\r\n\r\n    youItem: LeaderboardItem = null\r\n\r\n    btnTabBest: cc.Node = null\r\n    btnTabCombine: cc.Node = null\r\n\r\n    btnWinners: cc.Node = null\r\n    btnInfo: cc.Node = null\r\n    btnCloseInfo: cc.Node = null\r\n    btnFindMe: cc.Node = null\r\n\r\n    info: cc.Node = null\r\n    content: cc.Node = null\r\n\r\n    taskFill: cc.Sprite = null;\r\n    taskAmountLabel: cc.Label = null;\r\n    taskTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.info = cc.find('info', this.node)\r\n        this.content = cc.find('main/scroll_view/view/content', this.node)\r\n        this.youItem = cc.find('main/leaderboard_item_you', this.node).getComponent(LeaderboardItem);\r\n\r\n        this.btnFindMe = cc.find('btn_find_me', this.node)\r\n        this.btnTabBest = cc.find('btn_tab_best', this.node)\r\n        this.btnTabCombine = cc.find('btn_tab_combine', this.node)\r\n\r\n        this.btnWinners = cc.find('main/top_win/btn_winners', this.node)\r\n        this.btnInfo = cc.find('main/top_win/btn_info', this.node)\r\n        this.btnCloseInfo = cc.find('panel/btn_leaderboard', this.info)\r\n\r\n        this.taskFill = cc.find('panel/games_weekly/fill_bar/fill', this.info).getComponent(cc.Sprite)\r\n        this.taskAmountLabel = cc.find('panel/games_weekly/amount', this.info).getComponent(cc.Label)\r\n        this.taskTimeLeft = cc.find('panel/bottom/time_text', this.info).getComponent(cc.Label)\r\n\r\n        //this.btnTabBest.on(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        this.btnTabCombine.on(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.on(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.on(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n        \r\n        this.youItem.node.active = false;\r\n    }\r\n\r\n    onDestroy() {\r\n        //this.btnTabBest.off(cc.Node.EventType.TOUCH_START, this.onTabBestClick, this)\r\n        this.btnTabCombine.off(cc.Node.EventType.TOUCH_START, this.onTabCombineClick, this)\r\n\r\n        this.btnFindMe.off(cc.Node.EventType.TOUCH_START, this.onFindMeClick, this)\r\n        this.btnWinners.off(cc.Node.EventType.TOUCH_START, this.onWinnersClick, this)\r\n        this.btnInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoClick, this)\r\n        this.btnCloseInfo.off(cc.Node.EventType.TOUCH_START, this.onInfoCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        const youItem = this.youItem;\r\n        const contentNode = this.content;\r\n        const poolManager = PoolManager.instance;\r\n\r\n        const winningAmountTotal = DataManager.instance.prizePoolWinningAmount;\r\n        const winningAmount = (winningAmountTotal - WINNING_AMOUNT_ADDITIONAL_PRIZES) / 2;\r\n      \r\n        UserController.Instance?.getLeaderboard().then(async (response) => {\r\n            \r\n\r\n            if(response.user_position){\r\n                const you = response.user_position;\r\n                const youPrize = getPrizeAmount(response.user_position.position - 1, winningAmount);\r\n                youItem.init(you.position, `@${you.username}`, you.points, youPrize);\r\n                youItem.node.active = true;\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = player.user_id == you.user_id ? poolManager.getNode(`leaderboard_item_you`, contentNode) : poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n\r\n                }\r\n            }\r\n\r\n            else{\r\n                const players = response.leaderboard;\r\n                contentNode.destroyAllChildren();\r\n    \r\n                for (let i = 0; i < players.length; i++) {\r\n                    const prize = getPrizeAmount(i, winningAmount);\r\n                    const player = players[i];\r\n                    const item = poolManager.getNode(`leaderboard_item`, contentNode);\r\n                    const leaderboardItem = item.getComponent(LeaderboardItem);\r\n                    const name = (player.username && player.username != \"\" && player.username != null) ? `@${player.username}` : `${player.first_name}`;\r\n                    leaderboardItem.init(player.position, name, player.points, prize);\r\n\r\n                    await delay(100)\r\n                }\r\n            }\r\n            \r\n            UserController.Instance.getGames500_count().then(response => {\r\n                console.log(response);\r\n                this.setGamesWeeklyAmount(response.count, 5);\r\n            });\r\n            \r\n            setDesignResolution();\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch leaderboard:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.taskTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.taskAmountLabel.string = `${played}/${target}`\r\n        this.taskFill.fillRange = fillRange;\r\n    }\r\n\r\n\r\n    onTabBestClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onTabCombineClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n\r\n    onFindMeClick() { AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) }\r\n\r\n    onWinnersClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.TASKS, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.HISTORY)\r\n    }\r\n\r\n    onInfoClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = true;\r\n    }\r\n\r\n    onInfoCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.info.active = false;\r\n    }\r\n    \r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_BLOCK_STATUS, ENUM_GAME_MODE, ENUM_GAME_STATUS, ENUM_RBLOCK_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { delay, getDistance, isOnline, patchBonusesAmount, random } from \"../Utils\";\r\nimport { AdsManager } from \"../ads/AdsManager\";\r\nimport { MonetagController } from \"../ads/monetag/Monetag\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport EffectManager from \"../manager/EffectManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport Block from \"./Block\";\r\nimport BlockReady from \"./BlockReady\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nconst BSIZE = 70\r\nconst XNUM = 9\r\nconst RNUM = 3\r\nconst TNUM = 34\r\nconst MAX_SKILLS = 10\r\n\r\n@ccclass\r\nexport default class Level extends cc.Component {\r\n\r\n\r\n    @property(cc.Node)\r\n    public blocks_select: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    public blocks_change: cc.Node | null = null;\r\n\r\n    isPremiumPurchased: boolean = false;\r\n\r\n    // 技能\r\n    skills: cc.Node = null\r\n    skillTip: cc.Node = null\r\n    // 主块\r\n    blocks_main: cc.Node = null\r\n    // 效果层\r\n    eff: cc.Node = null\r\n    // 连击层\r\n    combo: cc.Node = null\r\n    // 备块\r\n    slots_ready: cc.Node = null\r\n    blocks_ready: cc.Node = null\r\n    //blocks_select: cc.Node = null\r\n    // 分数\r\n    score_current_num: cc.Node = null\r\n    score_max_num: cc.Node = null\r\n    // 开关\r\n    isInitReadyBlock: boolean = false\r\n    // 上一次放置\r\n    hasShowTip: boolean = false\r\n    // 合并数\r\n    combineNum: number = 0\r\n    // 连击数\r\n    comboNum: number = 0\r\n    // 炸弹\r\n    isBomb: boolean = false\r\n\r\n    skillsCount: number = 0\r\n\r\n    blocksPlacedCount : number = 0;\r\n\r\n    //\r\n    isFreeBombUsed: boolean = false\r\n\r\n    skills_1_shuffle_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.shuffle_amount | 0;\r\n    }\r\n\r\n    skills_2_bomb_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.bomb_amount | 0;\r\n    }\r\n\r\n    skills_3_change_block_owned() : number {\r\n        return DataManager.instance.userData.bonuses?.change_block_amount | 0;\r\n    }\r\n\r\n    //ui\r\n\r\n    //skills - main\r\n    btnSkill_1_shuffle: cc.Node = null\r\n    btnSkill_2_bomb: cc.Node = null\r\n    btnSkill_3_select: cc.Node = null\r\n\r\n    btnSkill_1_shuffle_icon_video: cc.Node = null\r\n\r\n    label_skill_1_shuffle_amount: cc.Label = null\r\n    label_skill_2_bomb_amount: cc.Label = null\r\n    label_skill_3_replace_amount: cc.Label = null\r\n\r\n    //skills - buy\r\n    buy_skill_popup_1_shuffle: cc.Node = null\r\n    buy_skill_popup_2_bomb: cc.Node = null\r\n    buy_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_buy_skill_1_confirm: cc.Node = null\r\n    btn_buy_skill_1_ad: cc.Node = null\r\n    btn_buy_skill_1_decline: cc.Node = null\r\n    btn_buy_skill_2_confirm: cc.Node = null\r\n    btn_buy_skill_2_decline: cc.Node = null\r\n    btn_buy_skill_3_confirm: cc.Node = null\r\n    btn_buy_skill_3_decline: cc.Node = null\r\n\r\n    buy_skill_popup_1_used_label: cc.Label = null\r\n    buy_skill_popup_2_used_label: cc.Label = null\r\n    buy_skill_popup_3_used_label: cc.Label = null\r\n\r\n    //skills - use\r\n    use_skill_popup_1_shuffle: cc.Node = null\r\n    use_skill_popup_2_bomb: cc.Node = null\r\n    use_skill_popup_3_replace: cc.Node = null\r\n\r\n    btn_use_skill_1_confirm: cc.Node = null\r\n    btn_use_skill_1_decline: cc.Node = null\r\n    btn_use_skill_2_confirm: cc.Node = null\r\n    btn_use_skill_2_decline: cc.Node = null\r\n    btn_use_skill_3_confirm: cc.Node = null\r\n    btn_use_skill_3_decline: cc.Node = null\r\n\r\n    use_skill_popup_1_used_label: cc.Label = null\r\n    use_skill_popup_2_used_label: cc.Label = null\r\n    use_skill_popup_3_used_label: cc.Label = null\r\n    lose_confirm_popup_buyShuffle_used_label: cc.Label = null\r\n\r\n    //\r\n\r\n    hint_select_change: cc.Node = null\r\n    hint_select_new: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null\r\n\r\n    block_to_change_index: number = -1;\r\n    block_to_change_new_index: number = -1;\r\n    \r\n    lose_confirm_popup_ad: cc.Node = null\r\n    lose_confirm_popup_subscribe: cc.Node = null\r\n    lose_confirm_popup_buyShuffle: cc.Node = null\r\n    btnLoseAd_confirm: cc.Node = null\r\n    btnLoseAd_decline: cc.Node = null\r\n    btnLoseSubscribe_confirm: cc.Node = null\r\n    btnLoseSubscribe_decline: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_buy: cc.Node = null\r\n    btnLoseBuyShuffle_confirm_ad: cc.Node = null\r\n    btnLoseBuyShuffle_decline: cc.Node = null\r\n\r\n    isTouchStarted: boolean = false\r\n    \r\n\r\n    init() {\r\n        this.isTouchStarted = false;\r\n        this.skillsCount = 0;\r\n        this.isFreeBombUsed = false;\r\n        this.skills = cc.find('skills', this.node)\r\n        this.skillTip = cc.find('hint_bomb', this.node)\r\n        this.slots_ready = cc.find('ready/slots', this.node)\r\n        this.score_current_num = cc.find('header/score_current', this.node)\r\n        this.score_max_num = cc.find('header/score_max/num', this.node)\r\n        this.eff = cc.find('main/eff', this.node)\r\n        this.combo = cc.find('combo', this.node)\r\n\r\n        this.hint_select_change = cc.find('hint_select_change', this.node)\r\n        this.hint_select_new = cc.find('hint_select_new', this.node)\r\n\r\n        this.blocks_main = cc.find('main/blocks', this.node)\r\n        \r\n        this.blocks_ready = cc.find('ready/blocks', this.node)\r\n\r\n        this.score_max_num.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n\r\n        this.lose_confirm_popup_ad = cc.find('lose_confirm_popup', this.node)\r\n        this.lose_confirm_popup_subscribe = cc.find('lose_confirm_popup_subscribe', this.node)\r\n        this.lose_confirm_popup_buyShuffle = cc.find('lose_confirm_popup_buy_shuffle', this.node)\r\n\r\n\r\n        //skills\r\n        this.btnSkill_1_shuffle = cc.find('skill_shuffle', this.skills)\r\n        this.btnSkill_3_select = cc.find('skill_swap', this.skills)\r\n        this.btnSkill_2_bomb = cc.find('skill_bomb', this.skills)\r\n\r\n        this.btnSkill_1_shuffle_icon_video = cc.find('icon_video', this.btnSkill_1_shuffle)\r\n\r\n        this.label_skill_1_shuffle_amount = cc.find('layout/label', this.btnSkill_1_shuffle).getComponent(cc.Label)\r\n        this.label_skill_2_bomb_amount = cc.find('layout/label', this.btnSkill_2_bomb).getComponent(cc.Label)\r\n        this.label_skill_3_replace_amount = cc.find('layout/label', this.btnSkill_3_select).getComponent(cc.Label)\r\n\r\n        //skill - buy\r\n        this.buy_skill_popup_1_shuffle = cc.find('buy_skill_popup_1_shuffle', this.node)\r\n        this.buy_skill_popup_2_bomb = cc.find('buy_skill_popup_2_bomb', this.node)\r\n        this.buy_skill_popup_3_replace = cc.find('buy_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_buy_skill_1_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_ad = cc.find('panel/buttons/btn_ad', this.buy_skill_popup_1_shuffle)\r\n        this.btn_buy_skill_1_decline = cc.find('panel/btn_close', this.buy_skill_popup_1_shuffle)\r\n        this.buy_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_1_shuffle).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_2_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_2_bomb)\r\n        this.btn_buy_skill_2_decline = cc.find('panel/btn_close', this.buy_skill_popup_2_bomb)\r\n        this.buy_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_buy_skill_3_confirm = cc.find('panel/buttons/btn_bonus', this.buy_skill_popup_3_replace)\r\n        this.btn_buy_skill_3_decline = cc.find('panel/btn_close', this.buy_skill_popup_3_replace)\r\n        this.buy_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.buy_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //skill - use\r\n        this.use_skill_popup_1_shuffle = cc.find('use_skill_popup_1_shuffle', this.node)\r\n        this.use_skill_popup_2_bomb = cc.find('use_skill_popup_2_bomb', this.node)\r\n        this.use_skill_popup_3_replace = cc.find('use_skill_popup_3_replace', this.node)\r\n\r\n        this.btn_use_skill_1_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_1_shuffle)\r\n        this.btn_use_skill_1_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_1_shuffle)\r\n        this.use_skill_popup_1_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_1_shuffle).getComponent(cc.Label)\r\n     \r\n        this.btn_use_skill_2_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_2_bomb)\r\n        this.btn_use_skill_2_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_2_bomb)\r\n        this.use_skill_popup_2_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_2_bomb).getComponent(cc.Label)\r\n\r\n        this.btn_use_skill_3_confirm = cc.find('panel/layout/buttons/btn_yes', this.use_skill_popup_3_replace)\r\n        this.btn_use_skill_3_decline = cc.find('panel/layout/buttons/btn_no', this.use_skill_popup_3_replace)\r\n        this.use_skill_popup_3_used_label = cc.find('panel/used_hints/label', this.use_skill_popup_3_replace).getComponent(cc.Label)\r\n\r\n        //lose\r\n        this.btnLoseAd_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_ad)\r\n        this.btnLoseAd_decline = cc.find('panel/btn_close', this.lose_confirm_popup_ad)\r\n\r\n        this.btnLoseSubscribe_confirm = cc.find('panel/layout/buttons/btn_yes', this.lose_confirm_popup_subscribe)\r\n        this.btnLoseSubscribe_decline = cc.find('panel/btn_close', this.lose_confirm_popup_subscribe)\r\n\r\n        this.btnLoseBuyShuffle_confirm_buy = cc.find('panel/layout/buttons/btn_bonus', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_confirm_ad = cc.find('panel/layout/buttons/btn_ad', this.lose_confirm_popup_buyShuffle)\r\n        this.btnLoseBuyShuffle_decline = cc.find('panel/btn_close', this.lose_confirm_popup_buyShuffle)\r\n\r\n        this.lose_confirm_popup_buyShuffle_used_label = cc.find('panel/used_hints/label', this.lose_confirm_popup_buyShuffle).getComponent(cc.Label)\r\n\r\n\r\n        //other\r\n        this.btnShop = cc.find('btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n\r\n        this.setTouch(true)\r\n        this.setSkill(true)\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        this.setEvents(true);\r\n    }\r\n\r\n\r\n    public setEvents(bool: boolean = true){\r\n        const telegram = TelegramWebApp.Instance.getTelegramWebApp();\r\n\r\n        if (!telegram) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            if(bool){\r\n                telegram.onEvent(\"activated\", this.handleEventActivated);\r\n                telegram.onEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n            else{\r\n                telegram.offEvent(\"activated\", this.handleEventActivated);\r\n                telegram.offEvent(\"deactivated\", this.handleEventDeactivated);\r\n            }\r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    private handleEventActivated(){\r\n        console.log(\"Activated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        DataManager.instance.restore();\r\n        this.initMainBlocks()\r\n        this.initSelectNewBlocks();\r\n        this.initReadyBlocks(true)\r\n    }\r\n\r\n    private handleEventDeactivated(){\r\n        console.log(\"Deactivated\")\r\n        if(DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING)\r\n            return;\r\n\r\n        this.setHistoryData();\r\n    }\r\n\r\n    initMainBlocks() {\r\n        for (let i = 0; i < XNUM * XNUM; i++) {\r\n            const block = PoolManager.instance.getNode('Block', this.blocks_main)\r\n            const blockComp = block.getComponent(Block)\r\n            const x = Math.floor(i / XNUM)\r\n            const y = i % XNUM\r\n            blockComp.init(x, y, i)\r\n        }\r\n        // history data\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n            const { main, score, bonusesUsed, isFreeBombUsed} = DataManager.instance.historyData\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                blockComp.setOpacity(main[i])\r\n            }\r\n            DataManager.instance.score = score\r\n            this.skillsCount = bonusesUsed\r\n            this.isFreeBombUsed = isFreeBombUsed\r\n        }\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n    }\r\n\r\n\r\n    initSelectChangeBlocks(){\r\n\r\n        this.blocks_change.removeAllChildren();\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            const block_index = block.index;\r\n\r\n            //block.\r\n\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_change);\r\n            slotReady.on('click', ()=>{this.onSelectChangeBlockClick(i)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n\r\n        }\r\n    }\r\n\r\n    initSelectNewBlocks(){\r\n        this.blocks_select.removeAllChildren();\r\n\r\n        for (let i = 1; i < TNUM; i++) {\r\n            const index = i;\r\n            const slotReady = PoolManager.instance.getNode(`SlotReady`, this.blocks_select);\r\n            slotReady.on('click', ()=>{this.onSelectNewBlockClick(index)}, this);\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${i}`);\r\n            blockReady.parent = slotReady;\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(i, cc.v2(0, 0));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n        }\r\n\r\n    }\r\n\r\n    onSelectChangeBlockClick(index: number){\r\n        this.block_to_change_index = index;\r\n        this.block_to_change_new_index = -1;\r\n        this.hint_select_new.active = true;\r\n        this.hint_select_change.active = false;\r\n    }\r\n\r\n    onSelectNewBlockClick(index: number){\r\n        this.block_to_change_new_index = index;\r\n        //change block_to_change_index\r\n\r\n        const blocks_indexes: number[] = [];\r\n        const blocks_active: boolean[] = [];\r\n\r\n        for (let i = 0; i < this.blocks_ready.childrenCount; i++) {\r\n            const block = this.blocks_ready.children[i].getComponent(BlockReady);\r\n            if(i == this.block_to_change_index){\r\n                blocks_indexes.push(index)\r\n                blocks_active.push(true)\r\n            }\r\n            else{\r\n                blocks_indexes.push(block.index)\r\n                blocks_active.push(block.isActive)\r\n            }\r\n        }\r\n\r\n        this.blocks_ready.removeAllChildren();\r\n\r\n        for (let i = 0; i < blocks_indexes.length; i++) {\r\n            let block_index = blocks_indexes[i];\r\n            let block_active = blocks_active[i];\r\n\r\n            const blockReady = PoolManager.instance.getNode(`BlockReady${block_index}`, this.blocks_ready)\r\n            const slot = this.slots_ready.children[i]\r\n\r\n            const blockReady_comp = blockReady.getComponent(BlockReady);\r\n            blockReady_comp.init(block_index, cc.v2(slot.x, slot.y));\r\n            blockReady_comp.setOpacity(ENUM_RBLOCK_STATUS.SHOW);\r\n            //blockReady_comp.setActive(false);\r\n        }\r\n\r\n        //deactivate screens\r\n\r\n        this.hint_select_change.active = false;\r\n        this.hint_select_new.active = false;\r\n\r\n        this.checkReadyBlocks()\r\n    }\r\n\r\n    initReadyBlocks(isInit: boolean = false) {\r\n        this.blocks_ready.removeAllChildren()\r\n        this.isInitReadyBlock = true\r\n        for (let i = 0; i < RNUM; i++) {\r\n            // history data\r\n            if (isInit && DataManager.instance.mode == ENUM_GAME_MODE.SCORE && DataManager.instance.historyData) {\r\n                const { ready } = DataManager.instance.historyData\r\n                if (ready[i] >= 0) {\r\n                    let index = ready[i]\r\n                    const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                    const slot = this.slots_ready.children[i]\r\n                    blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                    blockReady.scale = 0\r\n                } else {\r\n                    continue\r\n                }\r\n            } else {\r\n                let index = random(1, TNUM)\r\n                // index = XNUM * 2 + 1\r\n                const blockReady = PoolManager.instance.getNode(`BlockReady${index}`, this.blocks_ready)\r\n                const slot = this.slots_ready.children[i]\r\n                blockReady.getComponent(BlockReady).init(index, cc.v2(slot.x, slot.y))\r\n                blockReady.scale = 0\r\n            }\r\n        }\r\n        // 检测转态 Detect state transition\r\n        this.checkReadyBlocks()\r\n        // 动画 animation\r\n        for (let j = 0; j < this.blocks_ready.children.length; j++) {\r\n            const blockReady = this.blocks_ready.children[j]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            cc.tween(blockReady).to(0.3, { scale: blockReadyComp.scale }).start()\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.isInitReadyBlock = false\r\n        }, 0.3)\r\n    }\r\n\r\n    setTouch(bool: boolean = true) {\r\n        if (bool) {\r\n            this.node.on('touchstart', this.onTouchStart, this)\r\n            this.node.on('touchmove', this.onTouchMove, this)\r\n            this.node.on('touchend', this.onTouchOver, this)\r\n            this.node.on('touchcancel', this.onTouchOver, this)\r\n        } else {\r\n            this.node.off('touchstart', this.onTouchStart, this)\r\n            this.node.off('touchmove', this.onTouchMove, this)\r\n            this.node.off('touchend', this.onTouchOver, this)\r\n            this.node.off('touchcancel', this.onTouchOver, this)\r\n        }\r\n    }\r\n\r\n    shuffleTween : cc.Tween<Node> = null;\r\n\r\n    startSkillShuffleTween(){\r\n        if(this.shuffleTween == null){\r\n            this.shuffleTween = cc.tween(this.btnSkill_1_shuffle)\r\n            .to(1, { scale: 1.15 }) // Scale up in 1 second\r\n            .to(1, { scale: 1 })   // Scale down in 1 second\r\n            .union()               // Combine both tweens\r\n            .repeatForever()       // Repeat indefinitely\r\n            .start();\r\n        }\r\n        else{\r\n            this.shuffleTween.start();\r\n        }\r\n    }\r\n\r\n    stopSkillShuffleTween(){\r\n        if(this.shuffleTween){\r\n            this.shuffleTween.stop();\r\n        }\r\n        if(this.btnSkill_1_shuffle){\r\n            this.btnSkill_1_shuffle.scale = 1;\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    setSkill(bool: boolean = true) {\r\n        if (bool) {\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.on('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.on('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.on('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.on('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.on('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.on('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.on('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.on('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.on('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.on('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.on('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.on('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.on('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.on('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.on('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.on('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.on('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.on('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.on('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.on('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.on('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.on('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.on('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.on('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n\r\n\r\n        } else {\r\n\r\n            //skill - main\r\n            this.btnSkill_1_shuffle.off('click', this.skill_1_shuffle_clicked, this)\r\n            this.btnSkill_2_bomb.off('click', this.skill_2_bomb_clicked, this)\r\n            this.btnSkill_3_select.off('click', this.skill_3_select_clicked, this)\r\n\r\n            //skill - buy\r\n            this.btn_buy_skill_1_ad.off('click', this.show_ad_rewarded_skill_1_shuffle, this)\r\n\r\n            this.btn_buy_skill_1_confirm.off('click', this.buy_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_buy_skill_2_confirm.off('click', this.buy_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_buy_skill_3_confirm.off('click', this.buy_skill_3_select_confirm_clicked, this)\r\n\r\n            this.btn_buy_skill_1_decline.off('click', this.closeBuySkill_1, this)\r\n            this.btn_buy_skill_2_decline.off('click', this.closeBuySkill_2, this)\r\n            this.btn_buy_skill_3_decline.off('click', this.closeBuySkill_3, this)\r\n\r\n            //skill - use\r\n            this.btn_use_skill_1_confirm.off('click', this.use_skill_1_shuffle_confirm_clicked, this)\r\n            this.btn_use_skill_2_confirm.off('click', this.use_skill_2_bomb_confirm_clicked, this)\r\n            this.btn_use_skill_3_confirm.off('click', this.use_skill_3_select_confirm_clicked, this)\r\n            \r\n            this.btn_use_skill_1_decline.off('click', this.closeUseSkill_1, this)\r\n            this.btn_use_skill_2_decline.off('click', this.closeUseSkill_2, this)\r\n            this.btn_use_skill_3_decline.off('click', this.closeUseSkill_3, this)\r\n\r\n\r\n            ///\r\n            this.btnShop.off('click', this.openShop, this)\r\n\r\n            this.btnLoseAd_confirm.off('click', this.onLoseAdConfirmClicked, this)\r\n            this.btnLoseAd_decline.off('click', this.onLoseDeclineClicked, this)\r\n            this.btnLoseSubscribe_confirm.off('click', this.onLoseSbuscribeConfirmClicked, this)\r\n            this.btnLoseSubscribe_decline.off('click', this.onLoseDeclineClicked, this)\r\n\r\n            this.btnLoseBuyShuffle_confirm_buy.off('click', this.onLoseBuyShuffle_Confirm_Buy_Clicked, this)\r\n            this.btnLoseBuyShuffle_confirm_ad.off('click', this.onLoseBuyShuffle_Confirm_Ad_Clicked, this)\r\n            this.btnLoseBuyShuffle_decline.off('click', this.onLoseBuyShuffle_Decline_Clicked, this)\r\n        }\r\n    }\r\n\r\n    onTouchStart(e: cc.Event.EventTouch) {\r\n        this.hasShowTip = false\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING && this.isInitReadyBlock) return\r\n        if(this.isTouchStarted)\r\n            return;\r\n\r\n        this.isTouchStarted = true;\r\n        const location = e.getLocation();\r\n\r\n        if (this.isBomb) {\r\n            const point_main = this.blocks_main.convertToNodeSpaceAR(location)\r\n            let block = null\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const b = this.blocks_main.children[i]\r\n                const box = b.getBoundingBox()\r\n                if (box.contains(point_main)) {\r\n                    block = b\r\n                    break\r\n                }\r\n            }\r\n            if (block) {\r\n                const blockComp = block.getComponent(Block)\r\n                const row = Math.floor(blockComp.index / XNUM)\r\n                const index = blockComp.index % XNUM\r\n                let indexArr = [blockComp.index]\r\n                // 左\r\n                const lindex = index - 1\r\n                if (lindex >= 0) {\r\n                    indexArr.push(row * XNUM + lindex)\r\n                }\r\n                // 右\r\n                const rindex = index + 1\r\n                if (rindex < XNUM) {\r\n                    indexArr.push(row * XNUM + rindex)\r\n                }\r\n                // 上\r\n                const urow = row + 1\r\n                if (urow < XNUM) {\r\n                    indexArr.push(urow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(urow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(urow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 下\r\n                const drow = row - 1\r\n                if (drow >= 0) {\r\n                    indexArr.push(drow * XNUM + index)\r\n                    const lindex = index - 1\r\n                    if (lindex >= 0) {\r\n                        indexArr.push(drow * XNUM + lindex)\r\n                    }\r\n                    const rindex = index + 1\r\n                    if (rindex < XNUM) {\r\n                        indexArr.push(drow * XNUM + rindex)\r\n                    }\r\n                }\r\n                // 遍历爆炸\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_BOMB)\r\n                TelegramWebApp.Instance.hapticHeavyImpact();\r\n\r\n                for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                    const block = this.blocks_main.children[i]\r\n                    const blockComp = block.getComponent(Block)\r\n                    if (indexArr.includes(blockComp.index)) {\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.SHOW) this.setScore()\r\n                        blockComp.setActive(false)\r\n                        blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                        EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    }\r\n                }\r\n                this.isBomb = false\r\n                this.skillTip.active = false\r\n            }\r\n            return\r\n        }\r\n\r\n        const point_ready = this.blocks_ready.convertToNodeSpaceAR(location)\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const box = blockReady.getBoundingBox()\r\n            if (box.contains(point_ready) && blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_ACTIVE)\r\n                blockReadyComp.setActive(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchMove(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                const delta = e.getDelta()\r\n                blockReadyComp.setMove(delta.x, delta.y)\r\n                // 检测放置\r\n                this.checkPlace()\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchOver(e: cc.Event.EventTouch) {\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                AudioManager.instance.playSound(ENUM_AUDIO_CLIP.BLOCK_UNACTIVE)\r\n                TelegramWebApp.Instance.hapticLightImpact();\r\n\r\n                if (this.hasShowTip && this.tryShowPlace()) {\r\n                    //console.log(\"BLOCK PLACED\")\r\n                    //this.showPlace()\r\n                    // 删除readyblock\r\n                    blockReady.removeFromParent()\r\n                    // 生成readyblock\r\n                    this.createReadyBlock()\r\n\r\n                    this.tryShowAdOnBlockCount();\r\n                    \r\n                } else {\r\n                    blockReadyComp.setActive(false)\r\n                }\r\n            }\r\n        }\r\n        // 合并操作\r\n        this.doCombine()\r\n        // 重新检测转态\r\n        this.checkReadyBlocks()\r\n        // 胜负\r\n        this.checkIfGameOver()\r\n        // 储存\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData()\r\n        }\r\n\r\n        this.isTouchStarted = false;\r\n\r\n        console.log(isOnline())\r\n\r\n        if(!isOnline()){\r\n        }\r\n    }\r\n\r\n    tryShowAdOnBlockCount(){\r\n        this.blocksPlacedCount++;\r\n\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n\r\n        // if(this.blocksPlacedCount % 24 == 0){\r\n        //     AdsManager.Instance.preload_ShowAd_InApp_Intestitial();\r\n        // }\r\n    }\r\n\r\n    tryShowAdGameEnd(){\r\n        if(this.isPremiumPurchased)\r\n            return;\r\n        //AdsGramController.Instance.showFullscreenAd();\r\n        //MonetagController.Instance.old_1_showInApp_Interstitial(); \r\n        //звичайна реклама, не ревардед\r\n        AdsManager.Instance.showAd_InApp_Intestitial();\r\n    }\r\n\r\n    async show_ad_rewarded_skill_1_shuffle(){\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n           return;\r\n        }\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeLoseBuyShufflePopup();\r\n            this.closeBuySkill_1();\r\n            this.doSkillShuffle();\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeLoseBuyShufflePopup();\r\n        //     this.closeBuySkill_1();\r\n        //     this.doSkillShuffle();\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n\r\n        //     // MonetagController.Instance.showOncklicka_Rewarded_1()\r\n        //     // .then(() => {\r\n        //     //     // Ad successfully watched, resolve the reward logic here\r\n        //     //     console.log('Ad successfully watched!');\r\n        //     //     this.closeLoseBuyShufflePopup();\r\n        //     //     this.closeBuySkill_1();\r\n        //     //     this.doSkillShuffle();\r\n        //     // })\r\n        //     // .catch((error) => {\r\n        //     //     // Ad failed to show or was skipped, handle rejection\r\n        //     //     console.error('Ad 2 failed or was skipped:', error);\r\n        //     // });\r\n        // });\r\n    }\r\n\r\n    async show_ad_rewarded_skill_2_bomb(){\r\n\r\n        const adWatched = await AdsManager.Instance.showAd_Rewarded_Intestitial();\r\n\r\n        if (adWatched) {\r\n            //giveRewardToUser\r\n            console.log('Ad successfully watched!');\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb(false);\r\n\r\n        } else {\r\n          console.log(\"User didn't watch the ad. No reward granted.\");\r\n          this.doGameOver();\r\n        }\r\n\r\n        //MonetagController.Instance.old_2_showRewarded_Interstitial()\r\n        // AdsManager.Instance.showAd_Rewarded_Intestitial()\r\n        // .then(() => {\r\n        //     // Ad successfully watched, resolve the reward logic here\r\n        //     console.log('Ad successfully watched!');\r\n        //     this.closeBuySkill_2();\r\n        //     this.doSkillBomb(false);\r\n        // })\r\n        // .catch((error) => {\r\n        //     // Ad failed to show or was skipped, handle rejection\r\n        //     console.error('Ad failed or was skipped:', error);\r\n        //     this.doGameOver();\r\n        // });\r\n\r\n    }\r\n\r\n    checkPlace() {\r\n        // 选中相对位置 Select relative position\r\n        let rIndex = 0\r\n        let rPos = null\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.isActive) {\r\n                rIndex = blockReadyComp.index\r\n                rPos = blockReadyComp.getRelPos(this.blocks_main)\r\n            }\r\n        }\r\n        // 隐藏tip层  Hide tip layer\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n        }\r\n        // 检测 Detection\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            // 两点距离 distance between two points\r\n            const dis = getDistance(block.getPosition(), rPos)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.HIDE && dis < BSIZE / 2) {\r\n                // 左下索引 lower left index\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM+1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2  + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 -1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1] \r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n                        break\r\n                }\r\n                this.showPlaceTip(blockIndexArr, i)\r\n                break\r\n            } else {\r\n                this.hasShowTip = false\r\n            }\r\n        }\r\n        // 判断满足删除  Judgment is satisfied and deleted\r\n        this.combineNum = this.checkCombine()\r\n    }\r\n\r\n    // 显示tip层  Show tip layer\r\n    showPlaceTip(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                const index = bIndex + arr[j]\r\n                if (index < XNUM * XNUM) {\r\n                    const block = blocks[index]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.TIP)\r\n                }\r\n            }\r\n            this.hasShowTip = true\r\n        } else {\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 显示 show\r\n    tryShowPlace() : boolean {\r\n        var isPlaced = false;\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            if (blockComp.status == ENUM_BLOCK_STATUS.TIP) {\r\n                blockComp.setOpacity(ENUM_BLOCK_STATUS.SHOW)\r\n                isPlaced = true;\r\n                // 计分+1\r\n                if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n                    this.setScore()\r\n                }\r\n            }\r\n        }\r\n\r\n        return isPlaced;\r\n    }\r\n\r\n    // 分数累加  Points add up\r\n    setScore() {\r\n        DataManager.instance.score += 1\r\n        this.score_current_num.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        if (DataManager.instance.score > DataManager.instance.scoreMax) {\r\n            DataManager.instance.scoreMax = DataManager.instance.score\r\n            DataManager.instance.save()\r\n        }\r\n    }\r\n\r\n    // 检测ready block转态  Detect ready block state transition\r\n    checkReadyBlocks() {\r\n\r\n        var isHideAny = false;\r\n\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            const rIndex = blockReadyComp.index\r\n            let isShow = false\r\n            for (let j = 0; j < this.blocks_main.children.length; j++) {\r\n                const block = this.blocks_main.children[j]\r\n                const blockComp = block.getComponent(Block)\r\n                let blockIndexArr = []\r\n                switch (rIndex) {\r\n                    case 1:\r\n                        blockIndexArr = [0]\r\n                        break\r\n                    case 2:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2]\r\n                        break\r\n                    case 3:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2]\r\n                        break\r\n                    case 4:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 5:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 6:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2, XNUM * 2 + 2]\r\n                        break\r\n                    case 7:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM, XNUM + 1, XNUM + 2, XNUM * 2, XNUM * 2 + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 8:\r\n                        if (blockComp.x < XNUM - 3 && blockComp.y < XNUM) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 3]\r\n                        break\r\n                    case 9:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 3) blockIndexArr = [0, 1, 2, 3]\r\n                        break\r\n                    case 10:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM + 1, XNUM * 2 + 2]\r\n                        break\r\n                    case 11:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y > 1) blockIndexArr = [0, XNUM - 1, XNUM * 2 - 2]\r\n                        break\r\n                    case 12:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 13:\r\n                        if (blockComp.x < XNUM && blockComp.y < XNUM - 1) blockIndexArr = [0, 1]\r\n                        break\r\n                    case 14:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM) blockIndexArr = [0, XNUM]\r\n                        break\r\n                    case 15:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM]\r\n                        break\r\n                    case 16:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM]\r\n                        break\r\n                    case 17:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 18:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, 2, XNUM, XNUM + 1]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, 1, XNUM - 1, XNUM]\r\n                        break\r\n                    case 19:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2 - 1]\r\n                        break\r\n                    case 20:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1]\r\n                        break\r\n                    case 21:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1]\r\n                        break\r\n                    case 22:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 23:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, XNUM, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 24:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM + 1 XNUM * 2, XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM, XNUM * 2 - 1, XNUM * 2]\r\n                        break\r\n                    case 25:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 2]\r\n                        break\r\n                    case 26:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, 1, XNUM + 1, XNUM * 2 + 1]\r\n                        break\r\n                    case 27:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM]\r\n                        break\r\n                    case 28:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM * 2, XNUM * 2 + 1]\r\n                        break\r\n                    case 29:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [2, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y > 1) blockIndexArr = [0, XNUM - 2, XNUM - 1, XNUM]\r\n                        break\r\n                    case 30:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [0, XNUM, XNUM + 1, XNUM * 2]\r\n                        break\r\n                    case 31:\r\n                        // if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [1, XNUM, XNUM + 1 XNUM + 2]\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 1 && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM + 1]\r\n                        break\r\n                    case 32:\r\n                        // if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 1) blockIndexArr = [1, XNUM, XNUM + 1 XNUM * 2 + 1]\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM && blockComp.y > 0) blockIndexArr = [0, XNUM - 1, XNUM, XNUM * 2]\r\n                        break\r\n                    case 33:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, 2, XNUM + 1]\r\n                        break\r\n                    case 34:\r\n                        if (blockComp.x < XNUM - 1 && blockComp.y < XNUM - 2) blockIndexArr = [0, 1, XNUM + 1, XNUM + 2]\r\n                        break\r\n                    case 35:\r\n                        if (blockComp.x < XNUM - 2 && blockComp.y < XNUM - 2) blockIndexArr = [0, 2, XNUM + 1, XNUM * 2, XNUM * 2 + 2]\r\n\r\n                        break\r\n                }\r\n                if (blockIndexArr.length) {\r\n                    if (this.getReadyBlockStatus(blockIndexArr, j)) isShow = true\r\n                }\r\n            }\r\n            isShow ? blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.SHOW) : blockReadyComp.setOpacity(ENUM_RBLOCK_STATUS.HIDE)\r\n\r\n\r\n            if(!isShow){\r\n                isHideAny = true;\r\n            }\r\n        }\r\n\r\n        if(isHideAny){\r\n            this.startSkillShuffleTween();\r\n        }\r\n        else{\r\n            this.stopSkillShuffleTween();\r\n        }\r\n    }\r\n\r\n    // ready block状态显隐\r\n    getReadyBlockStatus(arr: number[], bIndex: number) {\r\n        let showCount = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const index = bIndex + arr[i]\r\n            if (index < XNUM * XNUM) {\r\n                const block = blocks[index]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) showCount += 1\r\n            }\r\n        }\r\n        if (showCount >= arr.length) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 生成ready block\r\n    createReadyBlock() {\r\n        const len = this.blocks_ready.children.length\r\n        if (len <= 0) {\r\n            this.initReadyBlocks()\r\n            // 新生成的至少一个可选的  Newly generated at least one optional\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks()\r\n            }\r\n        }\r\n    }\r\n\r\n    // 检查当前ready block状态\r\n    checkReadyStatus() {\r\n        let status = false\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            if (blockReadyComp.status == ENUM_RBLOCK_STATUS.SHOW) {\r\n                status = true\r\n                break\r\n            }\r\n        }\r\n        return status\r\n    }\r\n\r\n    // 判断是否可合并  Determine whether it can be merged\r\n    checkCombine() {\r\n        let combineNum = 0\r\n        const blocks = this.blocks_main.children\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.isCombine = false\r\n        }\r\n        // horizontal\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i * XNUM + j]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i * XNUM + j]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n        // vertical\r\n        for (let i = 0; i < XNUM; i++) {\r\n            let isCombine = true\r\n            for (let j = 0; j < XNUM; j++) {\r\n                const block = blocks[i + j * XNUM]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                    isCombine = false\r\n                }\r\n            }\r\n            if (isCombine) {\r\n                for (let j = 0; j < XNUM; j++) {\r\n                    const block = blocks[i + j * XNUM]\r\n                    const blockComp = block.getComponent(Block)\r\n                    blockComp.isCombine = true\r\n                }\r\n            }\r\n        }\r\n\r\n        //blocks\r\n        for (let i = 0; i < XNUM; i += 3) { //horizontal\r\n\r\n            for (let j = 0; j < XNUM; j += 3) { //vertical\r\n                //one block (i, j)\r\n                let isCombine = true\r\n\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        if (blockComp.status == ENUM_BLOCK_STATUS.HIDE) {\r\n                            isCombine = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                if (!isCombine)\r\n                    continue;\r\n\r\n                //set combine to blocks\r\n                for (let x = 0; x < 3; x++) {\r\n                    for (let y = 0; y < 3; y++) {\r\n                        let xx = i + x;\r\n                        let yy = j + y;\r\n\r\n                        const block = blocks[xx + yy * XNUM]\r\n                        const blockComp = block.getComponent(Block)\r\n                        blockComp.isCombine = true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = blocks[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockComp.setActive(blockComp.isCombine)\r\n            if (blockComp.isCombine) combineNum += 1\r\n        }\r\n        return combineNum\r\n    }\r\n\r\n    // 合并操作  merge operation\r\n    doCombine() { \r\n        if (this.hasShowTip) {\r\n            if (this.combineNum) {\r\n                this.comboNum += 1\r\n            } else {\r\n                this.comboNum = 0\r\n            }\r\n        }\r\n        if (this.combineNum) {\r\n            for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n                const block = this.blocks_main.children[i]\r\n                const blockComp = block.getComponent(Block)\r\n                if (blockComp && blockComp.isCombine) {\r\n                    blockComp.setActive(false)\r\n                    blockComp.setOpacity(ENUM_BLOCK_STATUS.HIDE)\r\n                    EffectManager.instance.play('EffCombine', this.eff, { pos: block.getPosition() })\r\n                    TelegramWebApp.Instance.hapticSuccesNotification();\r\n                    this.setScore()\r\n                }\r\n            }\r\n            // 连击效果 combo effect\r\n            if (this.comboNum >= 9) this.comboNum = 9\r\n            this.setCombo(this.comboNum)\r\n\r\n            // 音效根据消除数量  Sound effects are based on the number of eliminations\r\n            AudioManager.instance.playSound('combine_0')\r\n            const num = Math.floor(this.combineNum / XNUM)\r\n            if (num == 2) {\r\n                const index = random(1, 2)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            if (num >= 3) {\r\n                const index = random(3, 5)\r\n                AudioManager.instance.playSound(`combine_${index}`)\r\n            }\r\n            // 重置状态  reset state\r\n            this.combineNum = 0\r\n            this.hasShowTip = false\r\n        }\r\n    }\r\n\r\n    // 判断游戏是否结束  Determine if the game is over\r\n    async checkIfGameOver() {\r\n        const status = this.checkReadyStatus()\r\n\r\n        if (!status) {\r\n\r\n            if(this.isFreeBombUsed){\r\n\r\n                if(this.skillsCount < MAX_SKILLS){\r\n                    this.showLoseBuyShufflePopup();\r\n                }\r\n                else{\r\n                    await delay(2000);\r\n                    this.doGameOver();\r\n                }\r\n\r\n            }\r\n            else{\r\n\r\n                UserController.Instance?.getChannelMembership().then((response) => {\r\n                    const status = response.result.status;\r\n                    if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                        this.showFreeBombForAdPopup();\r\n                    }\r\n                    else{\r\n                        this.showFreeBombForSubscribePopup();\r\n                    }\r\n        \r\n                }).catch((error) => {\r\n                    console.error(\"Failed to fetch user data:\", error);\r\n                    this.showFreeBombForAdPopup();\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private doGameOver() {\r\n        StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        TelegramWebApp.Instance.hapticErrorNotification();\r\n        this.tryShowAdGameEnd();\r\n    }\r\n\r\n    // 连击\r\n    setCombo(num: number) {\r\n        if (num < 2) return\r\n        const layers = this.combo.getChildByName('layers')\r\n        for (let i = 0; i < layers.children.length; i++) {\r\n            const layer = layers.children[i]\r\n            layer.active = parseInt(layer.name) == num - 1\r\n        }\r\n        this.combo.stopAllActions()\r\n        this.combo.x = 750\r\n        this.combo.active = true;\r\n        const act1 = cc.moveTo(0.5, 0, this.combo.y)\r\n        const act2 = cc.delayTime(1)\r\n        const act3 = cc.moveTo(0.5, -750, this.combo.y)\r\n        const act4 = cc.callFunc(() => {\r\n            this.combo.active = false;\r\n        })\r\n        const act = cc.sequence(act1, act2, act3,act4)\r\n        cc.tween(this.combo).then(act).start()\r\n    }\r\n\r\n    setUsedSkillsLabels(){\r\n        this.buy_skill_popup_1_used_label.string =\r\n        this.buy_skill_popup_2_used_label.string =\r\n        this.buy_skill_popup_3_used_label.string =\r\n        this.use_skill_popup_1_used_label.string =\r\n        this.use_skill_popup_2_used_label.string =\r\n        this.use_skill_popup_3_used_label.string =\r\n        this.lose_confirm_popup_buyShuffle_used_label.string =\r\n        LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n    }\r\n\r\n    setSkillsButtons(){\r\n        const activeColor = cc.color(255,255,255);\r\n        const unactiveColor = cc.color(220,220,220);\r\n        const color = this.skillsCount >= MAX_SKILLS ? unactiveColor : activeColor;\r\n\r\n        this.btnSkill_1_shuffle_icon_video.color =\r\n        this.label_skill_1_shuffle_amount.node.parent.color = \r\n        this.label_skill_2_bomb_amount.node.parent.color = \r\n        this.label_skill_3_replace_amount.node.parent.color = \r\n        this.btnSkill_1_shuffle.color = \r\n        this.btnSkill_2_bomb.color = \r\n        this.btnSkill_3_select.color = color;\r\n\r\n\r\n        this.btnSkill_1_shuffle_icon_video.opacity =\r\n        this.label_skill_1_shuffle_amount.node.parent.opacity = \r\n        this.label_skill_2_bomb_amount.node.parent.opacity = \r\n        this.label_skill_3_replace_amount.node.parent.opacity = \r\n        this.btnSkill_1_shuffle.opacity = \r\n        this.btnSkill_2_bomb.opacity = \r\n        this.btnSkill_3_select.opacity = this.skillsCount >= MAX_SKILLS ? 125 : 255;\r\n\r\n        this.label_skill_1_shuffle_amount.string = this.skills_1_shuffle_owned().toString();\r\n        this.label_skill_2_bomb_amount.string = this.skills_2_bomb_owned().toString();\r\n        this.label_skill_3_replace_amount.string = this.skills_3_change_block_owned().toString();\r\n\r\n        this.label_skill_1_shuffle_amount.node.parent.active = this.skills_1_shuffle_owned() > 0;\r\n        this.label_skill_2_bomb_amount.node.parent.active = this.skills_2_bomb_owned() > 0;\r\n        this.label_skill_3_replace_amount.node.parent.active = this.skills_3_change_block_owned() > 0;\r\n    }\r\n\r\n    showSkillsUsedMessage(){\r\n        const msg = LocalizationManager.instance.getLocalizedString(\"hints_used\") + `${this.skillsCount}/${MAX_SKILLS}`\r\n        ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        this.setUsedSkillsLabels();\r\n    }\r\n\r\n    skill_1_shuffle_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            this.use_skill_popup_1_shuffle.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_1_shuffle.active = true;\r\n        }\r\n    }\r\n\r\n    skill_2_bomb_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_2_bomb_owned() > 0){\r\n            this.use_skill_popup_2_bomb.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_2_bomb.active = true;\r\n        }\r\n    }\r\n\r\n    skill_3_select_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if(this.skillsCount >= MAX_SKILLS){\r\n            this.showSkillsUsedMessage();\r\n            return;\r\n        }\r\n        this.setUsedSkillsLabels();\r\n        if(this.skills_3_change_block_owned() > 0){\r\n            this.use_skill_popup_3_replace.active = true;\r\n        }\r\n        else{\r\n            this.buy_skill_popup_3_replace.active = true;\r\n        }\r\n    }\r\n    \r\n    closeBuySkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeBuySkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeBuySkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.buy_skill_popup_3_replace.active = false;\r\n    }\r\n   \r\n    closeUseSkill_1(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_1_shuffle.active = false;\r\n    }\r\n\r\n    closeUseSkill_2(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_2_bomb.active = false;\r\n    }\r\n\r\n    closeUseSkill_3(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.use_skill_popup_3_replace.active = false;\r\n    }\r\n\r\n    buy_skill_1_shuffle_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_SHUFFLE\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_1();\r\n            this.closeLoseBuyShufflePopup();\r\n            this.doSkillShuffle();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(1);\r\n        });\r\n       \r\n    }\r\n\r\n    buy_skill_2_bomb_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return;\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_BOMB\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_2();\r\n            this.doSkillBomb();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(3);\r\n        });\r\n    }\r\n\r\n    \r\n    buy_skill_3_select_confirm_clicked() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        \r\n        UserController.Instance.postBonusTransaction(\"BUY_CHANGE_BLOCK\").then((responce) =>{\r\n            console.log(\"Transaction Success:\", responce);\r\n            this.closeBuySkill_3();\r\n            this.doSkillSelectNewBlock();\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchUserData();\r\n            this.buyCoins(2);\r\n        });\r\n    }\r\n\r\n    async use_skill_1_shuffle_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(this.skills_1_shuffle_owned() > 0){\r\n            await this.decrementShuffleAndUpdate();\r\n            this.doSkillShuffle();\r\n        }\r\n        \r\n        this.closeUseSkill_1();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_2_bomb_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n       \r\n        if(this.skills_2_bomb_owned() > 0){\r\n            await this.decrementBombsAndUpdate();\r\n            this.doSkillBomb();\r\n        }\r\n\r\n        this.closeUseSkill_2();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n    async use_skill_3_select_confirm_clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    \r\n        if(this.skills_3_change_block_owned() > 0){\r\n            await this.decrementChangeBlockAndUpdate();\r\n            this.doSkillSelectNewBlock();\r\n        }\r\n\r\n        this.closeUseSkill_3();\r\n        this.setSkillsButtons();\r\n    }\r\n\r\n\r\n    // 技能炸弹 skill bomb\r\n    private doSkillBomb(doCount: boolean = true) {\r\n\r\n        if(doCount){\r\n            this.skillsCount++;\r\n        }\r\n\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.isBomb = true;\r\n            this.skillTip.active = true;\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    // 技能洗牌 Skill shuffle\r\n    private doSkillShuffle() {\r\n        this.skillsCount++;\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n        SdkManager.instance.showVideoAd(() => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) });\r\n            }\r\n            this.initReadyBlocks();\r\n            while (!this.checkReadyStatus()) {\r\n                this.initReadyBlocks();\r\n            }\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) });\r\n        });\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    private doSkillSelectNewBlock() {\r\n        this.skillsCount++;\r\n\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.SKILL_SHUFFLE);\r\n\r\n        this.initSelectChangeBlocks();\r\n        this.hint_select_change.active = true;\r\n\r\n        this.fetchUserData();\r\n        this.setSkillsButtons();\r\n\r\n        if (DataManager.instance.mode == ENUM_GAME_MODE.SCORE) {\r\n            this.setHistoryData();\r\n        }\r\n    }\r\n\r\n    setHistoryData() {\r\n        if (DataManager.instance.status == ENUM_GAME_STATUS.UNRUNING) return\r\n        let blockStatusArr = []\r\n        for (let i = 0; i < this.blocks_main.children.length; i++) {\r\n            const block = this.blocks_main.children[i]\r\n            const blockComp = block.getComponent(Block)\r\n            blockStatusArr.push(blockComp.status)\r\n        }\r\n\r\n        let blockReadyIndexArr = []\r\n        let tempReadyCompArr = []\r\n        for (let i = 0; i < this.blocks_ready.children.length; i++) {\r\n            const blockReady = this.blocks_ready.children[i]\r\n            const blockReadyComp = blockReady.getComponent(BlockReady)\r\n            tempReadyCompArr.push(blockReadyComp)\r\n        }\r\n        for (let i = 0; i < RNUM; i++) {\r\n            const slot = this.slots_ready.children[i]\r\n            const index = tempReadyCompArr.findIndex(com => com.pos.x == slot.x)\r\n            if (index >= 0) {\r\n                blockReadyIndexArr.push(tempReadyCompArr[index].index)\r\n            } else {\r\n                blockReadyIndexArr.push(-1)\r\n            }\r\n        }\r\n        DataManager.instance.historyData = { main: blockStatusArr, ready: blockReadyIndexArr, score: DataManager.instance.score, bonusesUsed: this.skillsCount, isFreeBombUsed: this.isFreeBombUsed }\r\n        DataManager.instance.save()\r\n    }\r\n\r\n    openShop(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n    }\r\n\r\n    buyCoins(coins_amount: number){\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n\r\n                this.fetchUserData();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n\r\n    fetchUserData(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n            this.isPremiumPurchased = response.data.is_premium;\r\n            DataManager.instance.userData = response.data;\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    showFreeBombForAdPopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_ad.active = true;\r\n    }\r\n\r\n    showFreeBombForSubscribePopup(){\r\n        this.isFreeBombUsed = true;\r\n        this.lose_confirm_popup_subscribe.active = true;\r\n    }\r\n\r\n    closeFreeBombPopup(){\r\n        this.lose_confirm_popup_ad.active = false;\r\n        this.lose_confirm_popup_subscribe.active = false;\r\n    }\r\n\r\n    showLoseBuyShufflePopup(){\r\n        this.setUsedSkillsLabels();\r\n        this.lose_confirm_popup_buyShuffle.active = true;\r\n    }\r\n\r\n    closeLoseBuyShufflePopup(){\r\n        this.lose_confirm_popup_buyShuffle.active = false;\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Buy_Clicked(){\r\n        //continue game for buy bonus shuffle\r\n        this.buy_skill_1_shuffle_confirm_clicked();\r\n    }\r\n\r\n    onLoseBuyShuffle_Confirm_Ad_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus shuffle\r\n        this.show_ad_rewarded_skill_1_shuffle();\r\n    }\r\n\r\n    onLoseBuyShuffle_Decline_Clicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeLoseBuyShufflePopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    onLoseAdConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for ad bonus 3x3\r\n        this.closeFreeBombPopup();\r\n        this.show_ad_rewarded_skill_2_bomb();\r\n    }\r\n\r\n    onLoseSbuscribeConfirmClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //continue game for subscribe\r\n        //check subscription\r\n        UserController.Instance?.getChannelMembership().then((response) => {\r\n            const status = response.result.status;\r\n            if(status == \"member\" || status == \"administrator\" || status == \"creator\"){\r\n                this.closeFreeBombPopup();\r\n                this.closeBuySkill_2();\r\n                this.closeUseSkill_2();\r\n                this.doSkillBomb(false);\r\n            }\r\n            else{\r\n            //open link\r\n                TelegramWebApp.Instance.openTelegramLinkChannel();\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onLoseDeclineClicked(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //lose game\r\n        this.closeFreeBombPopup();\r\n        this.doGameOver();\r\n    }\r\n\r\n    async decrementShuffleAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.shuffle_amount){\r\n            DataManager.instance.userData.bonuses.shuffle_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementBombsAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.bomb_amount){\r\n            DataManager.instance.userData.bonuses.bomb_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n\r\n    async decrementChangeBlockAndUpdate(){\r\n        if(DataManager.instance.userData.bonuses?.change_block_amount){\r\n            DataManager.instance.userData.bonuses.change_block_amount--; \r\n            await patchBonusesAmount();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail \r\n\r\nimport { ENUM_UI_TYPE } from \"../Enum\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoadingLayer extends BaseLayer {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null\r\n\r\n    @property(cc.Sprite)\r\n    loadfill: cc.Sprite = null\r\n\r\n    @property(cc.Node)\r\n    progress: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    connect: cc.Node = null\r\n\r\n    @property(cc.Node)\r\n    loadingImage: cc.Node = null\r\n\r\n    start(){\r\n\r\n        cc.tween(this.loadingImage)\r\n        .by(3, { angle: -360 }) // Rotate 360 degrees in 1 second\r\n        .repeatForever() // Repeat indefinitely\r\n        .start();\r\n    }\r\n\r\n    update(dt: number) {\r\n        if(this.loadfill && this.node.active) {\r\n            this.loadfill.fillRange = DataManager.instance.loadingRate\r\n            if(DataManager.instance.loadingRate >= 1){\r\n                // menu已加载完毕\r\n                if(StaticInstance.uiManager.isActive(ENUM_UI_TYPE.MENU) && DataManager.instance.userData != null){\r\n                    this.hide()\r\n                }\r\n                else{\r\n                    this.progress.active = false;\r\n                    this.connect.active = true;\r\n                }\r\n            }\r\n            // if(DataManager.instance.loadingMessage != null){\r\n            //     this.setString(DataManager.instance.loadingMessage)\r\n            // }\r\n        }\r\n    }\r\n\r\n    setString(text: string){\r\n        if(this.label){\r\n            this.label.string = text;\r\n        }\r\n    }\r\n}\r\n","//import {i18n, LocalizedLabel} from \"../../../packages/i18n\";\r\n\r\nimport ALocaleLabel from \"../localization/ALocaleLabel\"\r\nimport DataManager from \"./DataManager\"\r\n\r\nexport default class LocalizationManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n            this._instance.init()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<LocalizationManager>()\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    changeLanguage(langCode) {\r\n        cc.log(`Language changed to: ${langCode}`);\r\n        DataManager.instance.language = langCode;\r\n        DataManager.instance.save();\r\n        this.refreshUI();\r\n    }\r\n\r\n    getLocalizedString(key: string): string {\r\n        var localizedString = jsonLocalization[key];\r\n\r\n        if (!localizedString) {\r\n            return \"null\";\r\n        }\r\n\r\n        switch (DataManager.instance.language) {\r\n            case \"en\":\r\n                return localizedString.en;\r\n            case \"ua\":\r\n            case \"uk\":\r\n                return localizedString.ua;\r\n            case \"de\":\r\n                return localizedString.de;\r\n            case \"es\":\r\n                return localizedString.es;\r\n            case \"ru\":\r\n                return localizedString.ru;\r\n            case \"cs\":\r\n                return localizedString.cs;\r\n            case \"sk\":\r\n                return localizedString.sk;\r\n            case \"pl\":\r\n                return localizedString.pl;\r\n            default:\r\n                return localizedString.en;\r\n        }\r\n    }\r\n\r\n    refreshUI() {\r\n\r\n        console.log(\"refreshUI \" + DataManager.instance.language);\r\n\r\n        // Refresh any text elements that need to be updated\r\n        let labels = cc.find(\"Canvas\").getComponentsInChildren(ALocaleLabel);\r\n        labels.forEach(label => {\r\n            label.fetchRender();\r\n        });\r\n    }\r\n};\r\n\r\nexport var jsonLocalization = {\r\n    \"testKey\": {\r\n        \"en\": \"TestEn\",\r\n        \"ua\": \"TestUa\",\r\n        \"de\": \"TestDe\",\r\n        \"es\": \"TestEs\",\r\n        \"ru\": \"TestRu\",\r\n        \"cs\": \"TestCs\",\r\n        \"sk\": \"TestSk\",\r\n        \"pl\": \"TestPl\"\r\n    },\r\n\r\n    // general\r\n\r\n    \"loading\": {\r\n        \"en\": \"LOADING...\",\r\n        \"ua\": \"ЗАГРУЗКА...\",\r\n        \"de\": \"LADEN...\",\r\n        \"es\": \"CARGANDO...\",\r\n        \"ru\": \"ЗАГРУЗКА...\",\r\n        \"cs\": \"NAČÍTÁNÍ...\",\r\n        \"sk\": \"NAČÍTAVANIE...\",\r\n        \"pl\": \"ŁADOWANIE...\"\r\n    },\r\n\r\n    \"coins_balance\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Баланс\",\r\n        \"de\": \"Balance\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n\r\n    \"btn_yes\": {\r\n        \"en\": \"Yes\",\r\n        \"ua\": \"Так\",\r\n        \"de\": \"Ja\",\r\n        \"es\": \"Sí\",\r\n        \"ru\": \"Да\",\r\n        \"cs\": \"Ano\",\r\n        \"sk\": \"Áno\",\r\n        \"pl\": \"Tak\"\r\n    },\r\n\r\n    \"btn_no\": {\r\n        \"en\": \"No\",\r\n        \"ua\": \"Ні\",\r\n        \"de\": \"Nein\",\r\n        \"es\": \"No\",\r\n        \"ru\": \"Нет\",\r\n        \"cs\": \"Ne\",\r\n        \"sk\": \"Nie\",\r\n        \"pl\": \"Nie\"\r\n    },\r\n\r\n    // main\r\n\r\n    \"main_start_btn\": {\r\n        \"en\": \"Start game\",\r\n        \"ua\": \"Розпочати гру\",\r\n        \"de\": \"Spiel starten\",\r\n        \"es\": \"Iniciar juego\",\r\n        \"ru\": \"Начать игру\",\r\n        \"cs\": \"Spustit hru\",\r\n        \"sk\": \"Spustiť hru\",\r\n        \"pl\": \"Rozpocznij grę\"\r\n    },\r\n\r\n    \"main_bottom_tab_1\": {\r\n        \"en\": \"Balance\",\r\n        \"ua\": \"Головна\",\r\n        \"de\": \"Gleichgewicht\",\r\n        \"es\": \"Balance\",\r\n        \"ru\": \"Баланс\",\r\n        \"cs\": \"Zůstatek\",\r\n        \"sk\": \"Zostatok\",\r\n        \"pl\": \"Saldo\"\r\n    },\r\n\r\n    \"main_bottom_tab_2\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n\r\n    \"main_bottom_tab_3\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задания\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"main_bottom_tab_4\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"main_bottom_tab_5\": {\r\n        \"en\": \"Output\",\r\n        \"ua\": \"Вивід\",\r\n        \"de\": \"Ausgabe\",\r\n        \"es\": \"Retiro\",\r\n        \"ru\": \"Вывод\",\r\n        \"cs\": \"Výběr\",\r\n        \"sk\": \"Výber\",\r\n        \"pl\": \"Wypłata\"\r\n    },\r\n\r\n    \"main_bottom_tab_6\": {\r\n        \"en\": \"Club\",\r\n        \"ua\": \"Клуб\",\r\n        \"de\": \"Club\",\r\n        \"es\": \"Club\",\r\n        \"ru\": \"Клуб\",\r\n        \"cs\": \"Club\",\r\n        \"sk\": \"Club\",\r\n        \"pl\": \"Club\"\r\n    },\r\n\r\n    // settings\r\n\r\n    \"settings_title\": {\r\n        \"en\": \"Settings\",\r\n        \"ua\": \"Налаштування\",\r\n        \"de\": \"Einstellungen\",\r\n        \"es\": \"Ajustes\",\r\n        \"ru\": \"Настройки\",\r\n        \"cs\": \"Nastavení\",\r\n        \"sk\": \"Nastavenia\",\r\n        \"pl\": \"Ustawienia\"\r\n    },\r\n\r\n    \"settings_sounds\": {\r\n        \"en\": \"Sounds\",\r\n        \"ua\": \"Звуки\",\r\n        \"de\": \"Klingt\",\r\n        \"es\": \"Sonidos\",\r\n        \"ru\": \"Звуки\",\r\n        \"cs\": \"Zvuky\",\r\n        \"sk\": \"Zvuky\",\r\n        \"pl\": \"Dźwięki\"\r\n    },\r\n\r\n    \"settings_music\": {\r\n        \"en\": \"Music\",\r\n        \"ua\": \"Музика\",\r\n        \"de\": \"Musik\",\r\n        \"es\": \"Música\",\r\n        \"ru\": \"Музыка\",\r\n        \"cs\": \"Hudba\",\r\n        \"sk\": \"Hudba\",\r\n        \"pl\": \"Muzyka\"\r\n    },\r\n\r\n    // settings language\r\n\r\n    \"settings_language\": {\r\n        \"en\": \"Language\",\r\n        \"ua\": \"Мова\",\r\n        \"de\": \"Sprache\",\r\n        \"es\": \"La lengua\",\r\n        \"ru\": \"Язык\",\r\n        \"cs\": \"Jazyk\",\r\n        \"sk\": \"Jazyk\",\r\n        \"pl\": \"Język\"\r\n    },\r\n\r\n    \"settings_lang_ua\": {\r\n        \"en\": \"Українська\",\r\n        \"ua\": \"Українська\",\r\n        \"de\": \"Українська\",\r\n        \"es\": \"Українська\",\r\n        \"ru\": \"Українська\",\r\n        \"cs\": \"Українська\",\r\n        \"sk\": \"Українська\",\r\n        \"pl\": \"Українська\"\r\n    },\r\n\r\n    \"settings_lang_en\": {\r\n        \"en\": \"English\",\r\n        \"ua\": \"English\",\r\n        \"de\": \"English\",\r\n        \"es\": \"English\",\r\n        \"ru\": \"English\",\r\n        \"cs\": \"English\",\r\n        \"sk\": \"English\",\r\n        \"pl\": \"English\"\r\n    },\r\n\r\n    \"settings_lang_de\": {\r\n        \"en\": \"Deutsch\",\r\n        \"ua\": \"Deutsch\",\r\n        \"de\": \"Deutsch\",\r\n        \"es\": \"Deutsch\",\r\n        \"ru\": \"Deutsch\",\r\n        \"cs\": \"Deutsch\",\r\n        \"sk\": \"Deutsch\",\r\n        \"pl\": \"Deutsch\"\r\n    },\r\n\r\n    \"settings_lang_es\": {\r\n        \"en\": \"Español\",\r\n        \"ua\": \"Español\",\r\n        \"de\": \"Español\",\r\n        \"es\": \"Español\",\r\n        \"ru\": \"Español\",\r\n        \"cs\": \"Español\",\r\n        \"sk\": \"Español\",\r\n        \"pl\": \"Español\"\r\n    },\r\n\r\n    \"settings_lang_ru\": {\r\n        \"en\": \"Русский\",\r\n        \"ua\": \"Русский\",\r\n        \"de\": \"Русский\",\r\n        \"es\": \"Русский\",\r\n        \"ru\": \"Русский\",\r\n        \"cs\": \"Русский\",\r\n        \"sk\": \"Русский\",\r\n        \"pl\": \"Русский\"\r\n    },\r\n\r\n    \"settings_lang_cs\": {\r\n        \"en\": \"Čeština\",\r\n        \"ua\": \"Čeština\",\r\n        \"de\": \"Čeština\",\r\n        \"es\": \"Čeština\",\r\n        \"ru\": \"Čeština\",\r\n        \"cs\": \"Čeština\",\r\n        \"sk\": \"Čeština\",\r\n        \"pl\": \"Čeština\"\r\n    },\r\n\r\n    \"settings_lang_sk\": {\r\n        \"en\": \"Slovenčina\",\r\n        \"ua\": \"Slovenčina\",\r\n        \"de\": \"Slovenčina\",\r\n        \"es\": \"Slovenčina\",\r\n        \"ru\": \"Slovenčina\",\r\n        \"cs\": \"Slovenčina\",\r\n        \"sk\": \"Slovenčina\",\r\n        \"pl\": \"Slovenčina\"\r\n    },\r\n\r\n    \"settings_lang_pl\": {\r\n        \"en\": \"Polski\",\r\n        \"ua\": \"Polski\",\r\n        \"de\": \"Polski\",\r\n        \"es\": \"Polski\",\r\n        \"ru\": \"Polski\",\r\n        \"cs\": \"Polski\",\r\n        \"sk\": \"Polski\",\r\n        \"pl\": \"Polski\"\r\n    },\r\n\r\n    // leaderboard\r\n\r\n    \"leaderboard_tab_1\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Beste\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n\r\n    \"leaderboard_tab_2\": {\r\n        \"en\": \"Total\",\r\n        \"ua\": \"Сумарний\",\r\n        \"de\": \"Gesamt\",\r\n        \"es\": \"Total\",\r\n        \"ru\": \"Суммарный\",\r\n        \"cs\": \"Celkem\",\r\n        \"sk\": \"Celkovo\",\r\n        \"pl\": \"Łącznie\"\r\n    },\r\n\r\n    \"leaderboard_winner_best_label\": {\r\n        \"en\": \"Winners by best result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach bestem Ergebnis\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy najlepszego wyniku\"\r\n    },\r\n\r\n    \"leaderboard_winner_sum_label\": {\r\n        \"en\": \"Winners by total result\",\r\n        \"ua\": \"Переможці cумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по общему результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"leaderboard_title\": {\r\n        \"en\": \"Leaderboard\",\r\n        \"ua\": \"Лідерборд\",\r\n        \"de\": \"Bestenliste\",\r\n        \"es\": \"Clasificación\",\r\n        \"ru\": \"Лидерборд\",\r\n        \"cs\": \"Žebříček\",\r\n        \"sk\": \"Rebríček\",\r\n        \"pl\": \"Tablica wyników\"\r\n    },\r\n\r\n    \"leaderboard_giveaway\": {\r\n        \"en\": \"Giveaway\",\r\n        \"ua\": \"Розіграш\",\r\n        \"de\": \"Verschenken\",\r\n        \"es\": \"Donar\",\r\n        \"ru\": \"Розыгрыш\",\r\n        \"cs\": \"Soutěž\",\r\n        \"sk\": \"Súťaž\",\r\n        \"pl\": \"Konkurs\"\r\n    },\r\n\r\n    \"leaderboard_giveaway_winners\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Winners\",\r\n        \"es\": \"Winners\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n\r\n    \"leaderboard_points\": {\r\n        \"en\": \"Points\",\r\n        \"ua\": \"Очки\",\r\n        \"de\": \"Punkte\",\r\n        \"es\": \"Agujas\",\r\n        \"ru\": \"Баллы\",\r\n        \"cs\": \"Body\",\r\n        \"sk\": \"Body\",\r\n        \"pl\": \"Punkty\"\r\n    },\r\n\r\n    \"leaderboard_nickname\": {\r\n        \"en\": \"Username\",\r\n        \"ua\": \"Нік юзера\",\r\n        \"de\": \"Benutzername\",\r\n        \"es\": \"Nombre de usuario\",\r\n        \"ru\": \"Имя пользователя\",\r\n        \"cs\": \"Uživatelské jméno\",\r\n        \"sk\": \"Používateľské meno\",\r\n        \"pl\": \"Nazwa użytkownika\"\r\n    },\r\n\r\n    //leaderboard - giveaway\r\n\r\n    \"giveaway_title\": {\r\n        \"en\": \"WEEKLY STARS GIVEAWAY!\",\r\n        \"ua\": \"ЩОТИЖНЕВИЙ РОЗІГРАШ STARS!\",\r\n        \"de\": \"WÖCHENTLICHE MÜNZVERLOSUNG!\",\r\n        \"es\": \"¡SORTEO SEMANAL DE STARS!\",\r\n        \"ru\": \"ЕЖЕНЕДЕЛЬНЫЙ РОЗЫГРЫШ STARS!\",\r\n        \"cs\": \"TÝDENNÍ SLOSOVÁNÍ O STARS!\",\r\n        \"sk\": \"TÝŽDENNÁ SÚŤAŽ O STARS!\",\r\n        \"pl\": \"TYGODNIOWE LOSOWANIE STARS!\"\r\n    },\r\n\r\n    \"giveaway_pool_title\": {\r\n        \"en\": \"Current total pool:\",\r\n        \"ua\": \"Актуальний загальний пул:\",\r\n        \"de\": \"Aktueller Gesamtpool:\",\r\n        \"es\": \"Pozo total actual:\",\r\n        \"ru\": \"Актуальный общий пул\",\r\n        \"cs\": \"Aktuální celkový fond:\",\r\n        \"sk\": \"Aktuálny celkový fond:\",\r\n        \"pl\": \"Aktualna pula nagród:\"\r\n    },\r\n\r\n    \"giveaway_bullet_1\": {\r\n        \"en\": \"50% of all Stars from in-game purchases + 50% of add revenue go to the total pool.\",\r\n        \"ua\": \"50% усіх Stars з внутрішньо ігрових покупок у грі + 50% з рекламних доходів йде в загальний пул\",\r\n        \"de\": \"50% aller Stars aus In-Game-Käufen im Spiel + 50% der Werbeeinnahmen gehen in den allgemeinen Pool\",\r\n        \"es\": \"El 50% de todas las Estrellas procedentes de las compras dentro del juego + el 50% de los ingresos por publicidad se destina al fondo general\",\r\n        \"ru\": \"50 % всех Stars от внутриигровых покупок + 50 % от доходов от рекламы идут в общий пул.\",\r\n        \"cs\": \"50 % všech Stars z nákupů ve hře + 50 % z příjmů z reklam jde do celkového fondu.\",\r\n        \"sk\": \"50 % všetkých Stars z nákupov v hre + 50 % z príjmov z reklamy ide do celkového fondu.\",\r\n        \"pl\": \"50% wszystkich Stars z zakupów w grze + 50% z dochodów z reklam trafia do puli nagród.\"\r\n    },\r\n\r\n    \"giveaway_bullet_2\": {\r\n        \"en\": \"This week, the top 5 players + 3 additional winners will share the Stars pool in 2 game categories: best result and total score from all games with 250+ points!\",\r\n        \"ua\": \"Цього тижня топ-5 гравців + 3 додаткові переможці розділять пул Stars на свої гаманці в 2 ігрових категоріях: найкращий результат та сума всіх ігор з рахунком 250+!\",\r\n        \"de\": \"Diese Woche teilen sich die 5 besten Spieler + 3 zusätzliche Gewinner den Stars-Pool in 2 Spielkategorien: Bestes Ergebnis und Gesamtpunktzahl aller Spiele mit 250+ Punkten!\",\r\n        \"es\": \"¡Esta semana, los 5 mejores jugadores + 3 ganadores adicionales se repartirán el fondo de Estrellas en 2 categorías de juego: mejor resultado y puntuación total de todos los juegos con 250+ puntos!\",\r\n        \"ru\": \"На этой неделе топ-5 игроков + 3 дополнительных победителя разделят пул Stars на свои кошельки в 2 игровых категориях: лучший результат и суммарный счёт всех игр с 250+ очками!\",\r\n        \"cs\": \"Tento týden si top 5 hráčů + 3 další vítězové rozdělí fond Stars ve 2 herních kategoriích: nejlepší výsledek a celkové skóre ze všech her s 250+ body!\",\r\n        \"sk\": \"Tento týždeň si top 5 hráčov + 3 ďalší víťazi rozdelia fond Stars v 2 herných kategóriách: najlepší výsledok a celkové skóre zo všetkých hier s 250+ bodmi!\",\r\n        \"pl\": \"W tym tygodniu 5 najlepszych graczy + 3 dodatkowych zwycięzców podzieli się pulą Stars w 2 kategoriach gry: najlepszy wynik i łączny wynik ze wszystkich gier z 250+ punktami!\"\r\n    },\r\n\r\n    \"giveaway_bullet_3\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_bullet_4\": {\r\n        \"en\": \"The distribution is as follows:\",\r\n        \"ua\": \"Розподіл відбувається таким чином:\",\r\n        \"de\": \"Die Verteilung erfolgt wie folgt:\",\r\n        \"es\": \"La distribución es la siguiente:\",\r\n        \"ru\": \"Распределение происходит следующим образом:\",\r\n        \"cs\": \"Rozdělení je následující:\",\r\n        \"sk\": \"Rozdelenie je nasledovné:\",\r\n        \"pl\": \"Podział wygląda następująco:\"\r\n    },\r\n\r\n    \"giveaway_place_1\": {\r\n        \"en\": \"1st place (35%)\",\r\n        \"ua\": \"1 місце (35%)\",\r\n        \"de\": \"1. Platz (35%)\",\r\n        \"es\": \"1er lugar (35%)\",\r\n        \"ru\": \"1 место (35%)\",\r\n        \"cs\": \"1. místo (35%)\",\r\n        \"sk\": \"1. miesto (35%)\",\r\n        \"pl\": \"1. miejsce (35%)\"\r\n    },\r\n\r\n    \"giveaway_place_2\": {\r\n        \"en\": \"2nd place (20%)\",\r\n        \"ua\": \"2 місце (20%)\",\r\n        \"de\": \"2. Platz (20%)\",\r\n        \"es\": \"2do lugar (20%)\",\r\n        \"ru\": \"2 место (20%)\",\r\n        \"cs\": \"2. místo (20%)\",\r\n        \"sk\": \"2. miesto (20%)\",\r\n        \"pl\": \"2. miejsce (20%)\"\r\n    },\r\n\r\n    \"giveaway_place_3\": {\r\n        \"en\": \"3rd place (15%)\",\r\n        \"ua\": \"3 місце (15%)\",\r\n        \"de\": \"3. Platz (15%)\",\r\n        \"es\": \"3er lugar (15%)\",\r\n        \"ru\": \"3 место (15%)\",\r\n        \"cs\": \"3. místo (15%)\",\r\n        \"sk\": \"3. miesto (15%)\",\r\n        \"pl\": \"3. miejsce (15%)\"\r\n    },\r\n\r\n    \"giveaway_place_4\": {\r\n        \"en\": \"4th place (10%)\",\r\n        \"ua\": \"4 місце (10%)\",\r\n        \"de\": \"4. Platz (10%)\",\r\n        \"es\": \"4to lugar (10%)\",\r\n        \"ru\": \"4 место (10%)\",\r\n        \"cs\": \"4. místo (10%)\",\r\n        \"sk\": \"4. miesto (10%)\",\r\n        \"pl\": \"4. miejsce (10%)\"\r\n    },\r\n\r\n    \"giveaway_place_5\": {\r\n        \"en\": \"5th place (5%)\",\r\n        \"ua\": \"5 місце (5%)\",\r\n        \"de\": \"5. Platz (5%)\",\r\n        \"es\": \"5to lugar (5%)\",\r\n        \"ru\": \"5 место (5%)\",\r\n        \"cs\": \"5. místo (5%)\",\r\n        \"sk\": \"5. miesto (5%)\",\r\n        \"pl\": \"5. miejsce (5%)\"\r\n    },\r\n\r\n    \"giveaway_place_6\": {\r\n        \"en\": \"х3 random (5%)\",\r\n        \"ua\": \"х3 випадково (5%)\",\r\n        \"de\": \"х3 random (5%)\",\r\n        \"es\": \"х3 random (5%)\",\r\n        \"ru\": \"х3 случайно (5%)\",\r\n        \"cs\": \"x3 náhodně (5%)\",\r\n        \"sk\": \"x3 náhodne (5%)\",\r\n        \"pl\": \"x3 losowo (5%)\"\r\n    },\r\n\r\n    \"giveaway_time_left_label\": {\r\n        \"en\": \"Time left until the giveaway ends: \",\r\n        \"ua\": \"До завершення розіграшу залишилось: \",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende der Verlosung: \",\r\n        \"es\": \"Tiempo restante hasta el final del sorteo: \",\r\n        \"ru\": \"До завершения розыгрыша осталось: \",\r\n        \"cs\": \"Zbývající čas do konce losování: \",\r\n        \"sk\": \"Zostávajúci čas do konca súťaže: \",\r\n        \"pl\": \"Pozostały czas do końca losowania: \"\r\n    },\r\n\r\n    //tasks \r\n\r\n    \"tasks_title\": {\r\n        \"en\": \"Tasks\",\r\n        \"ua\": \"Завдання\",\r\n        \"de\": \"Aufgaben\",\r\n        \"es\": \"Tareas\",\r\n        \"ru\": \"Задание\",\r\n        \"cs\": \"Úkoly\",\r\n        \"sk\": \"Úlohy\",\r\n        \"pl\": \"Zadania\"\r\n    },\r\n\r\n    \"tasks_daily\": {\r\n        \"en\": \"Daily\",\r\n        \"ua\": \"Щоденні\",\r\n        \"de\": \"Tägliche Aufgaben\",\r\n        \"es\": \"Diarias\",\r\n        \"ru\": \"Ежедневные\",\r\n        \"cs\": \"Denní\",\r\n        \"sk\": \"Denné\",\r\n        \"pl\": \"Codzienne\"\r\n    },\r\n\r\n    \"tasks_invite\": {\r\n        \"en\": \"Invitations\",\r\n        \"ua\": \"Запрошення\",\r\n        \"de\": \"Einladungen\",\r\n        \"es\": \"Invitaciones\",\r\n        \"ru\": \"Приглашения\",\r\n        \"cs\": \"Pozvánky\",\r\n        \"sk\": \"Pozvánky\",\r\n        \"pl\": \"Zaproszenia\"\r\n    },\r\n\r\n    \"tasks_invite_title\": {\r\n        \"en\": \"Invite a Friend\",\r\n        \"ua\": \"Запроси друга\",\r\n        \"de\": \"Lade einen Freund ein\",\r\n        \"es\": \"Invita a un amigo\",\r\n        \"ru\": \"Пригласи друга\",\r\n        \"cs\": \"Pozvi přítele\",\r\n        \"sk\": \"Pozvi priateľa\",\r\n        \"pl\": \"Zaproś znajomego\"\r\n    },\r\n\r\n    \"tasks_invite_detail_1\": {\r\n        \"en\": \"Earn\",\r\n        \"ua\": \"Отримайте по\",\r\n        \"de\": \"Verdiene\",\r\n        \"es\": \"Gana\",\r\n        \"ru\": \"Получите по \",\r\n        \"cs\": \"Získej\",\r\n        \"sk\": \"Získaj\",\r\n        \"pl\": \"Zdobądź\"\r\n    },\r\n\r\n    \"tasks_invite_detail_2\": {\r\n        \"en\": \"to your balances!\",\r\n        \"ua\": \"на ваші баланси!\",\r\n        \"de\": \"für Ihre Bilanzen!\",\r\n        \"es\": \"¡a sus balances!\",\r\n        \"ru\": \"на ваши балансы!\",\r\n        \"cs\": \"na své účty!\",\r\n        \"sk\": \"na svoje zostatky!\",\r\n        \"pl\": \"na swoje salda!\"\r\n    },\r\n\r\n    \"tasks_invite_button\": {\r\n        \"en\": \"Invite Friends\",\r\n        \"ua\": \"Запросити друзів\",\r\n        \"de\": \"Freunde einladen\",\r\n        \"es\": \"Invitar a amigos\",\r\n        \"ru\": \"Пригласи друзей\",\r\n        \"cs\": \"Pozvat přátele\",\r\n        \"sk\": \"Pozvať priateľov\",\r\n        \"pl\": \"Zaproś znajomych\"\r\n    },\r\n\r\n    //tasks - daily\r\n\r\n    \"reward\": {\r\n        \"en\": \"Reward\",\r\n        \"ua\": \"Нагорода\",\r\n        \"de\": \"Belohnung\",\r\n        \"es\": \"Recompensa\",\r\n        \"ru\": \"Награда\",\r\n        \"cs\": \"Odměna\",\r\n        \"sk\": \"Odmena\",\r\n        \"pl\": \"Nagroda\"\r\n    },\r\n\r\n    \"reward_each_hour\": {\r\n        \"en\": \"Reward each hour\",\r\n        \"ua\": \"Приз щогодини\",\r\n        \"de\": \"Belohnung pro Stunde\",\r\n        \"es\": \"Recompensa por hora\",\r\n        \"ru\": \"Награда каждый час\",\r\n        \"cs\": \"Odměna každou hodinu\",\r\n        \"sk\": \"Odmena každú hodinu\",\r\n        \"pl\": \"Nagroda co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange\": {\r\n        \"en\": \"Hourly Challenge\",\r\n        \"ua\": \"Годинний челендж\",\r\n        \"de\": \"Stündliche Herausforderung\",\r\n        \"es\": \"Desafío por hora\",\r\n        \"ru\": \"Ежечасный челлендж\",\r\n        \"cs\": \"Hodinová výzva\",\r\n        \"sk\": \"Hodinová výzva\",\r\n        \"pl\": \"Wyzwanie co godzinę\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_top\": {\r\n        \"en\": \"Top Player:\",\r\n        \"ua\": \"Топ гравець:\",\r\n        \"de\": \"Top-Spieler:\",\r\n        \"es\": \"Jugador top:\",\r\n        \"ru\": \"Топ игрок:\",\r\n        \"cs\": \"Top hráč:\",\r\n        \"sk\": \"Top hráč:\",\r\n        \"pl\": \"Top gracz:\"\r\n    },\r\n\r\n    \"reward_each_hour_challange_points\": {\r\n        \"en\": \"Points:\",\r\n        \"ua\": \"Очки:\",\r\n        \"de\": \"Punkte:\",\r\n        \"es\": \"Puntos:\",\r\n        \"ru\": \"Очки:\",\r\n        \"cs\": \"Body:\",\r\n        \"sk\": \"Body:\",\r\n        \"pl\": \"Punkty:\"\r\n    },\r\n\r\n    \"tasks_done\": {\r\n        \"en\": \"Tasks Done\",\r\n        \"ua\": \"Завершено завданнь\",\r\n        \"de\": \"Aufgaben erledigt\",\r\n        \"es\": \"Tareas completadas\",\r\n        \"ru\": \"Выполнено заданий\",\r\n        \"cs\": \"Splněné úkoly\",\r\n        \"sk\": \"Splnené úlohy\",\r\n        \"pl\": \"Wykonane zadania\"\r\n    },\r\n\r\n    \"tasks_streak\": {\r\n        \"en\": \"Your streak:\",\r\n        \"ua\": \"Твоя безперервна серія:\",\r\n        \"de\": \"Deine Serie:\",\r\n        \"es\": \"Tu racha:\",\r\n        \"ru\": \"Твоя серия:\",\r\n        \"cs\": \"Tvoje série:\",\r\n        \"sk\": \"Tvoja séria:\",\r\n        \"pl\": \"Twoja passa:\"\r\n    },\r\n\r\n    \"games_weekly_challange_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Поспішай!\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Date prisa!\",\r\n        \"ru\": \"Поспеши!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_challange_text\": {\r\n        \"en\": \"The more tasks you complete during the week, the higher your chance to win!\",\r\n        \"ua\": \"Чим більше завдань ви виконаєте за тиждень, тим вищий ваш шанс виграти!\",\r\n        \"de\": \"Je mehr Aufgaben du in der Woche erledigst, desto höher ist deine Gewinnchance!\",\r\n        \"es\": \"¡Cuantas más tareas completes durante la semana, mayor será tu oportunidad de ganar!\",\r\n        \"ru\": \"Чем больше заданий ты выполнишь за неделю, тем выше твой шанс на победу!\",\r\n        \"cs\": \"Čím více úkolů během týdne splníš, tím větší máš šanci na výhru!\",\r\n        \"sk\": \"Čím viac úloh za týždeň splníš, tým vyššia je tvoja šanca na výhru!\",\r\n        \"pl\": \"Im więcej zadań wykonasz w tygodniu, tym większa szansa na wygraną!\"\r\n    },\r\n\r\n    \"subtask_ads\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Переглянути рекламу\",\r\n        \"de\": \"Eine Werbung ansehen\",\r\n        \"es\": \"Ver ver un anuncio\",\r\n        \"ru\": \"Посмотреть рекламу\",\r\n        \"cs\": \"Sledovat reklamu\",\r\n        \"sk\": \"Pozrieť si reklamu\",\r\n        \"pl\": \"Obejrzyj reklamę\"\r\n    },\r\n\r\n    \"subtask_reaction_to_post\": {\r\n        \"en\": \"React to a post\",\r\n        \"ua\": \"Поставити реакцію на пост\",\r\n        \"de\": \"Auf einen Beitrag reagieren\",\r\n        \"es\": \"Reaccionar a una publicación\",\r\n        \"ru\": \"Поставить реакцию на пост\",\r\n        \"cs\": \"Reaguj na příspěvek\",\r\n        \"sk\": \"Zareaguj na príspevok\",\r\n        \"pl\": \"Zareaguj na post\"\r\n    },\r\n\r\n    \"subtask_play_game\": {\r\n        \"en\": \"Play a game\",\r\n        \"ua\": \"Зіграти гру\",\r\n        \"de\": \"Ein Spiel spielen\",\r\n        \"es\": \"Jugar un juego\",\r\n        \"ru\": \"Сыграть в игру\",\r\n        \"cs\": \"Zahraj si hru\",\r\n        \"sk\": \"Zahraj si hru\",\r\n        \"pl\": \"Zagraj w grę\"\r\n    },\r\n\r\n    //profile \r\n\r\n    \"profile_title\": {\r\n        \"en\": \"Profile\",\r\n        \"ua\": \"Профіль\",\r\n        \"de\": \"Profil\",\r\n        \"es\": \"Perfil\",\r\n        \"ru\": \"Профиль\",\r\n        \"cs\": \"Profil\",\r\n        \"sk\": \"Profil\",\r\n        \"pl\": \"Profil\"\r\n    },\r\n\r\n    \"profile_account_owner\": {\r\n        \"en\": \"Account owner\",\r\n        \"ua\": \"Власник акаунту\",\r\n        \"de\": \"Kontoinhaber\",\r\n        \"es\": \"Propietario de la cuenta\",\r\n        \"ru\": \"Владелец аккаунта\",\r\n        \"cs\": \"Vlastník účtu\",\r\n        \"sk\": \"Vlastník účtu\",\r\n        \"pl\": \"Właściciel konta\"\r\n    },\r\n\r\n    \"profile_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Support\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"profile_guidebook\": {\r\n        \"en\": \"Guidebook & rules\",\r\n        \"ua\": \"Посібник та правила\",\r\n        \"de\": \"Leitfaden & Regeln\",\r\n        \"es\": \"Guía y reglas\",\r\n        \"ru\": \"Руководство и правила\",\r\n        \"cs\": \"Příručka a pravidla\",\r\n        \"sk\": \"Príručka a pravidlá\",\r\n        \"pl\": \"Poradnik i zasady\"\r\n    },\r\n\r\n    \"profile_privacy\": {\r\n        \"en\": \"Privacy Policy\",\r\n        \"ua\": \"Політика конфіденційності\",\r\n        \"de\": \"Datenschutzrichtlinie\",\r\n        \"es\": \"Política de privacidad\",\r\n        \"ru\": \"Политика конфиденциальности\",\r\n        \"cs\": \"Zásady ochrany osobních údajů\",\r\n        \"sk\": \"Zásady ochrany osobných údajov\",\r\n        \"pl\": \"Polityka prywatności\"\r\n    },\r\n\r\n    \"profile_partnerhsip\": {\r\n        \"en\": \"Partnership Program\",\r\n        \"ua\": \"Партнерська програма\",\r\n        \"de\": \"Partnerschaftsprogramm\",\r\n        \"es\": \"Programa de asociación\",\r\n        \"ru\": \"Партнёрская программа\",\r\n        \"cs\": \"Partnerský program\",\r\n        \"sk\": \"Partnerský program\",\r\n        \"pl\": \"Program partnerski\"\r\n    },\r\n\r\n    //profile -- disable ads\r\n\r\n    \"profile_no_ads\": {\r\n        \"en\": \"Disable Ads\",\r\n        \"ua\": \"Відключення реклами\",\r\n        \"de\": \"Werbung deaktivieren\",\r\n        \"es\": \"Desactivar anuncios\",\r\n        \"ru\": \"Отключение рекламы\",\r\n        \"cs\": \"Zakázat reklamy\",\r\n        \"sk\": \"Vypnúť reklamy\",\r\n        \"pl\": \"Wyłącz reklamy\"\r\n    },\r\n\r\n    \"disable_ads_popup_title\": {\r\n        \"en\": \"Disable ads?\",\r\n        \"ua\": \"Відключити рекламу?\",\r\n        \"de\": \"Werbung deaktivieren?\",\r\n        \"es\": \"¿Desactivar anuncios?\",\r\n        \"ru\": \"Отключить рекламу?\",\r\n        \"cs\": \"Zakázat reklamy?\",\r\n        \"sk\": \"Vypnúť reklamy?\",\r\n        \"pl\": \"Wyłączyć reklamy?\"\r\n    },\r\n\r\n    \"disable_ads_popup_descprition\": {\r\n        \"en\": \"By disabling ads, you will not see advertisements during the game.\",\r\n        \"ua\": \"Вимкнувши рекламу, ви не будете бачити оголошень під час гри.\",\r\n        \"de\": \"Durch das Deaktivieren der Werbung sehen Sie während des Spiels keine Anzeigen.\",\r\n        \"es\": \"Al desactivar los anuncios, no verás publicidad durante el juego.\",\r\n        \"ru\": \"Выключив рекламу, вы не будете видеть объявлений во время игры.\",\r\n        \"cs\": \"Zakázáním reklam během hry žádné neuvidíte.\",\r\n        \"sk\": \"Vypnutím reklám počas hry žiadne neuvidíte.\",\r\n        \"pl\": \"Wyłączając reklamy, nie będziesz ich widzieć podczas gry.\"\r\n    },\r\n\r\n    \"success_ads_popup_title\": {\r\n        \"en\": \"Ads Disabled\",\r\n        \"ua\": \"Рекламу відключено\",\r\n        \"de\": \"Werbung deaktiviert\",\r\n        \"es\": \"Anuncios desactivados\",\r\n        \"ru\": \"Реклама отключена\",\r\n        \"cs\": \"Reklamy zakázány\",\r\n        \"sk\": \"Reklamy vypnuté\",\r\n        \"pl\": \"Reklamy wyłączone\"\r\n    },\r\n\r\n    \"success_ads_popup_descprition\": {\r\n        \"en\": \"Thank you for your purchase! Enjoy the game without ads.\",\r\n        \"ua\": \"Дякуємо за покупку! Насолоджуйтеся грою без реклами.\",\r\n        \"de\": \"Vielen Dank für Ihren Kauf! Genießen Sie das Spiel ohne Werbung.\",\r\n        \"es\": \"¡Gracias por tu compra! Disfruta del juego sin anuncios.\",\r\n        \"ru\": \"Спасибо за покупку! Наслаждайтесь игрой без рекламы.\",\r\n        \"cs\": \"Děkujeme za nákup! Užij si hru bez reklam.\",\r\n        \"sk\": \"Ďakujeme za nákup! Uži si hru bez reklám.\",\r\n        \"pl\": \"Dziękujemy za zakup! Ciesz się grą bez reklam.\"\r\n    },\r\n\r\n    //shop\r\n\r\n    \"shop_title\": {\r\n        \"en\": \"SHOP\",\r\n        \"ua\": \"МАГАЗИН\",\r\n        \"de\": \"SHOP\",\r\n        \"es\": \"TIENDA\",\r\n        \"ru\": \"МАГАЗИН\",\r\n        \"cs\": \"OBCHOD\",\r\n        \"sk\": \"OBCHOD\",\r\n        \"pl\": \"SKLEP\"\r\n    },\r\n\r\n    \"shop_descprition\": {\r\n        \"en\": \"Top up your gold coins and get one step closer to victory!\",\r\n        \"ua\": \"Поповни запас золотих монет і стань на крок ближче до перемоги!\",\r\n        \"de\": \"Fülle deinen Goldmünzen-Vorrat auf und komme dem Sieg einen Schritt näher!\",\r\n        \"es\": \"¡Recarga tus monedas de oro y acércate un paso más a la victoria!\",\r\n        \"ru\": \"Пополни запас золотых монет и стань на шаг ближе к победе!\",\r\n        \"cs\": \"Dobij si zlaté mince a přibliž se o krok k vítězství!\",\r\n        \"sk\": \"Dobi si zlaté mince a priblíž sa o krok k víťazstvu!\",\r\n        \"pl\": \"Doładuj swoje złote monety i zbliż się o krok do zwycięstwa!\"\r\n    },\r\n\r\n\r\n    // Exit Layer\r\n\r\n    \"exit_title\": {\r\n        \"en\": \"Pause\",\r\n        \"ua\": \"Пауза\",\r\n        \"de\": \"Pause\",\r\n        \"es\": \"Pausa\",\r\n        \"ru\": \"Пауза\",\r\n        \"cs\": \"Pauza\",\r\n        \"sk\": \"Pauza\",\r\n        \"pl\": \"Pauza\"\r\n    },\r\n\r\n    \"exit_main_button\": {\r\n        \"en\": \"Main Menu\",\r\n        \"ua\": \"На Головну\",\r\n        \"de\": \"Hauptmenü\",\r\n        \"es\": \"Menú Principal\",\r\n        \"ru\": \"На Главную\",\r\n        \"cs\": \"Hlavní menu\",\r\n        \"sk\": \"Hlavné menu\",\r\n        \"pl\": \"Menu główne\"\r\n    },\r\n\r\n    \"exit_restart_button\": {\r\n        \"en\": \"Restart\",\r\n        \"ua\": \"Рестарт\",\r\n        \"de\": \"Neustart\",\r\n        \"es\": \"Reiniciar\",\r\n        \"ru\": \"Рестарт\",\r\n        \"cs\": \"Restartovat\",\r\n        \"sk\": \"Reštartovať\",\r\n        \"pl\": \"Restart\"\r\n    },\r\n\r\n\r\n    // Lose Layer\r\n\r\n    \"lose_title\": {\r\n        \"en\": \"Game Over\",\r\n        \"ua\": \"Гра Закінчена\",\r\n        \"de\": \"Spiel Beendet\",\r\n        \"es\": \"Juego Terminado\",\r\n        \"ru\": \"Игра Закончена\",\r\n        \"cs\": \"Konec hry\",\r\n        \"sk\": \"Koniec hry\",\r\n        \"pl\": \"Koniec gry\"\r\n    },\r\n\r\n    \"lose_score\": {\r\n        \"en\": \"Score:\",\r\n        \"ua\": \"Рахунок:\",\r\n        \"de\": \"Punktestand:\",\r\n        \"es\": \"Puntuación:\",\r\n        \"ru\": \"Счет\",\r\n        \"cs\": \"Skóre:\",\r\n        \"sk\": \"Skóre:\",\r\n        \"pl\": \"Wynik:\"\r\n    },\r\n\r\n    \"lose_score_best\": {\r\n        \"en\": \"Best Score:\",\r\n        \"ua\": \"Найкращий Рахунок:\",\r\n        \"de\": \"Bester Punktestand:\",\r\n        \"es\": \"Mejor Puntuación:\",\r\n        \"ru\": \"Лучший счет:\",\r\n        \"cs\": \"Nejlepší skóre:\",\r\n        \"sk\": \"Najlepšie skóre:\",\r\n        \"pl\": \"Najlepszy wynik:\"\r\n    },\r\n\r\n    \"lose_new_game_button\": {\r\n        \"en\": \"New Game\",\r\n        \"ua\": \"Нова Гра\",\r\n        \"de\": \"Neues Spiel\",\r\n        \"es\": \"Nuevo Juego\",\r\n        \"ru\": \"Новая Игра\",\r\n        \"cs\": \"Nová hra\",\r\n        \"sk\": \"Nová hra\",\r\n        \"pl\": \"Nowa gra\"\r\n    },\r\n\r\n\r\n    //game layer\r\n\r\n    \"all_time_best\": {\r\n        \"en\": \"Best\",\r\n        \"ua\": \"Найкращий\",\r\n        \"de\": \"Am besten\",\r\n        \"es\": \"Mejor\",\r\n        \"ru\": \"Лучший\",\r\n        \"cs\": \"Nejlepší\",\r\n        \"sk\": \"Najlepší\",\r\n        \"pl\": \"Najlepszy\"\r\n    },\r\n\r\n    \"hints_popup_title\": {\r\n        \"en\": \"Hints\",\r\n        \"ua\": \"Полегшення\",\r\n        \"de\": \"Hinweise\",\r\n        \"es\": \"Pistas\",\r\n        \"ru\": \"Облегчение\",\r\n        \"cs\": \"Nápovědy\",\r\n        \"sk\": \"Tipy\",\r\n        \"pl\": \"Wskazówki\"\r\n    },\r\n\r\n    \"hints_used\": {\r\n        \"en\": \"Hints Used: \",\r\n        \"ua\": \"Використано полегшень: \",\r\n        \"de\": \"Verwendete Hinweise:\",\r\n        \"es\": \"Pistas Usadas: \",\r\n        \"ru\": \"Использовано облегчений: \",\r\n        \"cs\": \"Použité nápovědy: \",\r\n        \"sk\": \"Použité tipy: \",\r\n        \"pl\": \"Użyte wskazówki: \"\r\n    },\r\n\r\n    \"btn_hint_1\": {\r\n        \"en\": \"Randomly replace all blocks\",\r\n        \"ua\": \"Випадкова заміна всіх блоків\",\r\n        \"de\": \"Alle Blöcke zufällig ersetzen\",\r\n        \"es\": \"Reemplazar todos los bloques al azar\",\r\n        \"ru\": \"Случайная замена всех блоков\",\r\n        \"cs\": \"Náhodně nahradit všechny bloky\",\r\n        \"sk\": \"Náhodne nahradiť všetky bloky\",\r\n        \"pl\": \"Losowa zamiana wszystkich bloków\"\r\n    },\r\n\r\n    \"btn_hint_2\": {\r\n        \"en\": \"Blow up a 3x3 area\",\r\n        \"ua\": \"Підірвати бажану територію 3х3\",\r\n        \"de\": \"3x3-Bereich sprengen\",\r\n        \"es\": \"Explosión en un área de 3x3\",\r\n        \"ru\": \"Взорвать желаемую территорию 3х3\",\r\n        \"cs\": \"Vyhodit do povětří oblast 3x3\",\r\n        \"sk\": \"Vyhodiť do vzduchu oblasť 3x3\",\r\n        \"pl\": \"Wysadź obszar 3x3\"\r\n    },\r\n\r\n    \"btn_hint_3\": {\r\n        \"en\": \"Replace a block manually\",\r\n        \"ua\": \"Замінити блок на бажаний\",\r\n        \"de\": \"Block manuell ersetzen\",\r\n        \"es\": \"Reemplazar un bloque manualmente\",\r\n        \"ru\": \"Заменить блок на желаемый\",\r\n        \"cs\": \"Ručně nahradit blok\",\r\n        \"sk\": \"Manuálne nahradiť blok\",\r\n        \"pl\": \"Ręcznie zamień blok\"\r\n    },\r\n\r\n    \"hint_confirm_title\": {\r\n        \"en\": \"Confirmation\",\r\n        \"ua\": \"Підтвердження\",\r\n        \"de\": \"Bestätigung\",\r\n        \"es\": \"Confirmación\",\r\n        \"ru\": \"Подтверждение\",\r\n        \"cs\": \"Potvrzení\",\r\n        \"sk\": \"Potvrdenie\",\r\n        \"pl\": \"Potwierdzenie\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1\": {\r\n        \"en\": \"You will spend 1 coin to replace a block randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 монету, щоб замінити блок на випадковий. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Münze, um einen Block zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 moneda para reemplazar un bloque al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 монету, чтобы заменить блок на случайный. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 minci za náhodnou výměnu bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 mincu na náhodnú výmenu bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 monetę, aby losowo zastąpić blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_2\": {\r\n        \"en\": \"You will spend 3 coins to blow up a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 3 монети, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 3 Münzen, um einen 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 3 monedas para explotar un área de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 3 монеты, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 3 mince za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 3 mince na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 3 monety, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_3\": {\r\n        \"en\": \"You will spend 2 coins to select a block manually. Continue?\",\r\n        \"ua\": \"Ти витратиш 2 монети, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 2 Münzen, um einen Block manuell auszuwählen. Fortfahren?\",\r\n        \"es\": \"Gastarás 2 monedas para seleccionar un bloque manualmente. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 2 монеты, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 2 mince za ruční výběr bloku. Pokračovat?\",\r\n        \"sk\": \"Minieš 2 mince na ručný výber bloku. Pokračovať?\",\r\n        \"pl\": \"Wydasz 2 monety, aby ręcznie wybrać blok. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_1_use\": {\r\n        \"en\": \"You will spend 1 shuffle to replace blocks randomly. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 тасування, щоб замінити блоки на випадкові. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Mischen, um Blöcke zufällig zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 mezcla para reemplazar bloques al azar. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 тасование, чтобы заменить блоки на случайные. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 zamíchání za náhodnou výměnu bloků. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 premiešanie na náhodnú výmenu blokov. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 przetasowanie, aby losowo zastąpić bloki. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_2_use\": {\r\n        \"en\": \"You will spend 1 bomb to explode a 3x3 area. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 бомбу, щоб підірвати бажану територію 3х3. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Bombe, um einen gewünschten 3x3-Bereich zu sprengen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 bomba para explotar un área deseada de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 бомбу, чтобы взорвать желаемую территорию 3х3. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 bombu za odpálení oblasti 3x3. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 bombu na vyhodenie oblasti 3x3 do vzduchu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 bombę, aby wysadzić obszar 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_confirm_desc_3_use\": {\r\n        \"en\": \"You will spend 1 swap to replace a block with your choice. Continue?\",\r\n        \"ua\": \"Ти витратиш 1 заміну, щоб замінити блок на бажаний. Продовжити?\",\r\n        \"de\": \"Du verbrauchst 1 Austausch, um einen Block deiner Wahl zu ersetzen. Fortfahren?\",\r\n        \"es\": \"Gastarás 1 cambio para reemplazar un bloque por uno de tu elección. ¿Continuar?\",\r\n        \"ru\": \"Ты потратишь 1 замену, чтобы заменить блок на желаемый. Продолжить?\",\r\n        \"cs\": \"Utratíš 1 výměnu za výběr bloku dle tvé volby. Pokračovat?\",\r\n        \"sk\": \"Minieš 1 výmenu na výber bloku podľa tvojho výberu. Pokračovať?\",\r\n        \"pl\": \"Wydasz 1 zamianę, aby zastąpić blok według własnego wyboru. Kontynuować?\"\r\n    },\r\n\r\n    \"hint_select_blowup_place\": {\r\n        \"en\": \"Select a place to blow up\",\r\n        \"ua\": \"Виберіть місце вибуху\",\r\n        \"de\": \"Wähle einen Ort zum Sprengen\",\r\n        \"es\": \"Selecciona un lugar para explotar\",\r\n        \"ru\": \"Выберите место взрыва\",\r\n        \"cs\": \"Vyber místo pro výbuch\",\r\n        \"sk\": \"Vyber miesto na výbuch\",\r\n        \"pl\": \"Wybierz miejsce do wysadzenia\"\r\n    },\r\n\r\n    \"hint_select_block_1\": {\r\n        \"en\": \"Which block to replace?\",\r\n        \"ua\": \"Який блок замінити?\",\r\n        \"de\": \"Welchen Block ersetzen?\",\r\n        \"es\": \"¿Qué bloque reemplazar?\",\r\n        \"ru\": \"Какой блок заменить?\",\r\n        \"cs\": \"Který blok nahradit?\",\r\n        \"sk\": \"Ktorý blok nahradiť?\",\r\n        \"pl\": \"Który blok zastąpić?\"\r\n    },\r\n\r\n    \"hint_select_block_2\": {\r\n        \"en\": \"Select a new block\",\r\n        \"ua\": \"Виберіть новий блок\",\r\n        \"de\": \"Wähle einen neuen Block\",\r\n        \"es\": \"Selecciona un nuevo bloque\",\r\n        \"ru\": \"Выберите новый блок\",\r\n        \"cs\": \"Vyber nový blok\",\r\n        \"sk\": \"Vyber nový blok\",\r\n        \"pl\": \"Wybierz nowy blok\"\r\n    },\r\n\r\n\r\n    //givaway card\r\n\r\n    \"givaway_card_title\": {\r\n        \"en\": \"STARS GIVEAWAY\",\r\n        \"ua\": \"РОЗІГРАШ STARS\",\r\n        \"de\": \"STARS VERLOSUNG\",\r\n        \"es\": \"SORTEO DE STARS\",\r\n        \"ru\": \"РОЗЫГРЫШ STARS\",\r\n        \"cs\": \"STARS SOUTĚŽ\",\r\n        \"sk\": \"STARS SÚŤAŽ\",\r\n        \"pl\": \"GIVEAWAY STARS\"\r\n    },\r\n\r\n    \"givaway_card_about\": {\r\n        \"en\": \"Every week, we reward players with money!\",\r\n        \"ua\": \"Щотижня ми даруємо гравцям гроші!\",\r\n        \"de\": \"Jede Woche belohnen wir Spieler mit Geld!\",\r\n        \"es\": \"¡Cada semana recompensamos a los jugadores con dinero!\",\r\n        \"ru\": \"Каждую неделю мы дарим игрокам деньги!\",\r\n        \"cs\": \"Každý týden odměňujeme hráče penězi!\",\r\n        \"sk\": \"Každý týždeň odmeňujeme hráčov peniazmi!\",\r\n        \"pl\": \"Co tydzień nagradzamy graczy pieniędzmi!\"\r\n    },\r\n\r\n    \"givaway_card_collected\": {\r\n        \"en\": \"Collected\",\r\n        \"ua\": \"Зібрано\",\r\n        \"de\": \"Gesammelt\",\r\n        \"es\": \"Recolectado\",\r\n        \"ru\": \"Собранно\",\r\n        \"cs\": \"Shromážděno\",\r\n        \"sk\": \"Nazbierané\",\r\n        \"pl\": \"Zebrano\"\r\n    },\r\n\r\n    \"givaway_card_time_end\": {\r\n        \"en\": \"Time left\",\r\n        \"ua\": \"До кінця\",\r\n        \"de\": \"Verbleibende Zeit\",\r\n        \"es\": \"Tiempo restante\",\r\n        \"ru\": \"До конца\",\r\n        \"cs\": \"Zbývající čas\",\r\n        \"sk\": \"Zostávajúci čas\",\r\n        \"pl\": \"Pozostały czas\"\r\n    },\r\n\r\n    //givaway history\r\n\r\n    \"giveaway_history_title\": {\r\n        \"en\": \"Winners by Best Result\",\r\n        \"ua\": \"Переможці найкращого\",\r\n        \"de\": \"Gewinner nach Bestleistung\",\r\n        \"es\": \"Ganadores por mejor resultado\",\r\n        \"ru\": \"Победители по лучшему результату\",\r\n        \"cs\": \"Vítězové podle nejlepšího výsledku\",\r\n        \"sk\": \"Víťazi podľa najlepšieho výsledku\",\r\n        \"pl\": \"Zwycięzcy według najlepszego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_combined_title\": {\r\n        \"en\": \"Winners by Total Result\",\r\n        \"ua\": \"Переможці сумарного\",\r\n        \"de\": \"Gewinner nach Gesamtpunktzahl\",\r\n        \"es\": \"Ganadores por resultado total\",\r\n        \"ru\": \"Победители по суммарному результату\",\r\n        \"cs\": \"Vítězové podle celkového výsledku\",\r\n        \"sk\": \"Víťazi podľa celkového výsledku\",\r\n        \"pl\": \"Zwycięzcy według łącznego wyniku\"\r\n    },\r\n\r\n    \"giveaway_history_detail\": {\r\n        \"en\": \"The pool that was drawn last week:\",\r\n        \"ua\": \"Пул який розігрували минулого тижня:\",\r\n        \"de\": \"Der Pool, der letzte Woche verlost wurde:\",\r\n        \"es\": \"El bote que se sorteó la semana pasada:\",\r\n        \"ru\": \"Пул который разыгрывали на прошлой неделе:\",\r\n        \"cs\": \"Fond, který byl losován minulý týden:\",\r\n        \"sk\": \"Fond, ktorý sa žreboval minulý týždeň:\",\r\n        \"pl\": \"Pula, która była losowana w zeszłym tygodniu:\"\r\n    },\r\n\r\n    //lose\r\n\r\n    \"lose_no_space_title\": {\r\n        \"en\": \"No Space Left\",\r\n        \"ua\": \"Не залишилось місця\",\r\n        \"de\": \"Kein Platz mehr\",\r\n        \"es\": \"No hay espacio\",\r\n        \"ru\": \"Не осталось места\",\r\n        \"cs\": \"Není místo\",\r\n        \"sk\": \"Nie je miesto\",\r\n        \"pl\": \"Brak miejsca\"\r\n    },\r\n\r\n    \"lose_no_space_detail\": {\r\n        \"en\": \"Watch an ad to use a 3x3 explosion. Continue?\",\r\n        \"ua\": \"Подивись рекламу, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Schau dir eine Werbung an, um eine 3x3-Explosion zu verwenden. Fortfahren?\",\r\n        \"es\": \"Mira un anuncio para usar una explosión de 3x3. ¿Continuar?\",\r\n        \"ru\": \"Посмотри рекламу, чтобы получить взрыв 3х3 и продолжить игру\",\r\n        \"cs\": \"Podívej se na reklamu, abys použil výbuch 3x3. Pokračovat?\",\r\n        \"sk\": \"Pozri si reklamu, aby si použil výbuch 3x3. Pokračovať?\",\r\n        \"pl\": \"Oglądaj reklamę, aby użyć eksplozji 3x3. Kontynuować?\"\r\n    },\r\n\r\n    \"btn_watch_ad\": {\r\n        \"en\": \"Watch an ad\",\r\n        \"ua\": \"Подивитись рекламу\",\r\n        \"de\": \"Schau eine Werbung\",\r\n        \"es\": \"Ver un anuncio\",\r\n        \"ru\": \"Посмотри рекламу\",\r\n        \"cs\": \"Podívej se na reklamu\",\r\n        \"sk\": \"Pozri si reklamu\",\r\n        \"pl\": \"Oglądaj reklamę\"\r\n    },\r\n\r\n    \"lose_no_space_detail_subscribe\": {\r\n        \"en\": \"Subscribe to our Telegram channel to use a 3x3 explosion and continue the game!\",\r\n        \"ua\": \"Підпишись на наш Telegram-канал, щоб отримати вибух 3х3 та продовжити гру!\",\r\n        \"de\": \"Abonniere unseren Telegram-Kanal, um eine 3x3-Explosion zu verwenden und das Spiel fortzusetzen!\",\r\n        \"es\": \"Suscríbete a nuestro canal de Telegram para usar una explosión de 3x3 y continuar el juego!\",\r\n        \"ru\": \"Подпишись на наш Telegram-канал, чтобы получить взрыв 3х3 і продовжити гру!\",\r\n        \"cs\": \"Přihlas se k odběru našeho Telegram kanálu, abys použil výbuch 3x3 a pokračoval ve hře!\",\r\n        \"sk\": \"Prihlás sa na odber nášho Telegram kanála, aby si použil výbuch 3x3 a pokračoval v hre!\",\r\n        \"pl\": \"Zapisz się do naszego kanału Telegram, aby używać eksplozji 3x3 i kontynuować grę!\"\r\n    },\r\n\r\n    \"lose_no_space_detail_buy_shuffle\": {\r\n        \"en\": \"Try using a random \\n swap of all blocks to continue playing!\",\r\n        \"ua\": \"Спробуй використати випадкову \\n заміну всіх блоків щоб продовжити гру!\",\r\n        \"de\": \"Versuche, alle Blöcke zufällig \\n auszutauschen, um weiterzuspielen!\",\r\n        \"es\": \"¡Intenta usar un intercambio aleatorio \\n de todos los bloques para seguir jugando!\",\r\n        \"ru\": \"Попробуй использовать случайную \\n замену всех блоков, чтобы продолжить игру!\",\r\n        \"cs\": \"Zkus použít náhodnou \\n výměnu všech bloků pro pokračování ve hře!\",\r\n        \"sk\": \"Skús použiť náhodnú \\n výmenu všetkých blokov na pokračovanie v hre!\",\r\n        \"pl\": \"Spróbuj użyć losowej \\n zamiany wszystkich bloków, aby kontynuować grę!\"\r\n    },\r\n\r\n    \"btn_subscribe_now\": {\r\n        \"en\": \"Subscribe Now\",\r\n        \"ua\": \"Підписатися зараз\",\r\n        \"de\": \"Jetzt abonnieren\",\r\n        \"es\": \"Suscríbete ahora\",\r\n        \"ru\": \"Подписаться сейчас\",\r\n        \"cs\": \"Přihlásit se nyní\",\r\n        \"sk\": \"Prihlásiť sa teraz\",\r\n        \"pl\": \"Zapisz się teraz\"\r\n    },\r\n\r\n    \"btn_refresh\": {\r\n        \"en\": \"Refresh\",\r\n        \"ua\": \"Оновити\",\r\n        \"de\": \"Aktualisieren\",\r\n        \"es\": \"Actualizar\",\r\n        \"ru\": \"Обновить\",\r\n        \"cs\": \"Obnovit\",\r\n        \"sk\": \"Obnoviť\",\r\n        \"pl\": \"Odśwież\"\r\n    },\r\n\r\n    \"btn_support\": {\r\n        \"en\": \"Support\",\r\n        \"ua\": \"Служба підтримки\",\r\n        \"de\": \"Unterstützung\",\r\n        \"es\": \"Soporte\",\r\n        \"ru\": \"Служба поддержки\",\r\n        \"cs\": \"Podpora\",\r\n        \"sk\": \"Podpora\",\r\n        \"pl\": \"Wsparcie\"\r\n    },\r\n\r\n    \"http_error_1_title\": {\r\n        \"en\": \"Something went wrong...\",\r\n        \"ua\": \"Щось пішло не так...\",\r\n        \"de\": \"Etwas ist schiefgelaufen...\",\r\n        \"es\": \"Algo salió mal...\",\r\n        \"ru\": \"Что-то пошло не так...\",\r\n        \"cs\": \"Něco se pokazilo...\",\r\n        \"sk\": \"Niečo sa pokazilo...\",\r\n        \"pl\": \"Coś poszło nie tak...\"\r\n    },\r\n\r\n    \"http_error_1_detail\": {\r\n        \"en\": \"An error occurred. Please try again later or contact support.\",\r\n        \"ua\": \"Сталася помилка. Спробуйте пізніше або зверніться до підтримки.\",\r\n        \"de\": \"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut oder kontaktieren Sie den Support.\",\r\n        \"es\": \"Ocurrió un error. Por favor, inténtalo de nuevo más tarde o contacta con el soporte.\",\r\n        \"ru\": \"Произошла ошибка. Попробуйте позже или обратитесь в службу поддержки.\",\r\n        \"cs\": \"Došlo k chybě. Zkuste to později nebo kontaktujte podporu.\",\r\n        \"sk\": \"Vyskytla sa chyba. Skúste to znova neskôr alebo kontaktujte podporu.\",\r\n        \"pl\": \"Wystąpił błąd. Spróbuj ponownie później lub skontaktuj się z pomocą techniczną.\"\r\n    },\r\n\r\n    \"http_error_2_title\": {\r\n        \"en\": \"Server Unresponsive\",\r\n        \"ua\": \"Сервер не відповідає\",\r\n        \"de\": \"Server reagiert nicht\",\r\n        \"es\": \"El servidor no responde\",\r\n        \"ru\": \"Сервер не отвечает\",\r\n        \"cs\": \"Server nereaguje\",\r\n        \"sk\": \"Server neodpovedá\",\r\n        \"pl\": \"Serwer nie odpowiada\"\r\n    },\r\n\r\n    \"http_error_2_detail\": {\r\n        \"en\": \"There are connectivity issues. Please try again later.\",\r\n        \"ua\": \"Виникли труднощі зі з'єднанням. Будь ласка, повторіть спробу пізніше.\",\r\n        \"de\": \"Es gibt Verbindungsprobleme. Bitte versuchen Sie es später erneut.\",\r\n        \"es\": \"Hay problemas de conectividad. Por favor, inténtalo más tarde.\",\r\n        \"ru\": \"Возникли трудности с соединением. Пожалуйста, повторите попытку позже.\",\r\n        \"cs\": \"Došlo k problémům s připojením. Zkuste to prosím později.\",\r\n        \"sk\": \"Vyskytli sa problémy s pripojením. Skúste to prosím neskôr.\",\r\n        \"pl\": \"Wystąpiły problemy z połączeniem. Spróbuj ponownie później.\"\r\n    },\r\n\r\n    \"http_error_3_title\": {\r\n        \"en\": \"Maintenance\",\r\n        \"ua\": \"Технічні роботи\",\r\n        \"de\": \"Wartungsarbeiten\",\r\n        \"es\": \"Mantenimiento\",\r\n        \"ru\": \"Технические работы\",\r\n        \"cs\": \"Údržba\",\r\n        \"sk\": \"Údržba\",\r\n        \"pl\": \"Konserwacja\"\r\n    },\r\n\r\n    \"http_error_3_detail\": {\r\n        \"en\": \"The server is temporarily unavailable. Thank you for your patience!\",\r\n        \"ua\": \"Сервер тимчасово недоступний. Дякуємо за терпіння!\",\r\n        \"de\": \"Der Server ist vorübergehend nicht verfügbar. Danke für Ihre Geduld!\",\r\n        \"es\": \"El servidor está temporalmente fuera de servicio. ¡Gracias por tu paciencia!\",\r\n        \"ru\": \"Сервер временно недоступен. Спасибо за терпение!\",\r\n        \"cs\": \"Server je dočasně nedostupný. Děkujeme za trpělivost!\",\r\n        \"sk\": \"Server je dočasne nedostupný. Ďakujeme za trpezlivosť!\",\r\n        \"pl\": \"Serwer jest tymczasowo niedostępny. Dziękujemy za cierpliwość!\"\r\n    },\r\n\r\n    \"http_error_4_title\": {\r\n        \"en\": \"No Internet Connection\",\r\n        \"ua\": \"Інтернет відсутній\",\r\n        \"de\": \"Keine Internetverbindung\",\r\n        \"es\": \"Sin conexión a Internet\",\r\n        \"ru\": \"Нет подключения к Интернету\",\r\n        \"cs\": \"Žádné připojení k internetu\",\r\n        \"sk\": \"Žiadne pripojenie k internetu\",\r\n        \"pl\": \"Brak połączenia z internetem\"\r\n    },\r\n\r\n    \"http_error_4_detail\": {\r\n        \"en\": \"Your internet connection has been lost. Please check your connection.\",\r\n        \"ua\": \"Ваше інтернет-з'єднання перервано. Перевірте підключення.\",\r\n        \"de\": \"Ihre Internetverbindung wurde unterbrochen. Bitte überprüfen Sie Ihre Verbindung.\",\r\n        \"es\": \"Tu conexión a Internet se ha perdido. Por favor, verifica tu conexión.\",\r\n        \"ru\": \"Ваше интернет-соединение прервано. Проверьте подключение.\",\r\n        \"cs\": \"Vaše internetové připojení bylo ztraceno. Zkontrolujte své připojení.\",\r\n        \"sk\": \"Vaše internetové pripojenie bolo prerušené. Skontrolujte svoje pripojenie.\",\r\n        \"pl\": \"Twoje połączenie internetowe zostało utracone. Sprawdź swoje połączenie.\"\r\n    },\r\n\r\n    //games weekly\r\n\r\n    \"games_weekly_text\": {\r\n        \"en\": \"Leaderboard \\\"Best Result\\\" – Show your best result of the week and become a star of the game!\\n\\nAdditionally, complete the task of playing 5 games with a score of 500+ and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Найкращий результат\\\" — покажи свій найкращий результат за тиждень та стань зіркою гри!\\n\\nДодатково виконай завдання на 5 ігор з результатом 500+ та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Bestes Ergebnis\\\" – Zeige dein bestes Ergebnis der Woche und werde zum Star des Spiels!\\n\\nZusätzlich absolviere 5 Spiele mit einer Punktzahl von 500+ und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Mejor resultado\\\" – ¡Muestra tu mejor resultado de la semana y conviértete en la estrella del juego!\\n\\nAdemás, completa la tarea de jugar 5 partidas con una puntuación de 500+ y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Лучший результат\\\" – покажи свой лучший результат за неделю и стань звездой игры!\\n\\nДополнительно выполни задание: сыграй 5 игр с результатом 500+ и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Nejlepší výsledek\\\" – Ukážte svůj nejlepší výsledek týdne a staňte se hvězdou hry!\\n\\nDále splňte úkol 5 her s výsledkem 500+ a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Najlepší výsledok\\\" – Ukážte svoj najlepší výsledok týždňa a staňte sa hviezdou hry!\\n\\nOkrem toho splňte úlohu 5 hier s výsledkom 500+ a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Najlepszy wynik\\\" – Pokaż swój najlepszy wynik tygodnia i zostań gwiazdą gry!\\n\\nDodatkowo wykonaj zadanie polegające na rozegraniu 5 gier z wynikiem 500+ i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n\r\n    \"games_weekly_text_2\": {\r\n        \"en\": \"Leaderboard \\\"Total Score\\\" – Prove that you're a consistently great player by scoring 250+ points per game and achieving the highest weekly total!\\n\\nAdditionally, complete the task of reaching a total of 5000 points and take part in the draw for 1 of 3 spots, each receiving 5% of the stars from the pool.\",\r\n        \"ua\": \"Лідерборд \\\"Сумарний результат\\\" — доведи, що ти стабільно крутий гравець, набираючи 250+ балів за гру та отримай найвищу суму тижневих балів!\\n\\nДодатково виконай завдання на загальну суму в 5000 балів та візьми участь в розіграші 1 з 3 місць по 5% зірок із пулу.\",\r\n        \"de\": \"Bestenliste \\\"Gesamtpunktzahl\\\" – Beweise, dass du ein konstant großartiger Spieler bist, indem du 250+ Punkte pro Spiel erzielst und die höchste wöchentliche Gesamtpunktzahl erreichst!\\n\\nZusätzlich absolviere eine Gesamtpunktzahl von 5000 und nimm an der Verlosung von 1 von 3 Plätzen teil, um jeweils 5 % der Sterne aus dem Pool zu gewinnen.\",\r\n        \"es\": \"Clasificación \\\"Puntuación total\\\" – ¡Demuestra que eres un jugador constante alcanzando 250+ puntos por partida y obteniendo la puntuación total más alta de la semana!\\n\\nAdemás, completa la tarea de alcanzar un total de 5000 puntos y participa en el sorteo de 1 de 3 plazas para ganar el 5% de las estrellas del fondo.\",\r\n        \"ru\": \"Лидерборд \\\"Суммарный результат\\\" – докажи, что ты стабильно крутой игрок, набирая 250+ очков за игру и получая наивысшую сумму очков за неделю!\\n\\nДополнительно выполни задание на общую сумму 5000 очков и прими участие в розыгрыше 1 из 3 мест, каждая из которых получает 5% звёзд из пула.\",\r\n        \"cs\": \"Žebříček \\\"Celkový skóre\\\" – Dokaž, že jsi konzistentně skvělý hráč tím, že získáš 250+ bodů za hru a dosáhneš nejvyšší týdenní celkový výsledek!\\n\\nDále splňte úkol dosažení celkového skóre 5000 bodů a zúčastněte se losování o 1 z 3 míst, přičemž každé z nich získá 5 % hvězd z poolu.\",\r\n        \"sk\": \"Žebříček \\\"Celkové skóre\\\" – Dokáž, že si konzistentne skvelý hráč tým, že získaš 250+ bodov za hru a dosiahneš najvyšší týždenný celkový výsledok!\\n\\nOkrem toho splňte úlohu dosiahnuť celkový počet 5000 bodov a zapojte sa do žrebovania o 1 z 3 miest, pričom každé z nich získa 5 % hviezd z poolu.\",\r\n        \"pl\": \"Tablica wyników \\\"Łączny wynik\\\" – Udowodnij, że jesteś konsekwentnie świetnym graczem, zdobywając 250+ punktów na grę i osiągając najwyższy tygodniowy wynik!\\n\\nDodatkowo wykonaj zadanie polegające na uzyskaniu łącznie 5000 punktów i weź udział w losowaniu 1 z 3 miejsc, z których każde otrzyma 5% gwiazdek z puli.\"\r\n    },\r\n\r\n    \"games_weekly_title\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Найкращий результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_title_2\": {\r\n        \"en\": \"Hurry up!\",\r\n        \"ua\": \"Сумарний результат\",\r\n        \"de\": \"Beeil dich!\",\r\n        \"es\": \"¡Apresúrate!\",\r\n        \"ru\": \"Поторопись!\",\r\n        \"cs\": \"Pospěš si!\",\r\n        \"sk\": \"Poponáhľaj sa!\",\r\n        \"pl\": \"Pospiesz się!\"\r\n    },\r\n\r\n    \"games_weekly_played\": {\r\n        \"en\": \"Games with a score of 500+\",\r\n        \"ua\": \"Ігор з рахунком 500+\",\r\n        \"de\": \"Spiele mit einer Punktzahl von 500+\",\r\n        \"es\": \"Juegos con una puntuación de 500+\",\r\n        \"ru\": \"Игры с счетом 500+\",\r\n        \"cs\": \"Hry s výsledkem 500+\",\r\n        \"sk\": \"Hry so skóre 500+\",\r\n        \"pl\": \"Gry z wynikiem 500+\"\r\n    },\r\n\r\n    \"games_weekly_played_2\": {\r\n        \"en\": \"Week total points\",\r\n        \"ua\": \"Тижневі очки\",\r\n        \"de\": \"Wöchentliche Punkte\",\r\n        \"es\": \"Puntos semanales\",\r\n        \"ru\": \"Недельные очки\",\r\n        \"cs\": \"Týdenní celkové body\",\r\n        \"sk\": \"Týždenné celkové body\",\r\n        \"pl\": \"Tygodniowa suma punktów\"\r\n    },\r\n\r\n    \"btn_see_leaderboard\": {\r\n        \"en\": \"See leaderboard\",\r\n        \"ua\": \"Переглянути лідерборд\",\r\n        \"de\": \"Bestenliste anzeigen\",\r\n        \"es\": \"Ver clasificación\",\r\n        \"ru\": \"Посмотреть лидерборд\",\r\n        \"cs\": \"Zobrazit žebříček\",\r\n        \"sk\": \"Zobraziť žebříček\",\r\n        \"pl\": \"Zobacz tabelę wyników\"\r\n    },\r\n\r\n    //output\r\n\r\n    \"output_main_title\": {\r\n        \"en\": \"Block Stars Withdrawal\",\r\n        \"ua\": \"Виведення Block Stars\",\r\n        \"de\": \"Block Stars Auszahlung\",\r\n        \"es\": \"Retiro de Block Stars\",\r\n        \"ru\": \"Вывод Block Stars\",\r\n        \"cs\": \"Výběr Block Stars\",\r\n        \"sk\": \"Výber Block Stars\",\r\n        \"pl\": \"Wypłata Block Stars\"\r\n    },\r\n\r\n    \"output_out_title\": {\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_btn\": {\r\n        \"en\": \"COIN WITHDRAWAL\",\r\n        \"ua\": \"ВИВІД МОНЕТ\",\r\n        \"de\": \"AUSZAHLUNG VON MÜNZEN\",\r\n        \"es\": \"RETIRO DE MONEDAS\",\r\n        \"ru\": \"ВЫВОД МОНЕТ\",\r\n        \"cs\": \"VÝBĚR MINCÍ\",\r\n        \"sk\": \"VÝBER MINCÍ\",\r\n        \"pl\": \"WYPŁATA MONET\"\r\n    },\r\n\r\n    \"output_main_label_1\": {\r\n        \"en\": \"Withdraw in-game coins from Block Stars to your Stars Bank account and use them.\",\r\n        \"ua\": \"Виводьте ігрові монети із Block Stars на акаунт Stars Bank та використовуйте їх. \",\r\n        \"de\": \"Ziehe Spielmünzen von Block Stars auf dein Stars Bank-Konto ab und verwende sie.\",\r\n        \"es\": \"Retira monedas del juego de Block Stars a tu cuenta de Stars Bank y úsalas.\",\r\n        \"ru\": \"Выводите игровые монеты из Block Stars на аккаунт Stars Bank и используйте их.\",\r\n        \"cs\": \"Vyber herní mince z Block Stars na účet Stars Bank a používej je.\",\r\n        \"sk\": \"Vyber herné mince z Block Stars na účet Stars Bank a použi ich.\",\r\n        \"pl\": \"Wypłać monety z gry Block Stars na konto Stars Bank i używaj ich.\"\r\n    },\r\n\r\n    \"out_bullet_1\": {\r\n        \"en\": \"Withdraw available from 300 coins\",\r\n        \"ua\": \"Вивід доступний від 300 монет\",\r\n        \"de\": \"Výběr dostupný od 300 mincí\",\r\n        \"es\": \"Retiro disponible a partir de 300 monedas\",\r\n        \"ru\": \"Вывод доступен от 300 монет\",\r\n        \"cs\": \"Výběr dostupný od 300 mincí\",\r\n        \"sk\": \"Výber dostupný od 300 mincí\",\r\n        \"pl\": \"Wypłata dostępna od 300 monet\"\r\n    },\r\n\r\n    \"out_bullet_2\": {\r\n        \"en\": \"Exchange rate: 1 Block Star = 1 Telegram Star\",\r\n        \"ua\": \"Курс обміну відбувається наступним чином: 1 Block Star = 1 Telegram Star.\",\r\n        \"de\": \"Wechselkurs: 1 Block Star = 1 Telegram Star\",\r\n        \"es\": \"Tasa de cambio: 1 Block Star = 1 Telegram Star\",\r\n        \"ru\": \"Курс обмена: 1 Block Star = 1 Telegram Star\",\r\n        \"cs\": \"Směnný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"sk\": \"Výmenný kurz: 1 Block Star = 1 Telegram Star\",\r\n        \"pl\": \"Kurs wymiany: 1 Block Star = 1 Telegram Star\"\r\n    },\r\n\r\n    \"out_bullet_3\": {\r\n        \"en\": \"Make sure you have a Stars Bank account. If not, open Stars Bank in Telegram and start.\",\r\n        \"ua\": \"Переконайтеся, що у вас є акаунт Stars Bank. Якщо його ще немає, просто відкрийте Stars Bank у Telegram і запустіть.\",\r\n        \"de\": \"Stelle sicher, dass du ein Stars Bank-Konto hast. Wenn nicht, öffne Stars Bank in Telegram und starte.\",\r\n        \"es\": \"Asegúrate de tener una cuenta en Stars Bank. Si no la tienes, abre Stars Bank en Telegram y empieza.\",\r\n        \"ru\": \"Убедитесь, что у вас есть аккаунт Stars Bank. Если нет — откройте Stars Bank в Telegram и запустите.\",\r\n        \"cs\": \"Ujisti se, že máš účet ve Stars Bank. Pokud ho nemáš, otevři Stars Bank v Telegramu a spusť.\",\r\n        \"sk\": \"Uisti sa, že máš účet v Stars Bank. Ak nie, otvor Stars Bank v Telegrame a spusti.\",\r\n        \"pl\": \"Upewnij się, że masz konto w Stars Bank. Jeśli nie, otwórz Stars Bank w Telegramie i rozpocznij.\"\r\n    },\r\n\r\n    \"output_out_label_1\": {\r\n        \"en\": \"Enter the amount you want to withdraw to your Stars Bank account.\",\r\n        \"ua\": \"Введіть бажану суму для виведення на акаунт Stars Bank.\",\r\n        \"de\": \"Gib den gewünschten Betrag ein, den du auf dein Stars Bank-Konto abheben möchtest.\",\r\n        \"es\": \"Introduce la cantidad que deseas retirar a tu cuenta de Stars Bank.\",\r\n        \"ru\": \"Введите желаемую сумму для вывода на аккаунт Stars Bank.\",\r\n        \"cs\": \"Zadej částku, kterou chceš vybrat na účet Stars Bank.\",\r\n        \"sk\": \"Zadaj sumu, ktorú chceš vybrať na účet Stars Bank.\",\r\n        \"pl\": \"Wpisz kwotę, którą chcesz wypłacić na konto Stars Bank.\"\r\n    },\r\n\r\n    \"output_out_label_2\": {\r\n        \"en\": \"Minimum withdrawal amount is 500 coins\",\r\n        \"ua\": \"мінімальна сума виводу 500 монет\",\r\n        \"de\": \"Mindestbetrag für Auszahlung: 500 Münzen\",\r\n        \"es\": \"Cantidad mínima para retirar: 500 monedas\",\r\n        \"ru\": \"Минимальная сумма вывода: 500 монет\",\r\n        \"cs\": \"Minimální částka pro výběr: 500 mincí\",\r\n        \"sk\": \"Minimálna suma na výber: 500 mincí\",\r\n        \"pl\": \"Minimalna kwota wypłaty: 500 monet\"\r\n    },\r\n\r\n    \"output_out_btn\": {\r\n        \"en\": \"Withdraw\",\r\n        \"ua\": \"Вивести\",\r\n        \"de\": \"Auszahlen\",\r\n        \"es\": \"Retirar\",\r\n        \"ru\": \"Вывести\",\r\n        \"cs\": \"Vybrat\",\r\n        \"sk\": \"Vybrať\",\r\n        \"pl\": \"Wypłać\"\r\n    },\r\n\r\n    //clubs\r\n\r\n    \"club_title\": {\r\n        \"en\": \"CLUB\",\r\n        \"ua\": \"КЛУБ\",\r\n        \"de\": \"CLUB\",\r\n        \"es\": \"CLUB\",\r\n        \"ru\": \"КЛУБ\",\r\n        \"cs\": \"CLUB\",\r\n        \"sk\": \"CLUB\",\r\n        \"pl\": \"CLUB\"\r\n    },\r\n\r\n    \"club_winners_label\": {\r\n        \"en\": \"Last draw results\",\r\n        \"ua\": \"Результати минулого розіграшу\",\r\n        \"de\": \"Ergebnisse der letzten Auslosung\",\r\n        \"es\": \"Resultados del sorteo anterior\",\r\n        \"ru\": \"Результаты прошлого розыгрыша\",\r\n        \"cs\": \"Výsledky posledního losování\",\r\n        \"sk\": \"Výsledky posledného žrebovania\",\r\n        \"pl\": \"Wyniki ostatniego losowania\"\r\n    },\r\n\r\n    \"club_tournament_till_end\": {\r\n        \"en\": \"Time left until tournament ends\",\r\n        \"ua\": \"До кінця турніру\",\r\n        \"de\": \"Verbleibende Zeit bis zum Ende des Turniers\",\r\n        \"es\": \"Tiempo restante hasta el final del torneo\",\r\n        \"ru\": \"До конца турнира\",\r\n        \"cs\": \"Zbývající čas do konce turnaje\",\r\n        \"sk\": \"Zostávajúci čas do konca turnaja\",\r\n        \"pl\": \"Pozostały czas do końca turnieju\"\r\n    },\r\n\r\n    \"club_tournament_title\": {\r\n        \"en\": \"Tournament started\",\r\n        \"ua\": \"Турнір розпочато\",\r\n        \"de\": \"Turnier gestartet\",\r\n        \"es\": \"Torneo iniciado\",\r\n        \"ru\": \"Турнир начался\",\r\n        \"cs\": \"Turnaj zahájen\",\r\n        \"sk\": \"Turnaj začal\",\r\n        \"pl\": \"Turniej rozpoczęty\"\r\n    },\r\n\r\n    \"club_tournament__text\": {\r\n        \"en\": \"Play, win Stars, and reach the top 10 to share the prize pool!\",\r\n        \"ua\": \"Грай, вигравай Stars та потрапляй у топ-10, щоб розділити призовий фонд!\",\r\n        \"de\": \"Spiele, gewinne Stars und erreiche die Top 10, um den Preispool zu teilen!\",\r\n        \"es\": \"¡Juega, gana Stars y entra en el top 10 para compartir el premio!\",\r\n        \"ru\": \"Играй, выигрывай Stars и попади в топ-10, чтобы разделить призовой фонд!\",\r\n        \"cs\": \"Hraj, vyhraj Stars a dostaň se do top 10, abys sdílel výhru!\",\r\n        \"sk\": \"Hraj, vyhraj Stars a dostaň sa do top 10, aby si si rozdelil výhru!\",\r\n        \"pl\": \"Graj, wygrywaj Stars i wejdź do top 10, by podzielić się nagrodą!\"\r\n    },\r\n\r\n    \"club_tournament_prize\": {\r\n        \"en\": \"Prize pool:\",\r\n        \"ua\": \"Призовий фонд:\",\r\n        \"de\": \"Preispool:\",\r\n        \"es\": \"Fondo de premios:\",\r\n        \"ru\": \"Призовой фонд:\",\r\n        \"cs\": \"Cenový fond:\",\r\n        \"sk\": \"Cenový fond:\",\r\n        \"pl\": \"Pula nagród:\"\r\n    },\r\n\r\n    \"club_history_title\": {\r\n        \"en\": \"Winners\",\r\n        \"ua\": \"Переможці\",\r\n        \"de\": \"Gewinner\",\r\n        \"es\": \"Ganadores\",\r\n        \"ru\": \"Победители\",\r\n        \"cs\": \"Vítězové\",\r\n        \"sk\": \"Víťazi\",\r\n        \"pl\": \"Zwycięzcy\"\r\n    },\r\n\r\n};\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LoseLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnRestart: cc.Node = null\r\n    btnRevive: cc.Node = null\r\n    btnHome: cc.Node = null\r\n    tip: cc.Node = null\r\n    score: cc.Node = null\r\n    best_score: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnRestart = cc.find('buttons/btn_restart', this.panel)\r\n        this.btnRevive = cc.find('buttons/btn_revive', this.panel)\r\n        this.btnHome = cc.find('buttons/btn_home', this.panel)\r\n        this.btnRestart.on('click', this.onRestartClick, this)\r\n        this.btnRevive.on('click', this.onReviveClick, this)\r\n        this.btnHome.on('click', this.onHomeClick, this)\r\n        this.tip = cc.find('tip', this.panel)\r\n        this.score = cc.find('score_panel/score', this.panel)\r\n        this.best_score = cc.find('score_panel/best_score', this.panel)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnRestart.off('click', this.onRestartClick, this)\r\n        this.btnRevive.off('click', this.onReviveClick, this)\r\n        this.btnHome.off('click', this.onHomeClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        //SdkManager.instance.toggleBannerAd(true)\r\n        this.rendor()\r\n    }\r\n\r\n    onDisable() {\r\n        //SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    rendor() {\r\n        this.score.getComponent(cc.Label).string = this.tip.getComponent(cc.Label).string = `${DataManager.instance.score}`\r\n        this.best_score.getComponent(cc.Label).string = `${DataManager.instance.scoreMax}`\r\n    }\r\n\r\n    async onRestartClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onReviveClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        SdkManager.instance.showVideoAd(async () => {\r\n            if (!SdkManager.instance.getPlatform()) {\r\n                ToastManager.instance.show('Incentive simulation distribution', { gravity: 'TOP', bg_color: cc.color(102, 202, 28, 255) })\r\n            }\r\n            await StaticInstance.fadeManager.fadeIn()\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n            StaticInstance.gameManager.onGameStart()\r\n        }, (msg: string) => {\r\n            ToastManager.instance.show(msg, { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        })\r\n    }\r\n\r\n    onHomeClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.setGameStatusUnrunning();\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LOSE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MainLayer extends BaseLayer {\r\n\r\n    btnPause: cc.Node = null;\r\n\r\n    onLoad() {\r\n        this.btnPause = cc.find('btn_pause', this.node)\r\n        this.btnPause.on('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnPause.off('click', this.onPauseClick, this)\r\n    }\r\n\r\n    onEnable() { }\r\n\r\n    onDisable() { }\r\n\r\n    onPauseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.EXIT)\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { getRemainingTimeToDateMinutes, getRemainingTimeToDateSeconds, getServerTimeNow, setDesignResolution, starsToDollars} from \"../Utils\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MenuLayer extends BaseLayer {\r\n\r\n    btnStart: cc.Node = null\r\n\r\n    btnShop: cc.Node = null\r\n    labelCoinsAmount: cc.Label = null;\r\n\r\n    btnGiveaway: cc.Node = null\r\n\r\n    giveaway: cc.Node = null\r\n    giveawayPanel: cc.Node = null\r\n    btnCloseGiveaway: cc.Node = null\r\n\r\n    labelGiveawayStarsAmount: cc.Label = null;\r\n    labelGiveawayStarsDollarsAmount: cc.Label = null;\r\n    labelGiveawayTimeLeft: cc.Label = null;\r\n\r\n    labelGiveawayPanelStarsAmount: cc.Label = null;\r\n    labelGiveawayPanelTimeLeft: cc.Label = null;\r\n\r\n    //games weekly\r\n    btnGamesWeekly: cc.Node = null\r\n    panelGamesWeekly: cc.Node = null\r\n    btnCloseGamesWeekly: cc.Node = null\r\n    btnSeeLeaderboardWeekly: cc.Node = null\r\n\r\n    labelGamesWeeklyFill: cc.Sprite = null;\r\n    labelGamesWeeklyAmount: cc.Label = null;\r\n    \r\n    labelGamesWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n\r\n    //games total weekly\r\n    btnGamesTotalWeekly: cc.Node = null\r\n    panelGamesTotalWeekly: cc.Node = null\r\n    btnCloseGamesTotalWeekly: cc.Node = null\r\n    btnSeeLeaderboardTotalWeekly: cc.Node = null\r\n\r\n    labelGamesTotalWeeklyFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyAmount: cc.Label = null;\r\n\r\n    labelGamesTotalWeeklyPanelFill: cc.Sprite = null;\r\n    labelGamesTotalWeeklyPanelAmount: cc.Label = null;\r\n    labelGamesTotalWeeklyPanelTimeLeft: cc.Label = null;\r\n\r\n    onLoad() {\r\n\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.btnStart = cc.find('main/btn_start', this.node)\r\n\r\n        this.btnShop = cc.find('main/btn_coin_balance', this.node)\r\n        this.labelCoinsAmount = cc.find('main/btn_coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        //giveaway\r\n        this.btnGiveaway = cc.find('main/btn_giveaway', this.node)\r\n        this.giveaway = cc.find('giveaway', this.node)\r\n        this.giveawayPanel = cc.find('panel', this.giveaway)\r\n        this.btnCloseGiveaway = cc.find('btn_close', this.giveawayPanel)\r\n\r\n        this.labelGiveawayStarsAmount = cc.find('main/btn_giveaway/layout/amount_collected', this.node).getComponent(cc.Label)\r\n        this.labelGiveawayStarsDollarsAmount = cc.find('main/btn_giveaway/layout/amount_dollars', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayTimeLeft = cc.find('main/btn_giveaway/time_left', this.node).getComponent(cc.Label)\r\n\r\n        this.labelGiveawayPanelStarsAmount = cc.find('top/pool_amount', this.giveawayPanel).getComponent(cc.Label)\r\n        this.labelGiveawayPanelTimeLeft = cc.find('bottom/time_text', this.giveawayPanel).getComponent(cc.Label)\r\n\r\n\r\n        //games weekly\r\n        this.btnGamesWeekly = cc.find('main/btn_games_weekly', this.node)\r\n        this.labelGamesWeeklyAmount = cc.find('amount', this.btnGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyFill = cc.find('fill_bar/fill', this.btnGamesWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesWeekly = cc.find('games_weekly', this.node)\r\n        this.btnCloseGamesWeekly = cc.find('panel/btn_close', this.panelGamesWeekly)\r\n        this.btnSeeLeaderboardWeekly = cc.find('panel/btn_leaderboard', this.panelGamesWeekly)\r\n\r\n        this.labelGamesWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesWeekly).getComponent(cc.Label)\r\n        this.labelGamesWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesWeeklyAmount(0,5);\r\n\r\n        //games weekly total\r\n        this.btnGamesTotalWeekly = cc.find('main/btn_games_weekly_2', this.node)\r\n        this.labelGamesTotalWeeklyAmount = cc.find('amount', this.btnGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyFill = cc.find('fill_bar/fill', this.btnGamesTotalWeekly).getComponent(cc.Sprite)\r\n\r\n        this.panelGamesTotalWeekly = cc.find('games_weekly_2', this.node)\r\n        this.btnCloseGamesTotalWeekly = cc.find('panel/btn_close', this.panelGamesTotalWeekly)\r\n        this.btnSeeLeaderboardTotalWeekly = cc.find('panel/btn_leaderboard', this.panelGamesTotalWeekly)\r\n\r\n        this.labelGamesTotalWeeklyPanelFill = cc.find('panel/games_weekly/fill_bar/fill', this.panelGamesTotalWeekly).getComponent(cc.Sprite)\r\n        this.labelGamesTotalWeeklyPanelAmount = cc.find('panel/games_weekly/amount', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n        this.labelGamesTotalWeeklyPanelTimeLeft = cc.find('panel/bottom/time_text', this.panelGamesTotalWeekly).getComponent(cc.Label)\r\n\r\n        this.setGamesTotalWeeklyAmount(0,5000);\r\n\r\n        this.btnStart.on(cc.Node.EventType.TOUCH_START, this.onStartClick, this)\r\n        this.btnShop.on(cc.Node.EventType.TOUCH_START, this.onShopClick, this)\r\n\r\n        this.btnGiveaway.on(cc.Node.EventType.TOUCH_START, this.onGiveawayClick, this)\r\n        this.giveawayPanel.on(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.on(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n\r\n        this.btnGamesWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesWeeklyClick, this)\r\n        this.btnCloseGamesWeekly.on(cc.Node.EventType.TOUCH_START, this.onCloseGamesWeeklyClick, this)\r\n        this.btnSeeLeaderboardWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesWeeklyLeaderboardClick, this)\r\n\r\n        this.btnGamesTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesTotalWeeklyClick, this)\r\n        this.btnCloseGamesTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onCloseGamesTotalWeeklyClick, this)\r\n        this.btnSeeLeaderboardTotalWeekly.on(cc.Node.EventType.TOUCH_START, this.onGamesTotalWeeklyLeaderboardClick, this)\r\n\r\n    }\r\n\r\n    setGamesWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesWeeklyPanelAmount.string = this.labelGamesWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesWeeklyPanelFill.fillRange = this.labelGamesWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    setGamesTotalWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.labelGamesTotalWeeklyPanelAmount.string = this.labelGamesTotalWeeklyAmount.string = `${played}/${target}`\r\n        this.labelGamesTotalWeeklyPanelFill.fillRange = this.labelGamesTotalWeeklyFill.fillRange = fillRange;\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnStart.off(cc.Node.EventType.TOUCH_START, this.onStartClick, this)\r\n        this.btnShop.off(cc.Node.EventType.TOUCH_START, this.onShopClick, this)\r\n\r\n        this.btnGiveaway.off(cc.Node.EventType.TOUCH_START, this.onGiveawayClick, this)\r\n        this.giveawayPanel.off(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n        this.btnCloseGiveaway.off(cc.Node.EventType.TOUCH_START, this.onCloseGiveawayClick, this)\r\n    }\r\n\r\n    async onEnable() {\r\n        this.giveaway.active = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            DataManager.instance.userData = response.data;\r\n            this.labelCoinsAmount.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        UserController.Instance?.getCurrentPrizePool().then((response) => {\r\n\r\n            var secondsToNextMonday = response.data.seconds_to_next_monday;\r\n            const nextMonday = getServerTimeNow(); // Get the current date and time\r\n            nextMonday.setSeconds(nextMonday.getSeconds() + secondsToNextMonday);\r\n            DataManager.instance.nextMonday = nextMonday;\r\n            DataManager.instance.prizePoolWinningAmount = response.data.total_winning_amount;\r\n\r\n            this.labelGiveawayPanelStarsAmount.string = \r\n            this.labelGiveawayStarsAmount.string = response.data.total_winning_amount.toFixed(2);;\r\n            this.labelGiveawayStarsDollarsAmount.string = `= $${starsToDollars(response.data.total_winning_amount).toFixed(2)}`\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n        UserController.Instance.getGames500_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesWeeklyAmount(response.count, 5);\r\n        });\r\n\r\n        UserController.Instance.getGames250_count().then(response => {\r\n            console.log(response);\r\n            this.setGamesTotalWeeklyAmount(response.sum_points, 5000);\r\n        });\r\n\r\n\r\n        UserController.Instance.getGamesMaxPoints().then(response => {\r\n            console.log(response);\r\n            DataManager.instance.scoreMax = typeof response.points === \"number\" ? response.points : 0;\r\n        });\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n\r\n            this.labelGamesTotalWeeklyPanelTimeLeft.string = \r\n            this.labelGamesWeeklyPanelTimeLeft.string = \r\n            this.labelGiveawayPanelTimeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    async onStartClick() {\r\n        setDesignResolution();\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.mode = ENUM_GAME_MODE.SCORE\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MAIN)\r\n        DataManager.instance.score = 0\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShopClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP)\r\n        setDesignResolution();\r\n    }\r\n\r\n    onGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = true;\r\n    }\r\n    \r\n    onCloseGiveawayClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.giveaway.active = false;\r\n    }\r\n\r\n    onGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n    }\r\n\r\n    onGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = true;\r\n    }\r\n\r\n    onCloseGamesTotalWeeklyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n    }\r\n\r\n    onGamesWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD)\r\n    }\r\n\r\n    onGamesTotalWeeklyLeaderboardClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.panelGamesTotalWeekly.active = false;\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU, false) \r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.LEADERBOARD_COMBINED)\r\n    }\r\n}\r\n","import { UserController } from \"../../api/controllers/UserController\";\r\nimport { Onclicka } from \"../onclicka/Onclicka\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst monetagLoadPromise = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867075';\r\n        script.dataset.sdk = 'show_8867075';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n\r\nconst monetagLoadPromise2 = new Promise<boolean>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src='//whephiwums.com/vignette.min.js';\r\n        script.dataset.zone = '8867073';\r\n        script.dataset.sdk = 'show_8867073';\r\n        script.async = true;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load Monetag SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\n@ccclass('MonetagController')\r\nexport class MonetagController {\r\n    private static _instance: MonetagController;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): MonetagController {\r\n        if (!MonetagController._instance) {\r\n            MonetagController._instance = new MonetagController();\r\n        }\r\n        return MonetagController._instance;\r\n    }\r\n\r\n    private _monetagJS: boolean = null;\r\n    private _monetagJS_2: boolean = null;\r\n\r\n\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._monetagJS = await monetagLoadPromise;\r\n        this._monetagJS_2 = await monetagLoadPromise2;\r\n\r\n        if (this._monetagJS ||  this._monetagJS_2) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public preloadRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073('preload');\r\n    }\r\n    \r\n    // можно еще таймаут на рекламу указать\r\n    // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n    public preloadRewarded_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867073({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showRewarded_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867073();\r\n    }\r\n\r\n    public showRewarded_Popup() : Promise<any>{\r\n        return (window as any).show_8867074();\r\n    }\r\n\r\n    public preloadInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075('preload');\r\n    }\r\n\r\n    public preloadInApp_Interstitial_Timeout(timeoutSeconds: number = 1) : Promise<any> {\r\n        return (window as any).show_8867075({ type: 'preload', timeout: timeoutSeconds });\r\n    }\r\n\r\n    public showInApp_Interstitial() : Promise<any>{\r\n        return (window as any).show_8867075();\r\n    }\r\n\r\n    public old_1_showRewarded_Interstitial(){\r\n        this.showRewarded_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.old_1_showInApp_Interstitial();\r\n        })\r\n    }\r\n\r\n    public old_1_showInApp_Interstitial(){\r\n       this.showInApp_Interstitial().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        }).catch(()=>{\r\n            this.showOncklicka_Rewarded_1();\r\n        })\r\n    }\r\n    \r\n    public old_2_showRewarded_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867073().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public old_2_showInApp_Interstitial() : Promise<any> {\r\n        return (window as any).show_8867075().then(() => {\r\n            console.log('You have seen ad ad!');\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n    }\r\n\r\n    public showOncklicka_Rewarded_1() : Promise<any>{\r\n        return (window as any).show_6065984?.()\r\n        .then( () => {\r\n            console.log('oncklicka tma ad played')\r\n            try{ UserController.Instance?.patchAd();}\r\n            catch{e => console.log(e)}\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    public preloadAd_Test(){\r\n\r\n        // можно еще таймаут на рекламу указать\r\n        // show_8867073({ type: 'preload', timeout: 10 }).then(() => {\r\n\r\n        this.preloadRewarded_Interstitial().then(() => {\r\n            // Ad is ready, show it\r\n            this.showRewarded_Interstitial();\r\n        }).catch(() => {\r\n            // Failed to preload ad\r\n            // You can ask other network \r\n            Onclicka.Instance.showAd_Rewarded();\r\n        })\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NoConnectionErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance.getUser().then(function (response) {\r\n            //on success\r\n            StaticInstance.uiManager.toggle(ENUM_UI_TYPE.NO_CONNECTION_ERROR, false)\r\n        });\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Onclicka')\r\nexport class Onclicka {\r\n    private static _instance: Onclicka;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Onclicka {\r\n        if (!Onclicka._instance) {\r\n            Onclicka._instance = new Onclicka();\r\n        }\r\n        return Onclicka._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).show_6065984();\r\n    }\r\n}","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class OutputLayer extends BaseLayer {\r\n\r\n    labelCoinsAmount: cc.Label = null;\r\n    \r\n    btn_next: cc.Node = null\r\n    btn_out: cc.Node = null\r\n    btn_out_not_active: cc.Node = null\r\n    btn_close_out: cc.Node = null\r\n    \r\n    panel_main: cc.Node = null\r\n    panel_out: cc.Node = null\r\n\r\n    edit_box: cc.EditBox = null;\r\n   \r\n\r\n    public static block_resize: boolean = false;\r\n\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n        \r\n        this.panel_main = cc.find('main', this.node)\r\n        this.panel_out = cc.find('out', this.node)\r\n\r\n        this.labelCoinsAmount = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.edit_box = cc.find('edit_box', this.panel_out).getComponent(cc.EditBox)\r\n\r\n        this.btn_close_out = cc.find('btn_close', this.node)\r\n        this.btn_next = cc.find('btn_start', this.panel_main)\r\n        this.btn_out = cc.find('btn_start', this.panel_out)\r\n        this.btn_out_not_active = cc.find('btn_start_2', this.panel_out)\r\n\r\n        this.btn_close_out.on(cc.Node.EventType.TOUCH_START, this.onCloseOutClick, this)\r\n        this.btn_next.on(cc.Node.EventType.TOUCH_START, this.onNextClick, this)\r\n        this.btn_out.on(cc.Node.EventType.TOUCH_START, this.onOutClick, this)\r\n\r\n        this.edit_box.node.on('editing-did-began',  this.onEditBegan, this);\r\n        this.edit_box.node.on('editing-did-ended', this.onEditEnded, this);\r\n        this.edit_box.node.on('text-changes', this.validateInput, this);\r\n    }\r\n\r\n\r\n    onDestroy() {\r\n\r\n        this.btn_close_out.off(cc.Node.EventType.TOUCH_START, this.onCloseOutClick, this)\r\n        this.btn_next.off(cc.Node.EventType.TOUCH_START, this.onNextClick, this)\r\n        this.btn_out.off(cc.Node.EventType.TOUCH_START, this.onOutClick, this)\r\n\r\n        this.edit_box.node.off('editing-did-began',  this.onEditBegan, this);\r\n        this.edit_box.node.off('editing-did-ended', this.onEditEnded, this);\r\n        this.edit_box.node.off('text-changes', this.validateInput, this);\r\n    }\r\n\r\n    onEnable() {\r\n        OutputLayer.block_resize = false;\r\n\r\n        if(DataManager.instance.userData){\r\n            this.edit_box.string = this.labelCoinsAmount.string = DataManager.instance.userData.balance_stars.toString();\r\n        }\r\n\r\n        if(this.panel_main){\r\n            this.panel_main.active = true;\r\n        }\r\n\r\n        if(this.panel_out){\r\n            this.panel_out.active = false;\r\n            this.btn_close_out.active = false;\r\n        }\r\n        \r\n    }\r\n\r\n    onCloseOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = true;\r\n        this.panel_out.active = false;\r\n        this.btn_close_out.active = false;\r\n        OutputLayer.block_resize = false;\r\n    }\r\n\r\n    onNextClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.panel_main.active = false;\r\n        this.panel_out.active = true;\r\n        this.btn_close_out.active = true;\r\n        OutputLayer.block_resize = true;\r\n\r\n        //this.edit_box.adjustPan\r\n\r\n        //cc.view.resizeWithBrowserSize(false);\r\n    }\r\n\r\n    onOutClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo\r\n\r\n        const inputStr = this.edit_box.string.trim();\r\n        let amount = parseInt(inputStr, 10);\r\n\r\n        const max = DataManager.instance.userData.balance_stars;\r\n\r\n        // Якщо не число або менше 0 — ставимо 0\r\n        if (isNaN(amount) || amount < 0) {\r\n            amount = 0;\r\n        }\r\n        // Якщо більше за баланс — ставимо максимальне значення\r\n        else if (amount > max) {\r\n            amount = max;\r\n        }\r\n\r\n        //backend request\r\n        UserController.Instance?.postWithdrawStars(amount).then((response) => {\r\n            console.error(\"Success withdraw\", response);\r\n            //open wallet app\r\n            TelegramWebApp.Instance.openTelegramLinkBank();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to withdraw stars:\", error);\r\n        });       \r\n    }\r\n\r\n    validateInput(){\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n        }, 200);\r\n\r\n        const inputStr = this.edit_box.string.trim();\r\n        const value = parseInt(inputStr, 10);\r\n\r\n        const max = DataManager.instance.userData.balance_stars;\r\n\r\n        // Якщо не число або менше 0 — ставимо 0\r\n        if (isNaN(value) || value < 0) {\r\n            this.edit_box.string = '0';\r\n        }\r\n        // Якщо більше за баланс — ставимо максимальне значення\r\n        else if (value > max) {\r\n            this.edit_box.string = max.toString();\r\n        }\r\n        // Інакше залишаємо як є\r\n\r\n        const canOut = value >= 500;\r\n        this.btn_out.active = canOut;\r\n        this.btn_out_not_active.active = !canOut;\r\n    }\r\n\r\n    onEditEnded(){\r\n        this.validateInput();\r\n\r\n        document.body.removeEventListener('touchmove', preventScroll);\r\n    }\r\n\r\n    onEditBegan(){\r\n        document.body.addEventListener('touchmove', preventScroll, { passive: false });\r\n\r\n        setTimeout(() => {\r\n            window.scrollTo(0, 0);\r\n        }, 200);\r\n    }\r\n\r\n   \r\n}\r\n\r\n\r\nvar preventScroll = function (e) {\r\n    e.preventDefault();\r\n};","// Created by carolsail\r\n\r\nexport default class PoolManager{\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<PoolManager>()\r\n    }\r\n\r\n    private _dictPool: any = {}\r\n    private _dictPrefab: any = {}\r\n\r\n    // 复制节点\r\n    public copyNode(copynode: cc.Node, parent: cc.Node | null): cc.Node {\r\n        let name = copynode.name;\r\n        this._dictPrefab[name] = copynode;\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(copynode);\r\n            }\r\n        } else {\r\n\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(copynode);\r\n        }\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 从池子取出节点\r\n    public getNode(prefab: cc.Prefab | string, parent?: cc.Node, pos?: cc.Vec3): cc.Node {\r\n        let tempPre: any;\r\n        let name: any;\r\n        if (typeof prefab === 'string') {\r\n            tempPre = this._dictPrefab[prefab];\r\n            name = prefab;\r\n            if (!tempPre) {\r\n                console.log(\"Pool invalid prefab name = \", name);\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            tempPre = prefab;\r\n            name = prefab.data.name;\r\n        }\r\n\r\n        let node = null;\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            let pool = this._dictPool[name];\r\n            if (pool.size() > 0) {\r\n                node = pool.get();\r\n            } else {\r\n                node = cc.instantiate(tempPre);\r\n            }\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            let pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n\r\n            node = cc.instantiate(tempPre);\r\n        }\r\n\r\n        if (parent) {\r\n            node.parent = parent;\r\n            node.active = true;\r\n            if (pos) node.position = pos;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    // 节点放进池子\r\n    public putNode(node: cc.Node | null, isActive = false) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        //console.log(\"回收信息\",node.name,node)\r\n        let name = node.name;\r\n        let pool = null;\r\n        // node.active = isActive\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            //已有对应的对象池\r\n            pool = this._dictPool[name];\r\n        } else {\r\n            //没有对应对象池，创建他！\r\n            pool = new cc.NodePool();\r\n            this._dictPool[name] = pool;\r\n        }\r\n\r\n        pool.put(node);\r\n    }\r\n\r\n    // 根据名字清池\r\n    public clearPool(name: string) {\r\n        if (this._dictPool.hasOwnProperty(name)) {\r\n            let pool = this._dictPool[name];\r\n            pool.clear();\r\n        }\r\n    }\r\n\r\n    // 添加预制体\r\n    public setPrefab(name: string, prefab: cc.Prefab): void {\r\n        this._dictPrefab[name] = prefab;\r\n    }\r\n\r\n    // 取预制体\r\n    public getPrefab(name: string): cc.Prefab {\r\n        return this._dictPrefab[name];\r\n    }\r\n}\r\n","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport AvatarLoader  from \"../utils/AvatarLoader\";\r\nimport {TelegramWebApp} from \"../telegram/TelegramMiniApp\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ProfileLayer extends BaseLayer {\r\n\r\n    avatarNode: cc.Node = null\r\n    nameNode: cc.Node = null\r\n\r\n    btnSettings: cc.Node = null\r\n    btnTutorial: cc.Node = null\r\n    btnTryGame: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnPrivacy: cc.Node = null\r\n    btnPartership: cc.Node = null\r\n    btnGuidebookRules: cc.Node = null\r\n\r\n    //disable ads\r\n    btnOpenDisableAdsPopup: cc.Node = null\r\n    btnCloseDisableAdsPopup: cc.Node = null\r\n    btnBuyDisableAds: cc.Node = null\r\n    btnCloseSuccessAdsPopup: cc.Node = null\r\n\r\n    disableAdsPopup: cc.Node = null\r\n    successAdsPopup: cc.Node = null\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.avatarNode = cc.find('main/panel_user/icon_back/icon', this.node)\r\n        this.nameNode = cc.find('main/panel_user/username', this.node)\r\n\r\n        this.btnSettings = cc.find('main/btn_settings', this.node)\r\n        this.btnTutorial = cc.find('main/btns_group_1/btn_tutorial', this.node)\r\n        this.btnTryGame = cc.find('main/btns_group_1/btn_try_game', this.node)\r\n        this.btnGuidebookRules = cc.find('main/btns_group_2/btn_guidebook', this.node)\r\n        this.btnSupport = cc.find('main/btns_group_2/btn_support', this.node)\r\n        this.btnPrivacy = cc.find('main/btns_group_2/btn_policy', this.node)\r\n        this.btnPartership = cc.find('main/btn_partership', this.node)\r\n        this.btnOpenDisableAdsPopup = cc.find('main/btn_no_ads', this.node)\r\n\r\n        \r\n        this.disableAdsPopup = cc.find('disable_ads_popup', this.node)\r\n        this.btnCloseDisableAdsPopup = cc.find('disable_ads_popup/panel/btn_close', this.node)\r\n        this.btnBuyDisableAds = cc.find('disable_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.successAdsPopup = cc.find('success_ads_popup', this.node)\r\n        this.btnCloseSuccessAdsPopup = cc.find('success_ads_popup/panel/btn_yes', this.node)\r\n\r\n        this.btnOpenDisableAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.on(cc.Node.EventType.TOUCH_START, this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.on(cc.Node.EventType.TOUCH_START, this.onSuccessAdsClickClose, this)\r\n\r\n        this.btnSettings.on(cc.Node.EventType.TOUCH_START, this.onSettingsClick, this)\r\n        this.btnTutorial.on(cc.Node.EventType.TOUCH_START, this.onTutorialClick, this)\r\n        this.btnTryGame.on(cc.Node.EventType.TOUCH_START, this.onTryGameClick, this)\r\n        this.btnSupport.on(cc.Node.EventType.TOUCH_START, this.onSupportClick, this)\r\n        this.btnPrivacy.on(cc.Node.EventType.TOUCH_START, this.onPrivacyClick, this)\r\n        this.btnPartership.on(cc.Node.EventType.TOUCH_START, this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.on(cc.Node.EventType.TOUCH_START, this.onGuidebookClick, this)\r\n\r\n        //var user = TelegramWebApp.Instance.getTelegramUser();\r\n        //this.nameNode.getComponent(cc.Label).string = user.username;\r\n        //AvatarLoader.loadAvatar(user.photo_url, this.avatarNode);\r\n    }\r\n\r\n    onDestroy() {\r\n\r\n        this.btnOpenDisableAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickOpen, this)\r\n        this.btnCloseDisableAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onDisableAdsClickClose, this)\r\n        this.btnBuyDisableAds.off(cc.Node.EventType.TOUCH_START, this.onBuyDisableAdsClick, this)\r\n        this.btnCloseSuccessAdsPopup.off(cc.Node.EventType.TOUCH_START, this.onSuccessAdsClickClose, this)\r\n\r\n\r\n        this.btnSettings.off(cc.Node.EventType.TOUCH_START, this.onSettingsClick, this)\r\n        this.btnTutorial.off(cc.Node.EventType.TOUCH_START, this.onTutorialClick, this)\r\n        this.btnTryGame.off(cc.Node.EventType.TOUCH_START, this.onTryGameClick, this)\r\n        this.btnSupport.off(cc.Node.EventType.TOUCH_START, this.onSupportClick, this)\r\n        this.btnPrivacy.off(cc.Node.EventType.TOUCH_START, this.onPrivacyClick, this)\r\n        this.btnPartership.off(cc.Node.EventType.TOUCH_START, this.onPartnershipClick, this)\r\n        this.btnGuidebookRules.off(cc.Node.EventType.TOUCH_START, this.onGuidebookClick, this)\r\n\r\n    }\r\n\r\n    onEnable() { \r\n         UserController.Instance?.getUser().then((response) => {\r\n            const data = response.data;\r\n            const name = (data.username && data.username != \"\" && data.username != null) ? `@${data.username}` : `${data.first_name}`;\r\n            this.nameNode.getComponent(cc.Label).string = name;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    onSettingsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.PROFILE, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING)\r\n    }\r\n\r\n    onTutorialClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onTryGameClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n    }\r\n\r\n    onSupportClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onPrivacyClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPrivacy();\r\n    }\r\n\r\n    onPartnershipClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkPartnership();\r\n    }\r\n\r\n    onGuidebookClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        TelegramWebApp.Instance?.openLinkGuidebook();\r\n    }\r\n\r\n    onDisableAdsClickOpen(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.getUser().then((response) => {\r\n            if(!response.data.is_premium){\r\n                this.openDisableAdsPopup();\r\n            }\r\n            else{\r\n                this.successAdsPopup.active = true;\r\n            }\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n\r\n    }\r\n\r\n    onDisableAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.disableAdsPopup.active = false;\r\n    }\r\n\r\n    onSuccessAdsClickClose(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.successAdsPopup.active = false;\r\n    }\r\n\r\n    openDisableAdsPopup(){\r\n        this.disableAdsPopup.active = true;\r\n    }\r\n\r\n    onBuyDisableAdsClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n\r\n                if(status === 'paid'){\r\n                    this.disableAdsPopup.active = false;\r\n                    this.successAdsPopup.active = true;\r\n                }\r\n\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n        });\r\n    }\r\n}\r\n","// Created by carolsail\r\nimport DataManager from './DataManager';\r\nimport PoolManager from './PoolManager';\r\n\r\nexport default class ResourceManager {\r\n\r\n    public clipMap = {}\r\n\r\n    public spriteMap = {}\r\n\r\n    public jsonMap = {}\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ResourceManager>()\r\n    }\r\n\r\n    public async loadRes(resource: any, ratio: number = 0) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const rate = DataManager.instance.loadingRate\r\n            cc.resources.loadDir(resource.path, resource.content, (finished: number, total: number) => {\r\n                // 资源加载进度\r\n                if (resource.ratio > 0) {\r\n                    // 保留两位小数\r\n                    const loadingRate = Math.floor((rate + resource.ratio * finished / total) * 100) / 100\r\n                    DataManager.instance.loadingRate = Math.max(loadingRate, DataManager.instance.loadingRate)\r\n                }\r\n            }, (err, assets: any) => {\r\n                if (err) reject && reject()\r\n                let asset: any\r\n                if (resource.type == 'audio') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.clipMap[asset.name]) this.clipMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'prefab') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        PoolManager.instance.setPrefab(asset.data.name, asset)\r\n                    }\r\n                }\r\n                if (resource.type == 'sprite') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.spriteMap[asset.name]) this.spriteMap[asset.name] = asset\r\n                    }\r\n                }\r\n                if (resource.type == 'json') {\r\n                    for (let i = 0; i < assets.length; i++) {\r\n                        asset = assets[i];\r\n                        if (!this.jsonMap[asset.name]) this.jsonMap[asset.name] = asset.json\r\n                    }\r\n                }\r\n                resolve && resolve()\r\n            })\r\n        })\r\n    }\r\n\r\n    public getClip(name: string) {\r\n        return this.clipMap[name]\r\n    }\r\n\r\n    public getSprite(name: string) {\r\n        return this.spriteMap[name]\r\n    }\r\n\r\n    public getJson(name: string) {\r\n        return this.jsonMap[name];\r\n    }\r\n}\r\n","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Richads')\r\nexport class Richads {\r\n    private static _instance: Richads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    public static get Instance(): Richads {\r\n        if (!Richads._instance) {\r\n            Richads._instance = new Richads();\r\n        }\r\n        return Richads._instance;\r\n    }\r\n\r\n    public init(){\r\n        \r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<any>{\r\n        return (window as any).TelegramAdsController.triggerNativeNotification(true);  \r\n    }\r\n}","import { uuid } from \"../Utils\";\r\nimport AudioManager from \"./AudioManager\";\r\nimport { ICallBack, IUser } from \"./DataManager\";\r\n\r\nexport default class SdkManager {\r\n    public static _instance: SdkManager = null\r\n\r\n    public static get instance() {\r\n        if (null == this._instance) {\r\n            this._instance = new SdkManager();\r\n        }\r\n        return this._instance\r\n    }\r\n\r\n    shareTitle: string = 'This game is fun, do you dare to accept the challenge?'\r\n    shareImg: string = ''\r\n    // 激励视频\r\n    videoId: string = ''\r\n    private videoAd = null\r\n    // 插屏\r\n    interstitialId: string = ''\r\n    private interstitialAd = null\r\n    // 横幅\r\n    bannerId: string = ''\r\n    private bannerAd = null\r\n    // 原生格子: 横向（默认后台90%多格子）\r\n    customRowId: string = ''\r\n    private customRowAd = null\r\n    // 原生格子: 纵向（默认后台80%单个子）\r\n    customColId: string = ''\r\n    private customColAd = null\r\n    // 抖音录屏\r\n    videoRecorder: any = null; // 录制器\r\n    videoRecordState: number = 0; // 录制状态\r\n    videoStartTime: number = null; // 录制起始时间\r\n    videoRecordTime: number = 120; // 视频录制时长\r\n    videoPath: string = null; // 录制所得视频地址\r\n    videoIsExist: number = 0; // 视频是否存在, 默认存在\r\n    videoTopics: string[] = []\r\n\r\n    // 获取平台\r\n    getPlatform() {\r\n        let platform = null\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            platform = window['wx']\r\n        } else if (cc.sys.platform == cc.sys.BYTEDANCE_GAME) {\r\n            platform = window['tt']\r\n        }\r\n        return platform\r\n    }\r\n\r\n    // 主动分享\r\n    // query: string (eg: key1=val1&key2=val2)\r\n    activeShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n           //console.log('[Active sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.shareAppMessage(options);\r\n    }\r\n\r\n    // 被动分享\r\n    passiveShare(options: { title?: string, imageUrl?: string, query?: string } = { title: '', imageUrl: '', query: '' }) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Passive sharing] Only supports mini game platforms!')\r\n            return\r\n        }\r\n        platform.showShareMenu({\r\n            success: (res: any) => { },\r\n            fail: (res: any) => { }\r\n        });\r\n        options.title = options.title || this.shareTitle\r\n        options.imageUrl = options.imageUrl || this.shareImg\r\n        platform.onShareAppMessage(() => {\r\n            return options\r\n        });\r\n    }\r\n\r\n    // 获取分享参数\r\n    getShareQuery(key: string) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Get sharing parameters] Only supports mini-game platforms!')\r\n            return\r\n        }\r\n        const options = platform.getLaunchOptionsSync()\r\n        const query = options.query\r\n        let data = null\r\n        if (query && query[key]) {\r\n            data = query[key]\r\n        }\r\n        return data\r\n    }\r\n\r\n    // 跳转\r\n    turnToApp(appId: string) {\r\n        if (appId == '') return\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            this.turnToBrowser(appId)\r\n            return\r\n        }\r\n        platform.navigateToMiniProgram({\r\n            appId: appId\r\n        });\r\n    }\r\n\r\n    // 浏览器跳转\r\n    turnToBrowser(url: string) {\r\n        window.open(url)\r\n    }\r\n\r\n    // 监听音频中断（微信）\r\n    initAudioEndListener() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Audio Interruption Monitoring] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        window['wx'].onAudioInterruptionEnd(() => {\r\n            //console.log('Audio interrupted, resume playback')\r\n            AudioManager.instance.playMusic()\r\n        })\r\n    }\r\n\r\n    // 初始化横幅\r\n    initBannerAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main banner initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.bannerId == '') {\r\n            //console.log('[Traffic Master] Please configure banner advertising ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.bannerAd == null) {\r\n            this.bannerAd = platform.createBannerAd({\r\n                adUnitId: this.bannerId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    height: winSize.windowHeight - 80,\r\n                    left: 0,\r\n                    top: 500,\r\n                    width: winSize.windowWidth\r\n                }\r\n            });\r\n            this.bannerAd.onResize((res: any) => {\r\n                this.bannerAd.style.top = winSize.windowHeight - this.bannerAd.style.realHeight;\r\n                this.bannerAd.style.left = winSize.windowWidth / 2 - this.bannerAd.style.realWidth / 2;\r\n            });\r\n            this.bannerAd.onError((err: any) => {\r\n                //console.error('[Traffic main banner] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横幅展示\r\n    toggleBannerAd(isShow: boolean) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`[Traffic main banner:${isShow}] only supports small game platforms!`)\r\n            return\r\n        }\r\n        if (this.bannerAd) {\r\n            isShow ? this.bannerAd.show() : this.bannerAd.hide();\r\n        }\r\n    }\r\n\r\n    // 初始化插屏\r\n    initInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('[Traffic main screen initialization] Only supports small game platforms!')\r\n            return\r\n        }\r\n        if (this.interstitialId == '') {\r\n            //console.log('[Traffic Master] Please configure the interstitial advertising ID')\r\n            return\r\n        }\r\n        if (this.interstitialAd == null) {\r\n            this.interstitialAd = platform.createInterstitialAd({\r\n                adUnitId: this.interstitialId\r\n            });\r\n            this.interstitialAd.onError((err: any) => {\r\n                //console.error('[Traffic main screen] Initialization error')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 插屏展示\r\n    showInterstitialAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主插屏】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.interstitialAd) {\r\n            this.interstitialAd.show().catch((err: any) => {\r\n                //console.error('【流量主插屏】加载失败')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 初始化激励\r\n    initVideoAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【流量主激励初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.videoId == '') {\r\n            //console.log('【流量主】请配置激励视频广告ID')\r\n            return\r\n        }\r\n        if (this.videoAd == null) {\r\n            this.videoAd = platform.createRewardedVideoAd({\r\n                adUnitId: this.videoId\r\n            });\r\n            this.videoAd.onError((err: any) => {\r\n                //console.error('【流量主激励】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 激励展示\r\n    showVideoAd(success: any, fail?: any) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            // console.log('激励模拟成功')\r\n            return success && success('模拟成功，激励奖励已发放')\r\n        }\r\n        if (this.videoAd) {\r\n            this.videoAd.offClose();\r\n            this.videoAd.onClose((res: any) => {\r\n                this.videoAd.offClose();\r\n                if (res && res.isEnded || res === undefined) {\r\n                    return success && success('激励奖励已发放')\r\n                } else {\r\n                    return fail && fail('视频播放中断')\r\n                }\r\n            });\r\n            this.videoAd.show().catch(() => {\r\n                this.videoAd.load()\r\n                    .then(() => this.videoAd.show())\r\n                    .catch((err: any) => {\r\n                        //console.log('广告展示失败')\r\n                    })\r\n            });\r\n        } else {\r\n            // console.log('激励模拟成功')\r\n            return fail && fail('该功能尚未开放')\r\n        }\r\n    }\r\n\r\n    // 初始化横向格子\r\n    initCustomRowAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【横向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customRowId == '') {\r\n            //console.log('【流量主】请配置横向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customRowAd == null) {\r\n            this.customRowAd = platform.createCustomAd({\r\n                adUnitId: this.customRowId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 320,\r\n                    left: (winSize.screenWidth - 320) / 2,\r\n                    top: winSize.screenHeight - 100,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customRowAd.onError((err: any) => {\r\n                //console.error('【流量主横向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomRowAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主横向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customRowAd) isShow ? this.customRowAd.show() : this.customRowAd.hide();\r\n    }\r\n\r\n    // 初始化纵向格子\r\n    initCustomColAd() {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log('【纵向格子初始化】仅支持小游戏平台!')\r\n            return\r\n        }\r\n        if (this.customColId == '') {\r\n            //console.log('【流量主】请配置纵向格子广告ID')\r\n            return\r\n        }\r\n        let winSize = platform.getSystemInfoSync();\r\n        if (this.customColAd == null) {\r\n            this.customColAd = platform.createCustomAd({\r\n                adUnitId: this.customColId,\r\n                adIntervals: 30,\r\n                style: {\r\n                    width: 80,\r\n                    left: winSize.screenWidth - 60,\r\n                    top: 20,\r\n                    fixed: 0\r\n                }\r\n            })\r\n            this.customColAd.onError((err: any) => {\r\n                //console.error('【流量主纵向格子】初始化有误')\r\n            });\r\n        }\r\n    }\r\n\r\n    // 横向格子广告展示\r\n    toggleCustomColAd(isShow: boolean = true) {\r\n        const platform = this.getPlatform()\r\n        if (!platform) {\r\n            //console.log(`【流量主纵向格子:${isShow}】仅支持小游戏平台!`)\r\n            return\r\n        }\r\n        if (this.customColAd) isShow ? this.customColAd.show() : this.customColAd.hide();\r\n    }\r\n\r\n    // 获取排行榜\r\n    getRank() {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【获取排名】仅支持微信平台!')\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n           // event: 'getRank'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 设置排名\r\n     * @param data 关卡数\r\n     */\r\n    setRank(data: number) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('【设置排名】仅支持微信平台!', data)\r\n            return\r\n        }\r\n        window['wx'].postMessage({\r\n            //event: 'setRank',\r\n            data: data\r\n        })\r\n    }\r\n\r\n    // 录制视频开始\r\n    recordingVideoStart() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        this.videoRecorder = window['tt'].getGameRecorderManager();\r\n        this.videoRecordState = 1;\r\n        this.videoIsExist = 0;\r\n        this.videoStartTime = Date.parse(new Date().toString())\r\n        // 开始回调\r\n        this.videoRecorder.onStart((res: any) => {\r\n            //console.log('录屏开始');\r\n            //console.log(res);\r\n        });\r\n        // 开始\r\n        this.videoRecorder.start({\r\n            duration: this.videoRecordTime, // 录制时长\r\n        });\r\n        // 录制结束回调\r\n        this.videoRecorder.onStop((res: any) => {\r\n            this.videoRecordState = 2;\r\n            this.videoPath = res.videoPath;\r\n            //console.log('录屏结束', this.videoPath)\r\n        });\r\n        // 录制错误回调\r\n        this.videoRecorder.onError((res: any) => {\r\n            //console.log(\"录屏error\", res)\r\n        });\r\n    }\r\n\r\n    // 录制视频结束\r\n    recordingVideoEnd() {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoRecorder) {\r\n            const endTime = Date.parse(new Date().toString())\r\n            if ((endTime - this.videoStartTime) / 1000 <= 5) {\r\n                this.videoIsExist = 1;\r\n            } else {\r\n                this.videoIsExist = 0;\r\n            }\r\n            this.videoRecorder.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 录制视频分享\r\n    * 参数1 成功回调\r\n    * 参数2 失败回调\r\n    */\r\n    recordingVideoShare(success: any, fail?: any) {\r\n        if (typeof window['tt'] === 'undefined') {\r\n            //console.log('【录屏功能】仅支持抖音平台!')\r\n            return\r\n        }\r\n        if (this.videoIsExist == 1) {\r\n            //console.log('录制时间过短')\r\n            return;\r\n        }\r\n        this.videoRecordState = 3;\r\n        window['tt'].shareAppMessage({\r\n            channel: 'video',\r\n            title: '',\r\n            imageUrl: '',\r\n            query: '',\r\n            extra: {\r\n                videoPath: this.videoPath, // 可用录屏得到的视频地址\r\n                videoTopics: this.videoTopics,\r\n                createChallenge: true\r\n            },\r\n            success() {\r\n                success && success()\r\n            },\r\n            fail(err: any) {\r\n                fail && fail()\r\n            }\r\n        })\r\n    }\r\n\r\n    // 录屏是否存在\r\n    isVideoExist() {\r\n        return this.videoIsExist\r\n    }\r\n\r\n    // 获取登录code（后续服务器兑换openid）\r\n    getLoginCode(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: false, data: null, msg: '服务器异常' }\r\n        window['wx'].login({\r\n            success(res: any) {\r\n                if (res.code) {\r\n                    obj.status = true\r\n                    obj.data = res.code\r\n                    obj.msg = '成功获取code'\r\n                    callback && callback(obj)\r\n                } else {\r\n                    callback && callback(obj)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取授权信息\r\n    getLoginInfo(callback?: (param: ICallBack) => void) {\r\n        if (typeof window['wx'] === 'undefined') {\r\n            //console.log('[Authorized login] Only supports WeChat platform!')\r\n            return\r\n        }\r\n        const obj: ICallBack = { status: false, data: null, msg: 'Server exception' }\r\n        window['wx'].getSetting({\r\n            success(res: any) {\r\n                if (res.authSetting[\"scope.userInfo\"]) {\r\n                    window['wx'].getUserInfo({\r\n                        success(res: any) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Authorized'\r\n                            callback && callback(obj)\r\n                        },\r\n                        fail() {\r\n                            callback && callback(obj)\r\n                        }\r\n                    })\r\n                } else {\r\n                    const sys = window['wx'].getSystemInfoSync()\r\n                    const width = sys.screenWidth\r\n                    const height = sys.screenHeight\r\n                    let button = window['wx'].createUserInfoButton({\r\n                        type: 'text',\r\n                        text: '',\r\n                        style: {\r\n                            left: 0,\r\n                            top: 0,\r\n                            width: width,\r\n                            height: height,\r\n                            backgroundColor: '#00000000',\r\n                            color: '#ffffff',\r\n                            fontSize: 20,\r\n                            textAlign: 'center',\r\n                            lineHeight: height,\r\n                        }\r\n                    })\r\n                    const tapEvent = function (res: any) {\r\n                        button.destroy()\r\n                        if (res.userInfo) {\r\n                            const info = res.userInfo\r\n                            const user: IUser = { openid: uuid(), nickname: info.nickName, gender: info.gender, avatar: info.avatarUrl }\r\n                            obj.status = true\r\n                            obj.data = user\r\n                            obj.msg = 'Accept authorization'\r\n                            callback && callback(obj)\r\n                        } else {\r\n                            obj.msg = 'Deny authorization'\r\n                            callback && callback(obj)\r\n                        }\r\n                    }\r\n                    button.onTap(tapEvent)\r\n                }\r\n            },\r\n            fail() {\r\n                callback && callback(obj)\r\n            }\r\n        })\r\n    }\r\n\r\n    // 不经过授权生成登录信息\r\n    getLoginInfoLocal(callback?: (param: ICallBack) => void) {\r\n        const obj: ICallBack = { status: true, data: null, msg: 'Simulate user data' }\r\n        // 截取时间戳后4位作为用户名\r\n        const time = new Date().getTime()\r\n        let nickname = `${time}`\r\n        nickname = 'NO.' + nickname.substring(nickname.length - 4)\r\n        const user: IUser = { openid: uuid(), nickname: nickname, gender: 0, avatar: '' }\r\n        obj.data = user\r\n        callback && callback(obj)\r\n    }\r\n}\r\n\r\n","import { ENUM_AUDIO_CLIP, ENUM_UI_TYPE, ENUM_GAME_STATUS} from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport DataManager from \"../manager/DataManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n//used for game lose/start scenario\r\n@ccclass\r\nexport default class ServerResponceErrorLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnSupport: cc.Node = null\r\n    btnRefresh: cc.Node = null\r\n   \r\n    tip: cc.Label = null\r\n    title: cc.Label = null\r\n\r\n    init(){\r\n        //todo. pass specific error and refresh callback action\r\n    }\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('panel', this.node)\r\n        this.btnSupport = cc.find('buttons/btn_support', this.panel)\r\n        this.btnRefresh = cc.find('buttons/btn_refresh', this.panel)\r\n        \r\n        this.tip = cc.find('tip', this.panel).getComponent(cc.Label)\r\n        this.title = cc.find('title', this.panel).getComponent(cc.Label)\r\n\r\n        this.btnSupport.on('click', this.onSupportClick, this)\r\n        this.btnRefresh.on('click', this.onRefreshClick, this)\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnSupport.off('click', this.onSupportClick, this)\r\n        this.btnRefresh.off('click', this.onRefreshClick, this)\r\n    }\r\n\r\n    onSupportClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        //todo open support page\r\n        TelegramWebApp.Instance?.openTelegramLinkSupport();\r\n    }\r\n\r\n    onRefreshClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        if(DataManager.instance.historyData){\r\n            StaticInstance.gameManager.onGameOver(ENUM_UI_TYPE.LOSE);\r\n        }\r\n        else{\r\n            StaticInstance.gameManager.onGameStart();\r\n        }\r\n    }\r\n}\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SettingLayer extends BaseLayer {\r\n\r\n    btnClose: cc.Node = null\r\n\r\n    btnMusic: cc.Node = null\r\n    btnSound: cc.Node = null\r\n\r\n    btnLangUa: cc.Node = null\r\n    btnLangEn: cc.Node = null\r\n    btnLangDe: cc.Node = null\r\n    btnLangEs: cc.Node = null\r\n    btnLangRu: cc.Node = null\r\n    \r\n    toggleContainer: cc.ToggleContainer = null\r\n\r\n    togglesNode: cc.Node = null\r\n\r\n\r\n    toggleEN_node: cc.Node = null\r\n    toggleUK_node: cc.Node = null\r\n    toggleDE_node: cc.Node = null\r\n    toggleES_node: cc.Node = null\r\n    toggleRU_node: cc.Node = null\r\n    toggleCS_node: cc.Node = null //Czech  cs\r\n    toggleSK_node: cc.Node = null //Slovak sk\r\n    togglePL_node: cc.Node = null //Polish pl\r\n\r\n\r\n    toggleEN: cc.Toggle = null\r\n    toggleUK: cc.Toggle = null\r\n    toggleDE: cc.Toggle = null\r\n    toggleES: cc.Toggle = null\r\n    toggleRU: cc.Toggle = null\r\n    toggleCS: cc.Toggle = null\r\n    toggleSK: cc.Toggle = null\r\n    togglePL: cc.Toggle = null\r\n\r\n\r\n    onLoad() {\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        this.togglesNode = cc.find('main/lang_selection/items', this.node);\r\n        this.toggleContainer =  this.togglesNode.getComponent(cc.ToggleContainer);\r\n\r\n        this.toggleUK_node = cc.find('toggle_lang_ua',  this.togglesNode);\r\n        this.toggleEN_node = cc.find('toggle_lang_en',  this.togglesNode);\r\n        this.toggleDE_node = cc.find('toggle_lang_de',  this.togglesNode);\r\n        this.toggleES_node = cc.find('toggle_lang_es',  this.togglesNode);\r\n        this.toggleRU_node = cc.find('toggle_lang_ru',  this.togglesNode);\r\n        this.toggleCS_node = cc.find('toggle_lang_cs',  this.togglesNode);\r\n        this.toggleSK_node = cc.find('toggle_lang_sk',  this.togglesNode);\r\n        this.togglePL_node = cc.find('toggle_lang_pl',  this.togglesNode);\r\n\r\n\r\n        console.log(this.toggleUK_node != null)\r\n        console.log(this.toggleEN_node != null)\r\n        console.log(this.toggleDE_node != null)\r\n        console.log(this.toggleES_node != null)\r\n        console.log(this.toggleRU_node != null)\r\n        console.log(this.toggleCS_node != null)\r\n        console.log(this.toggleSK_node != null)\r\n        console.log(this.togglePL_node != null)\r\n\r\n        this.toggleUK = this.toggleUK_node.getComponent(cc.Toggle);\r\n        this.toggleEN = this.toggleEN_node.getComponent(cc.Toggle);\r\n        this.toggleDE = this.toggleDE_node.getComponent(cc.Toggle);\r\n        this.toggleES = this.toggleES_node.getComponent(cc.Toggle);\r\n        this.toggleRU = this.toggleRU_node.getComponent(cc.Toggle);\r\n        this.toggleCS = this.toggleCS_node.getComponent(cc.Toggle);\r\n        this.toggleSK = this.toggleSK_node.getComponent(cc.Toggle);\r\n        this.togglePL = this.togglePL_node.getComponent(cc.Toggle);\r\n\r\n        console.log(this.toggleUK != null)\r\n        console.log(this.toggleEN != null)\r\n        console.log(this.toggleDE != null)\r\n        console.log(this.toggleES != null)\r\n        console.log(this.toggleRU != null)\r\n        console.log(this.toggleCS != null)\r\n        console.log(this.toggleSK != null)\r\n        console.log(this.togglePL != null)\r\n\r\n        this.setupListeners();\r\n\r\n        this.btnMusic = cc.find('main/btns_group_1/btn_music', this.node)\r\n        this.btnSound = cc.find('main/btns_group_1/btn_sound', this.node)\r\n        this.btnClose = cc.find('btn_close', this.node)\r\n\r\n        this.btnMusic.on(cc.Node.EventType.TOUCH_START, this.onMusicClick, this)\r\n        this.btnSound.on(cc.Node.EventType.TOUCH_START, this.onSoundClick, this)\r\n        this.btnClose.on(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n\r\n        this.renderCurrentLanguage();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnMusic.off(cc.Node.EventType.TOUCH_START, this.onMusicClick, this)\r\n        this.btnSound.off(cc.Node.EventType.TOUCH_START, this.onSoundClick, this)\r\n        this.btnClose.off(cc.Node.EventType.TOUCH_START, this.onCloseClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        //this.zoomIn(this.panel)\r\n        this.rendorMusic()\r\n        this.rendorSound()\r\n        SdkManager.instance.showInterstitialAd()\r\n    }\r\n\r\n    onCloseClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SETTING, false)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onSoundClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isSoundOn = !DataManager.instance.isSoundOn\r\n        DataManager.instance.save()\r\n        this.rendorSound()\r\n    }\r\n\r\n    onMusicClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        DataManager.instance.isMusicOn = !DataManager.instance.isMusicOn\r\n        DataManager.instance.save()\r\n        if (DataManager.instance.isMusicOn) {\r\n            AudioManager.instance.playMusic()\r\n        } else {\r\n            AudioManager.instance.stopMusic()\r\n        }\r\n        this.rendorMusic()\r\n    }\r\n\r\n    rendorMusic() {\r\n        if(!this.btnMusic)\r\n            return;\r\n\r\n        this.btnMusic.getChildByName('on').active = DataManager.instance.isMusicOn\r\n        this.btnMusic.getChildByName('off').active = !DataManager.instance.isMusicOn\r\n    }\r\n\r\n    rendorSound() {\r\n        if(!this.btnSound)\r\n            return;\r\n        this.btnSound.getChildByName('on').active = DataManager.instance.isSoundOn\r\n        this.btnSound.getChildByName('off').active = !DataManager.instance.isSoundOn\r\n    }\r\n\r\n    renderCurrentLanguage(){\r\n\r\n        this.toggleEN.isChecked = DataManager.instance.language == \"en\";\r\n        this.toggleUK.isChecked =  DataManager.instance.language == \"uk\" || DataManager.instance.language == \"uk\";\r\n        this.toggleDE.isChecked =  DataManager.instance.language == \"de\";\r\n        this.toggleES.isChecked =  DataManager.instance.language == \"es\";\r\n        this.toggleRU.isChecked =  DataManager.instance.language == \"ru\";\r\n        this.toggleCS.isChecked =  DataManager.instance.language == \"cs\";\r\n        this.toggleSK.isChecked =  DataManager.instance.language == \"sk\";\r\n        this.togglePL.isChecked =  DataManager.instance.language == \"pl\";\r\n    }\r\n\r\n    setupListeners() {\r\n        this.toggleEN_node.on('toggle', () => LocalizationManager.instance.changeLanguage('en'));\r\n        this.toggleUK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('uk'));\r\n        this.toggleDE_node.on('toggle', () => LocalizationManager.instance.changeLanguage('de'));\r\n        this.toggleES_node.on('toggle', () => LocalizationManager.instance.changeLanguage('es'));\r\n        this.toggleRU_node.on('toggle', () => LocalizationManager.instance.changeLanguage('ru'));\r\n        this.toggleCS_node.on('toggle', () => LocalizationManager.instance.changeLanguage('cs'));\r\n        this.toggleSK_node.on('toggle', () => LocalizationManager.instance.changeLanguage('sk'));\r\n        this.togglePL_node.on('toggle', () => LocalizationManager.instance.changeLanguage('pl'));\r\n    }\r\n}\r\n","import { UserController } from \"../api/controllers/UserController\";\r\nimport { ENUM_AUDIO_CLIP, ENUM_GAME_STATUS, ENUM_UI_TYPE } from \"../Enum\";\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { StaticInstance } from \"../StaticInstance\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport BaseLayer from \"./Baselayer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShopLayer extends BaseLayer {\r\n\r\n    btn_close: cc.Node = null;\r\n\r\n    btn_shop_1: cc.Node = null;\r\n    btn_shop_2: cc.Node = null;\r\n    btn_shop_3: cc.Node = null;\r\n    coins_amount_label: cc.Label = null;\r\n\r\n\r\n    onLoad() {\r\n        this.btn_close = cc.find('btn_close', this.node)\r\n        this.btn_shop_1 = cc.find('layout/btn_buy_coins_1', this.node)\r\n        this.btn_shop_2 = cc.find('layout/btn_buy_coins_2', this.node)\r\n        this.btn_shop_3 = cc.find('layout/btn_buy_coins_3', this.node)\r\n        this.coins_amount_label = cc.find('coin_balance/coins_amount', this.node).getComponent(cc.Label)\r\n\r\n        this.btn_close.on(cc.Node.EventType.TOUCH_START, this.onBackClick, this)\r\n        this.btn_shop_1.on(cc.Node.EventType.TOUCH_START, this.onBuyPack1Click, this)\r\n        this.btn_shop_2.on(cc.Node.EventType.TOUCH_START, this.onBuyPack2Click, this)\r\n        this.btn_shop_3.on(cc.Node.EventType.TOUCH_START, this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btn_close.off(cc.Node.EventType.TOUCH_START, this.onBackClick, this)\r\n        this.btn_shop_1.off(cc.Node.EventType.TOUCH_START, this.onBuyPack1Click, this)\r\n        this.btn_shop_2.off(cc.Node.EventType.TOUCH_START, this.onBuyPack2Click, this)\r\n        this.btn_shop_3.off(cc.Node.EventType.TOUCH_START, this.onBuyPack3Click, this)\r\n    }\r\n\r\n    onEnable() { \r\n       this.fetchCoins();\r\n    }\r\n\r\n    onDisable() { }\r\n\r\n    onBackClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.SHOP, false)\r\n        //StaticInstance.uiManager.toggle(ENUM_UI_TYPE.MENU)\r\n    }\r\n\r\n    onBuyPack1Click(){\r\n        this.buyCoinsForStars(5);\r\n    }\r\n\r\n    onBuyPack2Click(){\r\n        this.buyCoinsForStars(100);\r\n    }\r\n\r\n    onBuyPack3Click(){\r\n        this.buyCoinsForStars(500);\r\n    }\r\n\r\n\r\n    buyCoinsForStars(coins_amount: number){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoiceStars(coins_amount).then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    buyRemoveAds(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n\r\n        UserController.Instance?.postInvoicePremium().then((response) => {\r\n            console.log(response.invoice_link);\r\n\r\n            TelegramWebApp.Instance.openInvoice(response.invoice_link,  (status, url) =>{\r\n                console.log(\"invoice callback\");\r\n                console.log(status);\r\n                console.log(url);\r\n                this.fetchCoins();\r\n            });\r\n\r\n        }).catch((error) => {\r\n            console.error(\"Failed transaction:\", error);\r\n            this.fetchCoins();\r\n        });\r\n    }\r\n\r\n    fetchCoins(){\r\n        UserController.Instance?.getUser().then((response) => {\r\n            this.coins_amount_label.string = response.data.balance_stars.toString();\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n\r\n    public async fetchPremiumStatus() : Promise<boolean> {\r\n        return (await UserController.Instance?.getUser()).data.is_premium;\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SizeFitter extends cc.Component {\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Widht\",\r\n    })\r\n    fitWidht: boolean = true;\r\n\r\n    @property({\r\n        type: cc.Boolean,\r\n        displayName: \"Fit Height\",\r\n    })\r\n    fitHeight: boolean = true;\r\n\r\n    onLoad() {\r\n        cc.view.setResizeCallback(() => this.fit())\r\n        this.fit();\r\n    }\r\n\r\n    fit(){\r\n         // Get the design resolution and screen resolution\r\n        const canvas = this.node.getComponent(cc.Canvas);\r\n        const designResolution = cc.view.getDesignResolutionSize();\r\n        const frameSize = cc.view.getFrameSize();\r\n\r\n        // Calculate aspect ratios\r\n        const designAspectRatio = designResolution.width / designResolution.height;\r\n        const frameAspectRatio = frameSize.width / frameSize.height;\r\n\r\n        // Check if the frame aspect ratio is wider\r\n        if (frameAspectRatio > designAspectRatio) {\r\n            // Update canvas width to fit the frame's aspect ratio\r\n            canvas.fitWidth = true;\r\n            canvas.fitHeight = false;\r\n\r\n            const newWidth = designResolution.height * frameAspectRatio;\r\n            canvas.designResolution = cc.size(newWidth, designResolution.height);\r\n        } else {\r\n            // Otherwise, fit height normally\r\n            canvas.fitWidth = false;\r\n            canvas.fitHeight = true;\r\n        }\r\n    }\r\n\r\n}","// Created by carolsail\r\n\r\nimport GameManager from \"./manager/GameManager\";\r\nimport UIManager from \"./manager/UIManager\";\r\nimport FadeManager from \"./manager/FadeManager\";\r\n\r\nexport class StaticInstance {\r\n    static uiManager: UIManager | undefined = undefined;\r\n    static gameManager: GameManager | undefined = undefined;\r\n    static fadeManager: FadeManager | undefined = undefined;\r\n\r\n    static setUIManager(context: UIManager) {\r\n        StaticInstance.uiManager = context;\r\n    }\r\n\r\n    static setGameManager(context: GameManager) {\r\n        StaticInstance.gameManager = context\r\n    }\r\n\r\n    static setFadeManager(context: FadeManager) {\r\n        StaticInstance.fadeManager = context\r\n    }\r\n}","const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass('Tads')\r\nexport class Tads {\r\n    private static _instance: Tads;\r\n    private constructor() {\r\n\r\n    }\r\n\r\n    private adController: any = null; // посилання на tads контролер\r\n    private widgetId: string = '403'; // <-- ВСТАВ СВІЙ ID сюди\r\n\r\n    public static get Instance(): Tads {\r\n        if (!Tads._instance) {\r\n            Tads._instance = new Tads();\r\n        }\r\n        return Tads._instance;\r\n    }\r\n\r\n    public init(){\r\n        return new Promise<void>((resolve, reject) => {\r\n            const tryInit = () => {\r\n                if (typeof (window as any).tads !== 'undefined' && (window as any).tads.init) {\r\n                    this.adController = (window as any).tads.init({\r\n                        widgetId: this.widgetId,\r\n                        debug: false,\r\n                        onShowReward: (adId: any) => {\r\n                            console.log('Show ad:', adId);\r\n                        },\r\n                        onClickReward: (adId: any) => {\r\n                            console.log('Click on ad:', adId);\r\n                        },\r\n                        onAdsNotFound: () => {\r\n                            console.warn('No ads found to show');\r\n                        }\r\n                    });\r\n                    console.log(\"Tads controller initialized.\");\r\n                    resolve();\r\n                } else {\r\n                    console.warn('Tads not loaded yet.');\r\n                    setTimeout(tryInit, 100);\r\n                }\r\n            };\r\n\r\n            tryInit();\r\n        });\r\n    }\r\n\r\n    public showAd_Rewarded() : Promise<void>{\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.adController) {\r\n                console.warn('Tads controller not initialized.');\r\n                reject('Tads controller not initialized.');\r\n                return;\r\n            }\r\n\r\n            this.adController.loadAd()\r\n                .then(() => {\r\n                    return this.adController.showAd();\r\n                })\r\n                .then(() => {\r\n                    console.log('Ad shown successfully');\r\n                    resolve();\r\n                })\r\n                .catch((err: any) => {\r\n                    console.error('Failed to show ad', err);\r\n                    reject(err);\r\n                });\r\n        });\r\n    }\r\n}","import { ENUM_AUDIO_CLIP, ENUM_GAME_MODE, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport DataManager from \"../manager/DataManager\";\r\nimport { TelegramWebApp } from \"../telegram/TelegramMiniApp\";\r\nimport { UserDailyTasksDto } from \"../dtos/user.dto\";\r\nimport PoolManager from \"../manager/PoolManager\";\r\nimport DailyTaskItem from \"../ui/DailyTaskItem\";\r\nimport { UserController } from \"../api/controllers/UserController\";\r\nimport HourlyChallangeItem from \"../ui/HourlyChallangeItem\";\r\nimport { getRemainingTimeToDateSeconds } from \"../Utils\";\r\nimport BottomNavigationPanel from \"../ui/BottomNavigationPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TasksLayer extends BaseLayer {\r\n\r\n    \r\n    info_popup: cc.Node = null\r\n\r\n    week_tasks_bar: cc.Node = null\r\n    week_tasks_bar_base: cc.Node = null\r\n    week_tasks_bar_streak: cc.Node = null\r\n\r\n    week_tasks_bar_fill: cc.Sprite = null;\r\n    week_tasks_bar_amount: cc.Label = null;\r\n    week_tasks_bar_streak_amount: cc.Label = null;\r\n    \r\n    info_popup_tasks_fill: cc.Sprite = null;\r\n    info_popup_tasks_amount: cc.Label = null;\r\n    info_popup_streak: cc.Node = null;\r\n    info_popup_streak_amount: cc.Label = null;\r\n    info_popup_timeLeft: cc.Label = null;\r\n\r\n\r\n    dailyPanel: cc.Node = null\r\n    invitePanel: cc.Node = null\r\n\r\n    btnCloseInfo: cc.Node = null\r\n\r\n    btnDailyTab: cc.Node = null\r\n    btnInviteTab: cc.Node = null\r\n    btnInviteFriend: cc.Node = null\r\n\r\n    dailyPanelContent: cc.Node = null\r\n\r\n    onLoad() {\r\n\r\n        const tabs_panel = cc.find('tabs_panel', this.node);\r\n        tabs_panel.addComponent(BottomNavigationPanel);\r\n\r\n        //screens\r\n        this.info_popup = cc.find('info_popup', this.node)\r\n        this.dailyPanel = cc.find('daily', this.node)\r\n        this.invitePanel = cc.find('invite', this.node)\r\n\r\n        //content -- tasks\r\n        this.dailyPanelContent = cc.find('main/scroll_view/view/content', this.dailyPanel)\r\n\r\n        //week task bar\r\n        this.week_tasks_bar = cc.find('main/tasks_weekly', this.dailyPanel)\r\n        this.week_tasks_bar_base = cc.find('base', this.week_tasks_bar)\r\n        this.week_tasks_bar_streak = cc.find('streak', this.week_tasks_bar)\r\n\r\n        this.week_tasks_bar_fill = cc.find('fill_bar/fill', this.week_tasks_bar_base).getComponent(cc.Sprite)\r\n        this.week_tasks_bar_amount = cc.find('amount', this.week_tasks_bar_base).getComponent(cc.Label)\r\n        this.week_tasks_bar_streak_amount = cc.find('layout/label', this.week_tasks_bar_streak).getComponent(cc.Label)\r\n\r\n        //info popup\r\n        this.info_popup_tasks_fill = cc.find('panel/games_weekly/fill_bar/fill', this.info_popup).getComponent(cc.Sprite)\r\n        this.info_popup_tasks_amount = cc.find('panel/games_weekly/amount', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_streak = cc.find('panel/streak', this.info_popup)\r\n        this.info_popup_streak_amount = cc.find('panel/streak/label', this.info_popup).getComponent(cc.Label)\r\n        this.info_popup_timeLeft = cc.find('panel/bottom/time_text', this.info_popup).getComponent(cc.Label)\r\n\r\n        this.btnCloseInfo = cc.find('panel/btn_close', this.info_popup)\r\n        this.btnDailyTab = cc.find('btn_tab_daily', this.invitePanel)\r\n        this.btnInviteTab = cc.find('btn_tab_invite', this.dailyPanel)\r\n        this.btnInviteFriend = cc.find('main/task_item_invite/panel/btn_invite', this.invitePanel)\r\n\r\n        this.btnDailyTab.on(cc.Node.EventType.TOUCH_START, this.onTabDailyClick, this)\r\n        this.btnInviteTab.on(cc.Node.EventType.TOUCH_START, this.onTabInviteClick, this)\r\n        this.btnInviteFriend.on(cc.Node.EventType.TOUCH_START, this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.on(cc.Node.EventType.TOUCH_START, this.openInfoPopupClick, this)\r\n        this.btnCloseInfo.on(cc.Node.EventType.TOUCH_START, this.closeInfoPopupClick, this)\r\n\r\n\r\n        this.setWeeklyAmount(0,14);\r\n        this.setStreakAmount(0);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnDailyTab.off(cc.Node.EventType.TOUCH_START, this.onTabDailyClick, this)\r\n        this.btnInviteTab.off(cc.Node.EventType.TOUCH_START, this.onTabInviteClick, this)\r\n        this.btnInviteFriend.off(cc.Node.EventType.TOUCH_START, this.onInviteFriendClick, this)\r\n\r\n        this.week_tasks_bar.off(cc.Node.EventType.TOUCH_START, this.openInfoPopupClick, this)\r\n\r\n    }\r\n\r\n    async onEnable(){\r\n        while (DataManager.instance.userData == null) {\r\n            await new Promise(resolve => setTimeout(resolve, 10)); // Wait 10ms before checking again\r\n        }\r\n\r\n        if(DataManager.instance.userData){\r\n            this.setWeeklyAmount(DataManager.instance.userData.completed_tasks,14);\r\n            this.setStreakAmount(DataManager.instance.userData.weekly_streak);\r\n        }\r\n\r\n        if(DataManager.instance.userTasks){\r\n            this.setDailyTasks(DataManager.instance.userTasks, false);\r\n        }\r\n\r\n        this.fetchDailyTasks();\r\n\r\n       \r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if(DataManager.instance.nextMonday){\r\n            //this.labelGiveawayTimeLeft.string = getRemainingTimeToDateMinutes(DataManager.instance.nextMonday);\r\n            this.info_popup_timeLeft.string = getRemainingTimeToDateSeconds(DataManager.instance.nextMonday);\r\n        } \r\n    }\r\n\r\n    setWeeklyAmount(played : number, target : number){\r\n        const fillRange = played / target;\r\n        this.week_tasks_bar_amount.string = this.info_popup_tasks_amount.string = `${played}/${target}`\r\n        this.week_tasks_bar_fill.fillRange = this.info_popup_tasks_fill.fillRange = fillRange;\r\n    }\r\n\r\n    setStreakAmount( days : number){\r\n        this.week_tasks_bar_streak_amount.string = `x${days}`;\r\n        this.info_popup_streak_amount.string = `streak x${days}`;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n        this.week_tasks_bar_streak.active = days > 0;\r\n    }\r\n\r\n    fetchDailyTasks(){\r\n        UserController.Instance?.getUserDailyTasks().then((response) => {\r\n            DataManager.instance.userTasks = response.data;\r\n            this.setDailyTasks(response.data);\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch tasks:\", error);\r\n        });\r\n    }\r\n\r\n    setDailyTasks(dto: UserDailyTasksDto, fetchHourlyChallange: boolean = true){\r\n        this.dailyPanelContent.destroyAllChildren();\r\n        const poolManager = PoolManager.instance;\r\n\r\n\r\n        const hourly_challenge_item = PoolManager.instance.getNode(`task_item_hourly_challenge`, this.dailyPanelContent).getComponent(HourlyChallangeItem);\r\n        if(fetchHourlyChallange){\r\n            hourly_challenge_item.fetchFromServer();\r\n        }\r\n        else{\r\n            hourly_challenge_item.setFromCache();\r\n        }\r\n\r\n        for (let i = 0; i < dto.tasks.length; i++) {\r\n            const item = poolManager.getNode(`task_item_new`, this.dailyPanelContent).getComponent(DailyTaskItem);\r\n            item.init(dto.tasks[i]);\r\n        }\r\n    }\r\n\r\n    onTabDailyClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = true;\r\n        this.invitePanel.active = false;\r\n    }\r\n\r\n    onTabInviteClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        this.dailyPanel.active = false;\r\n        this.invitePanel.active = true;\r\n    }\r\n    \r\n    openInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = true;\r\n    }\r\n\r\n    closeInfoPopupClick(){\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        this.info_popup.active = false;\r\n    }\r\n\r\n    onInviteFriendClick() { \r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK) \r\n        TelegramWebApp.Instance.shareReferral();\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as config from '../../config.js';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\r\n    if (cc.sys.platform === cc.sys.MOBILE_BROWSER || cc.sys.platform === cc.sys.DESKTOP_BROWSER) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = () => {\r\n            const intervalId = setInterval(() => {\r\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\r\n                    resolve((window as any).Telegram.WebApp);\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 100);\r\n        };\r\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\r\n        document.head.appendChild(script);\r\n    }\r\n});\r\n\r\nexport interface WebAppUser {\r\n    id: number;\r\n    is_bot: boolean;\r\n    first_name: string;\r\n    last_name?: string;\r\n    username?: string;\r\n    language_code?: string;\r\n    is_premium?: boolean;\r\n    added_to_attachment_menu?: boolean;\r\n    allows_write_to_pm?: boolean;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppChat {\r\n    id: number;\r\n    type: 'private' | 'group' | 'supergroup' | 'channel';\r\n    title: string;\r\n    username?: string;\r\n    photo_url?: string;\r\n}\r\nexport interface WebAppInitData {\r\n    query_id?: string;\r\n    user?: WebAppUser;\r\n    receiver?: WebAppUser;\r\n    chat?: WebAppChat;\r\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\r\n    chat_instance?: string;\r\n    start_param?: string;\r\n    can_send_after?: number;\r\n    auth_data: number;\r\n    hash: string;\r\n}\r\n\r\n@ccclass('TelegramWebApp')\r\nexport class TelegramWebApp {\r\n    private static _instance: TelegramWebApp;\r\n    private constructor() {\r\n\r\n    }\r\n    public static get Instance(): TelegramWebApp {\r\n        if (!TelegramWebApp._instance) {\r\n            TelegramWebApp._instance = new TelegramWebApp();\r\n        }\r\n        return TelegramWebApp._instance;\r\n    }\r\n\r\n    private _tgWebAppJS: any = null;\r\n    public async init(): Promise<{ success: boolean }> {\r\n        this._tgWebAppJS = await tgLoadPromise;\r\n\r\n        if (this._tgWebAppJS) {\r\n            return Promise.resolve({ success: true });\r\n        } else {\r\n            return Promise.resolve({ success: false });\r\n        }\r\n    }\r\n\r\n    public openTelegramLinkChannel(){\r\n        //this.openTelegramLink(\"https://t.me/+8brtpInhNUNiNTAy\")\r\n        this.openTelegramLink(config.CHANNEL_INVITE_URL)\r\n    }\r\n\r\n    public openTelegramLinkSupport(){\r\n        this.openTelegramLink(config.SUPPORT_URL)\r\n    }\r\n\r\n    public openTelegramLinkBank(){\r\n        this.openTelegramLink(config.BANK_URL)\r\n    }\r\n\r\n    public openLinkPrivacy(){\r\n        this.openLink(\"https://telegram.org/privacy-tpa\")\r\n    }\r\n\r\n    public openLinkPartnership(){\r\n        this.openLink(\"https://docs.google.com/forms/d/e/1FAIpQLScMtlZD_75-r4d1hrkiAh3FaPy2qTYUAV59HvbO4cGBAU4x3A/viewform?usp=dialog\")\r\n    }\r\n\r\n    public openLinkGuidebook(){\r\n        this.openLink(\"https://telegram.org\")\r\n    }\r\n\r\n\r\n    public openLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openLink(url);\r\n    }\r\n\r\n    public openTelegramLink(url: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        this._tgWebAppJS.openTelegramLink(url);\r\n    }\r\n\r\n    public share(url: string, text?: string) {\r\n        const shareUrl = 'https://t.me/share/url?url=' + encodeURIComponent(url) + '&text=' + encodeURIComponent(text || '');\r\n        this.openTelegramLink(shareUrl);\r\n    }\r\n\r\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n        const widget_link = {\r\n            text: shareText,\r\n            widget_link: {\r\n                url: widget_link_url,\r\n                name: widget_link_name,\r\n            },\r\n        };\r\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\r\n    }\r\n\r\n\r\n    public shareReferral(){\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return;\r\n        }\r\n\r\n        const user = this.getTelegramUser();\r\n        const url = `${config.REFERRAL_URL}?startapp=${user.id}`;\r\n        const text = '🔗 Try to beat my top score!';\r\n        this.share(url, text);\r\n    }\r\n\r\n    //This method can directly return the TelegramWebApp object, making it convenient to use other capabilities. \r\n    //For specific methods, please refer to the official documentation: \r\n    //https://core.telegram.org/bots/webapps#initializing-mini-apps\r\n    public getTelegramWebApp() {\r\n        return this._tgWebAppJS;\r\n    }\r\n\r\n    public getTelegramWebAppInitData(): WebAppInitData {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe;\r\n    }\r\n\r\n\r\n    public getTelegramUser(): WebAppUser {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initDataUnsafe.user;\r\n    }\r\n\r\n    public getTelegramInitData(): string {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        return this._tgWebAppJS.initData;\r\n    }\r\n\r\n    public openInvoice(url: string, callback: any) {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        this._tgWebAppJS.openInvoice(url, callback);\r\n    }\r\n\r\n    public requestFullscreen() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n\r\n        try{\r\n            this._tgWebAppJS.requestFullscreen();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    public enableClosingConfirmation() {\r\n        if (!this._tgWebAppJS) {\r\n            console.error(\"telegram web app is not inited!\");\r\n            return null;\r\n        }\r\n        \r\n        \r\n        try{\r\n            this._tgWebAppJS.enableClosingConfirmation();     \r\n        }\r\n        catch{\r\n            \r\n        }\r\n    }\r\n\r\n    public alert(message: string) {\r\n        this._tgWebAppJS.showAlert(message);\r\n    }\r\n\r\n    public hapticLightImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"light\") \r\n    }\r\n\r\n    public hapticMediumImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"medium\")\r\n    }\r\n\r\n    public hapticHeavyImpact() {\r\n        this._tgWebAppJS.HapticFeedback.impactOccurred(\"heavy\")\r\n    }\r\n\r\n    public hapticSuccesNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"success\")\r\n    }\r\n\r\n    public hapticErrorNotification() {\r\n        this._tgWebAppJS.HapticFeedback.notificationOccurred(\"error\")\r\n    }\r\n}\r\n\r\n\r\n","import { Leaderboard } from \"../types\";\r\nimport {ApiClient} from \"./ApiClient\";\r\nimport {TestModel} from \"./models/TestModel\";\r\n\r\nexport class TestManager {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n\r\n    public static Instance: TestManager = null\r\n\r\n\r\n    public async getTest(): Promise<TestModel> {\r\n        return this.apiClient.get(\"test/123\");\r\n    }\r\n\r\n    public async postTest(): Promise<TestModel> {\r\n        const data: TestModel = {\r\n            id: 1,\r\n            text: \"Hello, world!\"\r\n        };\r\n        return this.apiClient.post(\"test/\", data);\r\n    }\r\n\r\n\r\n    public async getLeaderboard(): Promise<Leaderboard> {\r\n        return this.apiClient.get(\"user/leaderboard/226496203\");\r\n    }\r\n}","import DataManager from \"../manager/DataManager\";\r\nimport LocalizationManager from \"../manager/LocalizationManager\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ThemeSetter extends cc.Component {\r\n\r\n    //buttons\r\n    @property(cc.Button)\r\n    public btn_theme_switch: cc.Button = null;\r\n\r\n    //nodes\r\n    \r\n    @property(cc.Node)\r\n    public node_theme_dark: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_theme_light: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    public node_score_max_icon: cc.Node = null;\r\n\r\n    //labels\r\n    @property(cc.Label)\r\n    public label_coins: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_current: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    public label_score_max_text: cc.Label = null;\r\n\r\n    //sprites\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_background: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_coins: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_theme_switch: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_board: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_1: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_2: cc.Sprite = null;\r\n\r\n    @property(cc.Sprite)\r\n    public sprite_slot_ready_3: cc.Sprite = null;\r\n\r\n    //textures\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_panel_coin_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_board_dark: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    public frame_ready_item_dark: cc.SpriteFrame = null;\r\n\r\n    onLoad () {\r\n        this.btn_theme_switch.node.on('click', this.switchCurrentTheme, this);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        this.btn_theme_switch.node.off('click', this.switchCurrentTheme, this); \r\n    }\r\n\r\n    onEnable(): void {\r\n        this.setTheme(DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    switchCurrentTheme(){\r\n        console.log(\"switchCurrentTheme \")\r\n        \r\n        this.setTheme(!DataManager.instance.isDarkThemeOn);\r\n    }\r\n\r\n    setTheme(isDarkThemeOn : boolean){\r\n        console.log(\"SET THEME \", isDarkThemeOn)\r\n        this.setLabels(isDarkThemeOn);\r\n        this.setSprites(isDarkThemeOn);\r\n        this.setBackground(isDarkThemeOn);\r\n\r\n        this.node_theme_dark.active = isDarkThemeOn;\r\n        this.node_theme_light.active = !isDarkThemeOn;\r\n\r\n        DataManager.instance.isDarkThemeOn = isDarkThemeOn;\r\n    }\r\n\r\n    setBackground(isDarkThemeOn : boolean){\r\n        const darkThemeColor = cc.color(58, 81, 149);\r\n        const lightThemeColor = cc.color(250, 251, 255);\r\n\r\n        this.sprite_background.node.color =  isDarkThemeOn ? darkThemeColor : lightThemeColor;\r\n    }\r\n\r\n    setLabels(isDarkThemeOn : boolean){\r\n        const lightTheme_darkBlueText = cc.color(34, 47, 63);\r\n        const lightTheme_darkGrayText = cc.color(124, 133, 135);\r\n        const darkTheme_grayText = cc.color(193, 208, 230);\r\n\r\n        this.label_coins.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n        this.label_score_current.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkBlueText;\r\n\r\n        this.label_score_max.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.label_score_max_text.node.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n        this.node_score_max_icon.color = isDarkThemeOn ? darkTheme_grayText : lightTheme_darkGrayText;\r\n    }\r\n\r\n    setSprites(isDarkThemeOn : boolean){\r\n        this.sprite_board.spriteFrame = isDarkThemeOn ? this.frame_board_dark : this.frame_board;\r\n\r\n        this.sprite_slot_ready_1.spriteFrame = \r\n        this.sprite_slot_ready_2.spriteFrame = \r\n        this.sprite_slot_ready_3.spriteFrame = \r\n            isDarkThemeOn ? this.frame_ready_item_dark : this.frame_ready_item;\r\n\r\n        this.sprite_coins.spriteFrame = \r\n        this.sprite_theme_switch.spriteFrame = \r\n            isDarkThemeOn ? this.frame_panel_coin_dark : this.frame_panel_coin;\r\n    }\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nexport default class ToastManager {\r\n\r\n    private static _instance: any = null\r\n\r\n    static getInstance<T>(): T {\r\n        if (this._instance === null) {\r\n            this._instance = new this()\r\n        }\r\n\r\n        return this._instance\r\n    }\r\n\r\n    static get instance() {\r\n        return this.getInstance<ToastManager>()\r\n    }\r\n\r\n    show(text: string = '', {gravity = 'CENTER', duration = 1, bg_color = cc.color(102, 102, 102, 200)} = {}){\r\n        // canvas\r\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\r\n        let width = canvas.node.width;\r\n        let height = canvas.node.height;\r\n\r\n        // 节点\r\n        let bgNode = new cc.Node();\r\n        bgNode.group = 'ui'\r\n\r\n        // Lable文本格式设置\r\n        let textNode = new cc.Node();\r\n        let textLabel = textNode.addComponent(cc.Label);\r\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\r\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\r\n        textLabel.fontSize = 30;\r\n        textLabel.string = text;\r\n\r\n        // 当文本宽度过长时，设置为自动换行格式\r\n        if (text.length * textLabel.fontSize > (width * 3) / 5) {\r\n            textNode.width = (width * 3) / 5;\r\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\r\n        } else {\r\n            textNode.width = text.length * textLabel.fontSize;\r\n        }\r\n        let lineCount =\r\n            ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\r\n        textNode.height = textLabel.fontSize * lineCount;\r\n\r\n        // 背景设置\r\n        let ctx = bgNode.addComponent(cc.Graphics);\r\n        ctx.arc(\r\n            -textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            0.5 * Math.PI,\r\n            1.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\r\n        ctx.arc(\r\n            textNode.width / 2,\r\n            0,\r\n            textNode.height / 2 + 20,\r\n            1.5 * Math.PI,\r\n            0.5 * Math.PI,\r\n            true\r\n        );\r\n        ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\r\n        ctx.fillColor = bg_color;\r\n        ctx.fill();\r\n\r\n        bgNode.addChild(textNode);\r\n\r\n        // gravity 设置Toast显示的位置\r\n        if (gravity === \"CENTER\") {\r\n            bgNode.y = 0;\r\n            bgNode.x = 0;\r\n        } else if (gravity === \"TOP\") {\r\n            bgNode.y = bgNode.y + (height / 5) * 2;\r\n        } else if (gravity === \"BOTTOM\") {\r\n            bgNode.y = bgNode.y - (height / 5) * 2;\r\n        }\r\n\r\n        canvas.node.addChild(bgNode);\r\n        // 执行动画\r\n        let finished = cc.callFunc(function() {\r\n            bgNode.destroy();\r\n        });\r\n        let action = cc.sequence(\r\n            cc.moveBy(duration, cc.v2(0, 0)),\r\n            cc.fadeOut(0.3),\r\n            finished\r\n        );\r\n        // bgNode.runAction(action); \r\n        cc.tween(bgNode).then(action).start()\r\n    }\r\n}\r\n","import { ENUM_UI_TYPE } from './../Enum';\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport BaseLayer from '../layer/Baselayer';\r\nimport PoolManager from './PoolManager';\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UIManager extends cc.Component {\r\n\r\n    private uiMap = new Map<ENUM_UI_TYPE, BaseLayer>()\r\n\r\n    protected onLoad(): void {\r\n        StaticInstance.setUIManager(this)\r\n    }\r\n\r\n    init(){\r\n        for(let type in ENUM_UI_TYPE){\r\n            const node: cc.Node = PoolManager.instance.getNode(ENUM_UI_TYPE[type], this.node)\r\n            if(node && !this.uiMap.has(ENUM_UI_TYPE[type])) {\r\n                node.active = false\r\n                node.addComponent(ENUM_UI_TYPE[type])\r\n                this.uiMap.set(ENUM_UI_TYPE[type], node.getComponent(ENUM_UI_TYPE[type]))\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(key: ENUM_UI_TYPE, status: boolean = true, callback?: () => void) {\r\n        if(this.uiMap.has(key)){\r\n           const layer = this.uiMap.get(key)\r\n           status ? layer.show() : layer.hide()\r\n           callback && callback()\r\n        }\r\n    }\r\n\r\n    isActive(key: ENUM_UI_TYPE){\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key).node.active\r\n        }\r\n        return false\r\n    }\r\n\r\n    getActiveTypes(){\r\n        const types: ENUM_UI_TYPE[] = []\r\n        this.uiMap.forEach((layer: BaseLayer, type: ENUM_UI_TYPE)=>{\r\n            if(this.isActive(type)) types.push(type)\r\n        })\r\n        return types\r\n    }\r\n\r\n    getLayerInstance(key: ENUM_UI_TYPE) : BaseLayer{\r\n        if(this.uiMap.has(key)){\r\n            return this.uiMap.get(key)\r\n        }\r\n        return null\r\n    }\r\n}\r\n","const { ccclass, property } = cc._decorator;\r\n\r\nexport enum ENUM_SCROLL_DIR { V, H }\r\n\r\n@ccclass\r\nexport default class UIScrollControl extends cc.Component {\r\n    private scrollView: cc.ScrollView = null\r\n    private contentSize: cc.Size = null\r\n    private scrollDirection: ENUM_SCROLL_DIR = ENUM_SCROLL_DIR.V\r\n    private totalCount: number = 0\r\n    private itemCount: number = 0\r\n    private childrenList: cc.Node[] = []\r\n    private itemDistance: number = 0\r\n    private contentSizeStart: cc.Size = null\r\n    private isStartFlag: boolean = false\r\n    private theMaxID: number = 0\r\n    private refreshCB: Function = null\r\n\r\n\r\n    init(_tempNode: cc.Node, _totalCount: number, _size: cc.Size, _dir: ENUM_SCROLL_DIR, callBack: Function, scrollTo?: Function): void {\r\n        if (callBack) this.refreshCB = callBack\r\n\r\n        if (this.isStartFlag == false) {\r\n            this.scrollView = this.node.getComponent(cc.ScrollView);\r\n            if (this.scrollView == null || this.scrollView.content == null) return\r\n\r\n            this.scrollView.content.parent.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            let _maskWidget: cc.Widget = this.scrollView.content.parent.getComponent(cc.Widget)\r\n\r\n            if (_maskWidget == null) _maskWidget = this.scrollView.content.parent.addComponent(cc.Widget)\r\n\r\n            _maskWidget.isAlignLeft = true\r\n            _maskWidget.left = 0\r\n\r\n            _maskWidget.isAlignRight = true\r\n            _maskWidget.right = 0\r\n\r\n            _maskWidget.isAlignTop = true\r\n            _maskWidget.top = 0\r\n\r\n            _maskWidget.isAlignBottom = true\r\n            _maskWidget.bottom = 0\r\n\r\n            this.contentSize = new cc.Size(this.scrollView.node.getContentSize())\r\n            this.scrollView.content.setContentSize(this.contentSize)\r\n            this.contentSizeStart = this.scrollView.content.getContentSize();\r\n        }\r\n\r\n        if (_tempNode == null) return\r\n\r\n        this.scrollView.content.setContentSize(this.contentSizeStart)\r\n\r\n        this.clear()\r\n\r\n        this.totalCount = _totalCount\r\n        this.scrollDirection = _dir as ENUM_SCROLL_DIR\r\n\r\n        if (_dir == ENUM_SCROLL_DIR.V) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0.5, 1))\r\n\r\n            this.scrollView.content.setContentSize(cc.size(this.contentSizeStart.width, this.totalCount * _size.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(0, -this.totalCount * _size.height / 2))\r\n\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.height / _size.height)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) this.itemCount = this.totalCount\r\n\r\n            this.itemDistance = _size.height\r\n        }\r\n        else if (_dir == ENUM_SCROLL_DIR.H) {\r\n            this.scrollView.content.setAnchorPoint(cc.v2(0, 0.5))\r\n            this.scrollView.content.setContentSize(cc.size(this.totalCount * _size.width, this.contentSizeStart.height))\r\n\r\n            this.scrollView.content.setPosition(cc.v2(this.totalCount * _size.width / 2, 0))\r\n            let _tempCount: number = Math.floor(this.contentSizeStart.width / _size.width)\r\n\r\n            this.itemCount = _tempCount + 2\r\n\r\n            if (this.totalCount <= this.itemCount) {\r\n                this.itemCount = this.totalCount\r\n            }\r\n\r\n            this.itemDistance = _size.width\r\n        }\r\n\r\n        if (this.scrollView.scrollEvents.length <= 0) {\r\n            let eventHandler = new cc.Component.EventHandler();\r\n            eventHandler.target = this.node;\r\n            eventHandler.component = \"UIScrollControl\";\r\n            eventHandler.handler = \"OnScroll\";\r\n            this.scrollView.scrollEvents.push(eventHandler);\r\n        }\r\n\r\n        this.isStartFlag == true\r\n        this.theMaxID = 0\r\n\r\n        this.initShowAreaItems(_tempNode, scrollTo)\r\n    }\r\n\r\n    private clear() {\r\n        this.scrollView.content.removeAllChildren()\r\n        this.childrenList = []\r\n    }\r\n\r\n    /** Ініціалізація видимих елементів */\r\n    private initShowAreaItems(_temp_node: cc.Node, scrollTo: Function) {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            //cc.log(\" i = \" + i)\r\n            let curPos: cc.Vec2 = cc.v2(0, 0)\r\n            let node: cc.Node = cc.instantiate(_temp_node)\r\n            this.scrollView.content.addChild(node)\r\n            node.active = true\r\n            node.opacity = 255\r\n\r\n            if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n                curPos.y = -this.itemDistance / 2 - this.itemDistance * i\r\n            }\r\n            else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n                curPos.x = this.itemDistance / 2 + this.itemDistance * i\r\n            }\r\n\r\n            node.name = `cell_${i}`\r\n            node.setAnchorPoint(cc.v2(0.5, 0.5))\r\n            node.setPosition(curPos)\r\n\r\n            this.onRefresh(node, i, i)\r\n\r\n            this.childrenList.push(node)\r\n        }\r\n        // this.scrollView.scrollToTop()\r\n        scrollTo && scrollTo(this.scrollView)\r\n    }\r\n\r\n    /** Подія прокрутки */\r\n    private OnScroll() {\r\n           // Отримання поточного зсуву прокрутки відносно лівого верхнього кута\r\n        let scrollOffset: cc.Vec2 = this.scrollView.getScrollOffset();\r\n        let offset: number = 0;\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            offset = scrollOffset.y\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            // Горизонтальний offset є від’ємним, чому було зроблено таке дивне рішення, \r\n            // перетворюємо його на додатне значення для уніфікації з вертикальним напрямком\r\n            offset = -scrollOffset.x\r\n        }\r\n        this.refreshLayout(offset)\r\n    }\r\n\r\n    /** Примусове оновлення компонування */\r\n    private refreshLayout(_curOffset: number) {\r\n        let offset: number = _curOffset\r\n\r\n        // Максимальна висота, якщо перевищено, оновлення не відбувається\r\n        let _max_rect_size: number = this.totalCount * this.itemDistance\r\n\r\n        if (offset < 0 || offset + this.contentSize.height >= _max_rect_size) return\r\n\r\n        let _index: number = 0 // Починаємо з 0\r\n        let _min_index: number = Math.floor(offset / this.itemDistance);\r\n\r\n         // Від miniIdx до theMaxID всі елементи будуть оновлені\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            let node: cc.Node = this.childrenList[i];\r\n            _index = _min_index + i;\r\n            this.refreshItem(_index, i, node);\r\n        }\r\n        this.theMaxID = _min_index + this.itemCount\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param _index UI Індекс елемента, який потрібно оновити\r\n     * @param _node_index \r\n     * @param node \r\n     */\r\n    refreshItem(_index: number, _node_index: number, node: cc.Node) {\r\n        if (_index < 0 || _index >= this.totalCount) {\r\n            // cc.log(\"Індекс за межами діапазону, _index = \" + _index + \", this.total_count = \" + this.total_count)\r\n            return;\r\n        }\r\n\r\n        if (node == null) {\r\n            // cc.log(\"node == null\");\r\n            return;\r\n        }\r\n\r\n        let curPosition: cc.Vec2 = cc.Vec2.ZERO\r\n\r\n        if (this.scrollDirection == ENUM_SCROLL_DIR.H) {\r\n            curPosition.x = this.itemDistance / 2 + this.itemDistance * _index;\r\n        }\r\n        else if (this.scrollDirection == ENUM_SCROLL_DIR.V) {\r\n            curPosition.y = - this.itemDistance / 2 - this.itemDistance * _index;\r\n        }\r\n\r\n        node.setPosition(curPosition)\r\n        this.onRefresh(node, _index, _node_index);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param node \r\n     * @param _index \r\n     * @param nodeIndex \r\n     */\r\n    private onRefresh(node: cc.Node, _index: number, nodeIndex: number) {\r\n        //cc.log(\"--------------- _index = \" + _index)\r\n        if (this.refreshCB != null) {\r\n            this.refreshCB(node, _index, nodeIndex)\r\n        }\r\n    }\r\n}\r\n","import { UserTransactionsType } from \"../../constants/user-transactions.const\";\r\nimport { FinishGameDto, GameFinishResponceDto, GameStartResponceDto, StartGameDto } from \"../../dtos/game.dto\";\r\nimport { CreateStarsInvoiceDto } from \"../../dtos/invoice.dto\";\r\nimport { LeaderboardDto } from \"../../dtos/leaderboard.dto\";\r\nimport { CurrentPrizePoolDto, LastDrawnPrizePoolDto } from \"../../dtos/prize-pool.dto\";\r\nimport { CreateUserTransactionDto } from \"../../dtos/user-transaction.dto\";\r\nimport { GetServerTimeDto, GetUserAuthDto, GetUserDailyTasksDto, LashHourLeaderDto, PatchBonusesDto, PatchTaskDto } from \"../../dtos/user.dto\";\r\nimport { WinnersDto } from \"../../dtos/winners.dto\";\r\nimport { TelegramWebApp } from \"../../telegram/TelegramMiniApp\";\r\nimport {ApiClient} from \"../ApiClient\";\r\n\r\nexport class UserController {\r\n    constructor(private readonly apiClient: ApiClient) {}\r\n\r\n    public static Instance: UserController = null\r\n\r\n    //time\r\n    public async getTime(): Promise<GetServerTimeDto> {\r\n        return this.apiClient.get(\"time\");\r\n    }\r\n\r\n    //user\r\n    public async getUser(): Promise<GetUserAuthDto> {\r\n        return this.apiClient.get(\"user\");\r\n    }\r\n\r\n    //channel subscription\r\n\r\n    public async getChannelMembership(): Promise<ChannelMembershipDto> {\r\n        return this.apiClient.get(\"telegram/chat-member/\"+TelegramWebApp.Instance.getTelegramUser().id);\r\n    }\r\n\r\n    //ads\r\n    public async patchAd(): Promise<any> {\r\n        const data = {\r\n            number_of_ads: 1\r\n        };\r\n        return this.apiClient.patch(\"user/ads\", data);\r\n    }\r\n\r\n    //bank\r\n\r\n    public async postWithdrawStars(stars_amount: number): Promise<any> {\r\n        const data: object = {\r\n            amount: stars_amount,\r\n        };\r\n        return this.apiClient.post(\"user/withdraw-stars\", data);\r\n    }\r\n\r\n    //tasks\r\n    public async getUserDailyTasks(): Promise<GetUserDailyTasksDto> {\r\n        return this.apiClient.get(\"user/daily-tasks\");\r\n    }\r\n\r\n    public async patchDailyTasksIncrement(data: PatchTaskDto) : Promise<any>{\r\n        return this.apiClient.patch(\"user/daily-tasks/increment\", data);\r\n    }\r\n\r\n    //tasks - hour leader\r\n    public async getLastHourLeader(): Promise<LashHourLeaderDto> {\r\n        return this.apiClient.get(\"games/leader/last-hour\");\r\n    }\r\n\r\n    //todo decrement bonuses from user.data than patch LEVEL. updateBonuses\r\n\r\n    public async patchBonuses(data: PatchBonusesDto): Promise<any> {\r\n        return this.apiClient.patch(\"user/bonuses\", data);\r\n    }\r\n\r\n    //transactions\r\n\r\n    public async getTransactions(): Promise<any> {\r\n        return this.apiClient.get(\"transactions\");\r\n    }\r\n\r\n    public async getTransactionById(id : number): Promise<any> {\r\n        return this.apiClient.get(\"transactions/\" + id);\r\n    }\r\n\r\n    //creates new transaction\r\n    public async postCoinsTransaction(coins_amount: number, comission_amount: number): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            amount_stars: coins_amount,\r\n            commission: comission_amount,\r\n            type: \"ADD_COINS\",\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    public async postBonusTransaction(transactionType : keyof typeof UserTransactionsType): Promise<any> {\r\n        const data: CreateUserTransactionDto = {\r\n            type: transactionType,\r\n        };\r\n        return this.apiClient.post(\"transactions\", data);\r\n    }\r\n\r\n    //leaderboard\r\n    public async getLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard\");\r\n    }\r\n\r\n    //leaderboard - combined points\r\n    public async getSumPointsLeaderboard(): Promise<LeaderboardDto> {\r\n        return this.apiClient.get(\"games/leaderboard/sum-points?limit=100\");\r\n    }\r\n\r\n    //winners\r\n    public async getLastWinners(): Promise<WinnersDto> {\r\n        return this.apiClient.get(\"/winners/last-week?type=BEST\");  \r\n    }\r\n\r\n   //winners - combined points\r\n   public async getSumPointsLastWinners(): Promise<WinnersDto> {\r\n    return this.apiClient.get(\"winners/last-week?type=TOTAL\");\r\n}\r\n\r\n    //prize pool\r\n    public async getCurrentPrizePool(): Promise<CurrentPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/current\");\r\n    }\r\n\r\n    public async getLastWeekPrizePool(): Promise<LastDrawnPrizePoolDto> {\r\n        return this.apiClient.get(\"prize-pool/last-drawn\");\r\n    }\r\n    \r\n\r\n    //games\r\n\r\n    public async getGames(): Promise<any> {\r\n        return this.apiClient.get(\"games\");\r\n    }\r\n\r\n    public async getGamesMaxPoints(): Promise<any> {\r\n        return this.apiClient.get(\"games/max-points\");\r\n    }\r\n\r\n    public async getGames500_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/count\");\r\n    }\r\n\r\n    public async getGames250_count(): Promise<any> {\r\n        return this.apiClient.get(\"games/sum-points\");\r\n    }\r\n\r\n    public async postGameStart(gameToken: string, timeStamp: number): Promise<GameStartResponceDto> {\r\n        const data: StartGameDto = {\r\n            game_token: gameToken,\r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/start\", data);\r\n    }\r\n\r\n    public async postGameFinish(scorePoints: number, gameToken: string, timeStamp: number): Promise<GameFinishResponceDto> {\r\n        const data: FinishGameDto = {\r\n            points: scorePoints,\r\n            game_token: gameToken, \r\n            timestamp: timeStamp.toString()\r\n        };\r\n        return this.apiClient.post(\"games/finish\", data);\r\n    }\r\n\r\n\r\n    //Invoices\r\n\r\n    public async postInvoiceStars(buyAmount: number): Promise<any> {\r\n        const data: CreateStarsInvoiceDto = {\r\n            amount: buyAmount,\r\n        };\r\n        return this.apiClient.post(\"invoices/stars\", data);\r\n    }\r\n\r\n    public async postInvoicePremium(): Promise<any> {\r\n        return this.apiClient.post(\"invoices/premium\");\r\n    }\r\n\r\n    //clubs\r\n\r\n    public async getBloggerClubLeaderboard(blogger_name : string): Promise<any> {\r\n        return this.apiClient.get(`games/leaderboard?blogger_name=${blogger_name}`);\r\n    }\r\n     \r\n    public async getBloggerClubLeaderboardSumPoints(blogger_name : string): Promise<any> {\r\n        return this.apiClient.get(`/games/leaderboard/sum-points?blogger_name=${blogger_name}`);\r\n    }\r\n\r\n    public async getBloggerClubWinners(blogger_name : string): Promise<any> {\r\n        return this.apiClient.get(`/blogger-winners/${blogger_name}`);\r\n    }\r\n\r\n    public async getBloggerPrizePool(blogger_name : string): Promise<any> {\r\n        return this.apiClient.get(`/blogger-prize-pool/current/${blogger_name}`);\r\n    }\r\n\r\n    public async getBloggerPrizePoolLastDrawn(blogger_name : string): Promise<any> {\r\n        return this.apiClient.get(` /blogger-prize-pool/last-drawn/${blogger_name}`);\r\n    }\r\n\r\n   \r\n\r\n\r\n}","import { UserController } from './api/controllers/UserController';\r\nimport { BonusesDto, PatchBonusesDto } from './dtos/user.dto';\r\nimport OutputLayer from './layer/OutputLayer';\r\nimport DataManager from './manager/DataManager';\r\nimport { TelegramWebApp } from './telegram/TelegramMiniApp';\r\nimport ConfigLoader from './utils/ConfigLoader';\r\n\r\nexport function setDesignResolution(){\r\n    if(OutputLayer.block_resize)\r\n        return;\r\n\r\n    cc.view.setFrameSize(750, 1624)\r\n    cc.view.setDesignResolutionSize(750, 1624, cc.ResolutionPolicy.FIXED_HEIGHT)\r\n}\r\n\r\nexport function delay(ms : number) : Promise<any> {\r\n    return new Promise(res => setTimeout(res, ms));\r\n}\r\n\r\nexport function getServerTimeNow() : Date{\r\n    return new Date(Date.now() + DataManager.instance.serverTimeOffsetMiliseconds);\r\n}\r\n\r\nexport function getServerTimestampNow() : number{\r\n    return getServerTimeNow().getTime();\r\n}\r\n\r\nexport function starsToDollars(starsCoins : number) : number {\r\n    return (starsCoins / 100) * 1.5;\r\n}\r\n\r\n//вібрація\r\nexport function vibrate(){\r\n    if (navigator.vibrate) {\r\n        navigator.vibrate(100);\r\n    } \r\n}\r\n\r\n// Випадкове ціле число\r\nexport function random(lower: number, upper: number): number {\r\n    return Math.floor(Math.random() * (upper - lower + 1)) + lower;\r\n}\r\n\r\n// Перемішування масиву\r\nexport function shuffle(arr: any[]) {\r\n    let length: number = arr.length,\r\n        randomIndex: number,\r\n        temp: any;\r\n    while (length) {\r\n        randomIndex = Math.floor(Math.random() * (length--));\r\n        temp = arr[randomIndex];\r\n        arr[randomIndex] = arr[length];\r\n        arr[length] = temp;\r\n    }\r\n    return arr;\r\n}\r\n\r\n// Сортування об'єктів у масиві\r\nexport function sort(arr: any[] | unknown, key: any, flag: boolean = true) {\r\n    if (arr instanceof Array) {\r\n        return arr.sort((a, b) => {\r\n            if (a[key] > b[key]) {\r\n                return flag ? 1 : -1;\r\n            } else if (a[key] < b[key]) {\r\n                return flag ? -1 : 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// Сортування рядків, що містять числа, на основі числових значень\r\nexport function sortSpriteNameByNum(frames: cc.SpriteFrame[]) {\r\n    const getNumberInSpriteName = (name: string) => {\r\n        const reg = /\\d+/g;\r\n        return parseInt(name.match(reg)[0] || '0');\r\n    };\r\n    return frames.sort((a, b) => getNumberInSpriteName(a.name) - getNumberInSpriteName(b.name));\r\n}\r\n\r\n// Перетворення секунд\r\nexport function formatSeconds(seconds: number | string, dateFormat = 'h:i:s'): string {\r\n    seconds = Number(seconds);\r\n    let obj: any = {};\r\n    obj.h = Number.parseInt(String(seconds / 3600));\r\n    obj.i = Number.parseInt(String((seconds - obj.h * 3600) / 60));\r\n    obj.s = Number.parseInt(String(seconds - obj.h * 3600 - obj.i * 60));\r\n    if (obj.h < 10) obj.h = '0' + obj.h;\r\n    if (obj.i < 10) obj.i = '0' + obj.i;\r\n    if (obj.s < 10) obj.s = '0' + obj.s;\r\n    // Парсинг\r\n    var rs = dateFormat.replace('h', obj.h).replace('i', obj.i).replace('s', obj.s);\r\n    return rs;\r\n}\r\n\r\n// Відстань між двома точками\r\nexport function getDistance(start: cc.Vec2, end: cc.Vec2) {\r\n    const pos = cc.v2(start.x - end.x, start.y - end.y);\r\n    const dis = Math.sqrt(pos.x * pos.x + pos.y * pos.y);\r\n    return dis;\r\n}\r\n\r\n// Кут між двома точками\r\nexport function getAngle(start: cc.Vec2, end: cc.Vec2) {\r\n    // Обчислення напряму\r\n    const dx = end.x - start.x;\r\n    const dy = end.y - start.y;\r\n    const dir = cc.v2(dx, dy);\r\n    // Обчислення кута в радіанах\r\n    const angle = dir.signAngle(cc.v2(1, 0));\r\n    // Конвертація радіанів у градуси\r\n    const degree = angle / Math.PI * 180;\r\n    return -degree;\r\n}\r\n\r\n// Перетворення координат вузла 1 у вузол 2\r\nexport function toXY(node1: cc.Node, node2: cc.Node) {\r\n    const wpos = node1.convertToWorldSpaceAR(cc.v2(0, 0));\r\n    const pos = node2.convertToNodeSpaceAR(wpos);\r\n    return pos;\r\n}\r\n\r\n// Генерація посилання на аватар WeChat\r\nexport function wxAvatar(avatarUrl: string, isCached: boolean = true) {\r\n    if (isCached) {\r\n        avatarUrl += `?sail.jpg`;\r\n    } else {\r\n        const time = new Date().getTime();\r\n        avatarUrl += `?sail=${time}.jpg`;\r\n    }\r\n    return new Promise<void>((resolve, reject) => {\r\n        cc.loader.load(avatarUrl, function (err: any, texture: any) {\r\n            if (err) reject && reject();\r\n            resolve && resolve(texture);\r\n        });\r\n    });\r\n}\r\n\r\n// Генерація UUID\r\nexport function uuid() {\r\n    let d = new Date().getTime();\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        let r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\n\r\nexport function getRemainingTimeToDate(targetDate: Date): { days: number, hours: number, minutes: number, seconds: number } {\r\n    const now = getServerTimeNow();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n\r\n    if (diffMs <= 0) {\r\n        return { days: 0, hours: 0, minutes: 0, seconds: 0 }; // Target date has passed\r\n    }\r\n\r\n    const seconds = Math.floor((diffMs / 1000) % 60);\r\n    const minutes = Math.floor((diffMs / (1000 * 60)) % 60);\r\n    const hours = Math.floor((diffMs / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n\r\n    return { days, hours, minutes, seconds };\r\n}\r\n\r\n\r\nexport function getRemainingTimeToDateMs(targetDate: Date) : number {\r\n    const now = getServerTimeNow();\r\n    const diffMs = targetDate.getTime() - now.getTime(); // Difference in milliseconds\r\n    return diffMs;\r\n}\r\n\r\nexport function getRemainingTimeToDateMinutes(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToDateSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.days).padStart(2, '0')}:${String(res.hours).padStart(2, '0')}:${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getRemainingTimeToHourSeconds(targetDate: Date): string {\r\n    const res = getRemainingTimeToDate(targetDate);\r\n    return `${String(res.minutes).padStart(2, '0')}:${String(res.seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeek(): string {\r\n    const now = new Date(); // Current local time\r\n    const nowUTC = new Date(\r\n        now.getUTCFullYear(),\r\n        now.getUTCMonth(),\r\n        now.getUTCDate(),\r\n        now.getUTCHours(),\r\n        now.getUTCMinutes(),\r\n        now.getUTCSeconds(),\r\n    ); // Convert to UTC time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\r\n}\r\n\r\nexport function getUTCRemainingTimeToEndOfWeekToSeconds(): string {\r\n    // const now = new Date(); // Current local time\r\n    // const nowUTC = new Date(\r\n    //     now.getUTCFullYear(),\r\n    //     now.getUTCMonth(),\r\n    //     now.getUTCDate(),\r\n    //     now.getUTCHours(),\r\n    //     now.getUTCMinutes(),\r\n    //     now.getUTCSeconds(),\r\n    // ); // Convert to UTC time\r\n\r\n    const nowUTC = new Date(new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/Kiev\" })); //local kyiv time\r\n\r\n    // Get the current day of the week (0 = Sunday, 6 = Saturday)\r\n    const dayOfWeek = nowUTC.getUTCDay();\r\n\r\n    // Calculate the number of days until the end of the week (Sunday at 23:59:59 UTC)\r\n    const daysRemaining = 6 - dayOfWeek;\r\n\r\n    // Calculate the time of the next Sunday at 23:59:59 UTC\r\n    const endOfWeek = new Date(\r\n        nowUTC.getUTCFullYear(),\r\n        nowUTC.getUTCMonth(),\r\n        nowUTC.getUTCDate() + daysRemaining,\r\n        23, // 23 hours\r\n        59, // 59 minutes\r\n        59, // 59 seconds\r\n    );\r\n\r\n    // Calculate the time difference in milliseconds\r\n    const timeDifference = endOfWeek.getTime() - nowUTC.getTime();\r\n\r\n    // Convert the difference into days, hours, minutes, and seconds\r\n    const seconds = Math.floor((timeDifference / 1000) % 60);\r\n    const minutes = Math.floor((timeDifference / (1000 * 60)) % 60);\r\n    const hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);\r\n    const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n\r\n    // Format the time as dd:hh:mm:ss\r\n    return `${String(days).padStart(2, '0')}:${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\r\n}\r\n\r\nexport async function generateJsonDataToken(userId: bigint, timestamp: number, jsonString: string, secret: string) : Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${jsonString}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function generateGameToken(userId: bigint, timestamp: number, secret: string, score_points: number = 0): Promise<string> {\r\n    if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n    const data = `${userId}-${timestamp}-${score_points}-${secret}`;\r\n    //console.log(\"generateGameToken: \", `${userId}-${timestamp}`);\r\n    return await createHash(data);\r\n}\r\n\r\nexport async function createHash(message): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(message);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}\r\n\r\nexport function isOnline() : boolean {\r\n    return window.navigator.onLine;\r\n}\r\n\r\n\r\nexport async function patchBonusesAmount(){\r\n    const bomb_new_amount = DataManager.instance.userData.bonuses.bomb_amount;\r\n    const shuffle_new_amount = DataManager.instance.userData.bonuses.shuffle_amount;\r\n    const change_block_new_amount = DataManager.instance.userData.bonuses.change_block_amount;\r\n\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function patchBonusesNewAmount(bomb_new_amount : number, shuffle_new_amount : number, change_block_new_amount: number){\r\n    const data: PatchBonusesDto = await getPatchBonusesDto(bomb_new_amount, shuffle_new_amount, change_block_new_amount);\r\n    UserController.Instance.patchBonuses(data).then(()=>{\r\n        //TODO... decrement bonuses than update.\r\n    })\r\n}\r\n\r\nexport async function getPatchBonusesDto(bomb_new_amount: number, shuffle_new_amount: number, change_block_new_amount: number) : Promise<PatchBonusesDto> {\r\n    const timestamp = getServerTimestampNow();\r\n\r\n    const bonuses: BonusesDto = {\r\n        bomb_amount: bomb_new_amount,\r\n        shuffle_amount: shuffle_new_amount,\r\n        change_block_amount: change_block_new_amount,\r\n    }\r\n\r\n    var userId;\r\n    try{\r\n        userId = TelegramWebApp.Instance.getTelegramUser().id\r\n    }\r\n    catch{\r\n        await UserController.Instance?.getUser().then((response) => {\r\n            userId = response.data.id;\r\n        }).catch((error) => {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        });\r\n    }\r\n    \r\n    const config = await ConfigLoader.loadConfig();\r\n    const token = await generateJsonDataToken(userId, timestamp, JSON.stringify(bonuses), config.GAME_SECRET_KEY);\r\n\r\n    const data: PatchBonusesDto = {\r\n        bonuses: bonuses,\r\n        token: token,\r\n        timestamp: timestamp\r\n    };\r\n\r\n    return data;\r\n}\r\n\r\n","// Created by carolsail\r\n\r\nimport { ENUM_AUDIO_CLIP, ENUM_UI_TYPE } from \"../Enum\";\r\nimport { StaticInstance } from './../StaticInstance';\r\nimport AudioManager from \"../manager/AudioManager\";\r\nimport BaseLayer from \"./Baselayer\";\r\nimport SdkManager from \"../manager/SdkManager\";\r\nimport ToastManager from \"../manager/ToastManager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class WinLayer extends BaseLayer {\r\n\r\n    panel: cc.Node = null\r\n    btnNext: cc.Node = null\r\n    btnShare: cc.Node = null\r\n\r\n    onLoad() {\r\n        this.panel = cc.find('style/panel', this.node)\r\n        this.btnNext = cc.find('buttons/btn_next', this.panel)\r\n        this.btnShare = cc.find('buttons/btn_share', this.panel)\r\n        this.btnNext.on('click', this.onNextClick, this)\r\n        this.btnShare.on('click', this.onShareClick, this)\r\n    }\r\n\r\n    onDestroy() {\r\n        this.btnNext.off('click', this.onNextClick, this)\r\n        this.btnShare.off('click', this.onShareClick, this)\r\n    }\r\n\r\n    onEnable() {\r\n        this.zoomIn(this.panel)\r\n        SdkManager.instance.toggleBannerAd(true)\r\n    }\r\n\r\n    onDisable() {\r\n        SdkManager.instance.toggleBannerAd(false)\r\n    }\r\n\r\n    async onNextClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        await StaticInstance.fadeManager.fadeIn()\r\n        StaticInstance.uiManager.toggle(ENUM_UI_TYPE.WIN, false)\r\n        StaticInstance.gameManager.onGameStart()\r\n    }\r\n\r\n    onShareClick() {\r\n        AudioManager.instance.playSound(ENUM_AUDIO_CLIP.CLICK)\r\n        if (SdkManager.instance.getPlatform()) {\r\n            SdkManager.instance.activeShare()\r\n        } else {\r\n            ToastManager.instance.show('Only supports small game platforms', { gravity: 'TOP', bg_color: cc.color(226, 69, 109, 255) })\r\n        }\r\n    }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"axios\"] = factory();\r\n\telse\r\n\t\troot[\"axios\"] = factory();\r\n})(window, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"./index.js\":\r\n/*!******************!*\\\r\n  !*** ./index.js ***!\r\n  \\******************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"./lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/adapters/xhr.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/adapters/xhr.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./lib/core/settle.js\");\r\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./lib/helpers/cookies.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./lib/core/buildFullPath.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"./lib/core/createError.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(createError(\r\n        timeoutErrorMessage,\r\n        config,\r\n        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/axios.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/axios.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./lib/core/Axios.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./lib/helpers/spread.js\");\r\n\r\n// Expose isAxiosError\r\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./lib/helpers/isAxiosError.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/Cancel.js\":\r\n/*!******************************!*\\\r\n  !*** ./lib/cancel/Cancel.js ***!\r\n  \\******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/CancelToken.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/cancel/CancelToken.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/cancel/isCancel.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/cancel/isCancel.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/Axios.js\":\r\n/*!***************************!*\\\r\n  !*** ./lib/core/Axios.js ***!\r\n  \\***************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./lib/helpers/buildURL.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./lib/core/dispatchRequest.js\");\r\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./lib/core/mergeConfig.js\");\r\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./lib/helpers/validator.js\");\r\n\r\nvar validators = validator.validators;\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = arguments[1] || {};\r\n    config.url = arguments[0];\r\n  } else {\r\n    config = config || {};\r\n  }\r\n\r\n  config = mergeConfig(this.defaults, config);\r\n\r\n  // Set config.method\r\n  if (config.method) {\r\n    config.method = config.method.toLowerCase();\r\n  } else if (this.defaults.method) {\r\n    config.method = this.defaults.method.toLowerCase();\r\n  } else {\r\n    config.method = 'get';\r\n  }\r\n\r\n  var transitional = config.transitional;\r\n\r\n  if (transitional !== undefined) {\r\n    validator.assertOptions(transitional, {\r\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\r\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\r\n    }, false);\r\n  }\r\n\r\n  // filter out skipped interceptors\r\n  var requestInterceptorChain = [];\r\n  var synchronousRequestInterceptors = true;\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\r\n      return;\r\n    }\r\n\r\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\r\n\r\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var responseInterceptorChain = [];\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  var promise;\r\n\r\n  if (!synchronousRequestInterceptors) {\r\n    var chain = [dispatchRequest, undefined];\r\n\r\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\r\n    chain.concat(responseInterceptorChain);\r\n\r\n    promise = Promise.resolve(config);\r\n    while (chain.length) {\r\n      promise = promise.then(chain.shift(), chain.shift());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n\r\n  var newConfig = config;\r\n  while (requestInterceptorChain.length) {\r\n    var onFulfilled = requestInterceptorChain.shift();\r\n    var onRejected = requestInterceptorChain.shift();\r\n    try {\r\n      newConfig = onFulfilled(newConfig);\r\n    } catch (error) {\r\n      onRejected(error);\r\n      break;\r\n    }\r\n  }\r\n\r\n  try {\r\n    promise = dispatchRequest(newConfig);\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  while (responseInterceptorChain.length) {\r\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\nAxios.prototype.getUri = function getUri(config) {\r\n  config = mergeConfig(this.defaults, config);\r\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: (config || {}).data\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(mergeConfig(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/InterceptorManager.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/core/InterceptorManager.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected,\r\n    synchronous: options ? options.synchronous : false,\r\n    runWhen: options ? options.runWhen : null\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/buildFullPath.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/buildFullPath.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Creates a new URL by combining the baseURL with the requestedURL,\r\n * only when the requestedURL is not already an absolute URL.\r\n * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} requestedURL Absolute or relative URL to combine\r\n * @returns {string} The combined full path\r\n */\r\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n    return combineURLs(baseURL, requestedURL);\r\n  }\r\n  return requestedURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/createError.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/createError.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/dispatchRequest.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/core/dispatchRequest.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"./lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData.call(\r\n    config,\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData.call(\r\n      config,\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData.call(\r\n          config,\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/enhanceError.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/core/enhanceError.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code\r\n    };\r\n  };\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/mergeConfig.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/core/mergeConfig.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\n/**\r\n * Config-specific merge-function which creates a new config-object\r\n * by merging two configuration objects together.\r\n *\r\n * @param {Object} config1\r\n * @param {Object} config2\r\n * @returns {Object} New object resulting from merging config2 to config1\r\n */\r\nmodule.exports = function mergeConfig(config1, config2) {\r\n  // eslint-disable-next-line no-param-reassign\r\n  config2 = config2 || {};\r\n  var config = {};\r\n\r\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\r\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\r\n  var defaultToConfig2Keys = [\r\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\r\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\r\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\r\n  ];\r\n  var directMergeKeys = ['validateStatus'];\r\n\r\n  function getMergedValue(target, source) {\r\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\r\n      return utils.merge(target, source);\r\n    } else if (utils.isPlainObject(source)) {\r\n      return utils.merge({}, source);\r\n    } else if (utils.isArray(source)) {\r\n      return source.slice();\r\n    }\r\n    return source;\r\n  }\r\n\r\n  function mergeDeepProperties(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  }\r\n\r\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\r\n\r\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n    if (!utils.isUndefined(config2[prop])) {\r\n      config[prop] = getMergedValue(undefined, config2[prop]);\r\n    } else if (!utils.isUndefined(config1[prop])) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  utils.forEach(directMergeKeys, function merge(prop) {\r\n    if (prop in config2) {\r\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\r\n    } else if (prop in config1) {\r\n      config[prop] = getMergedValue(undefined, config1[prop]);\r\n    }\r\n  });\r\n\r\n  var axiosKeys = valueFromConfig2Keys\r\n    .concat(mergeDeepPropertiesKeys)\r\n    .concat(defaultToConfig2Keys)\r\n    .concat(directMergeKeys);\r\n\r\n  var otherKeys = Object\r\n    .keys(config1)\r\n    .concat(Object.keys(config2))\r\n    .filter(function filterAxiosKeys(key) {\r\n      return axiosKeys.indexOf(key) === -1;\r\n    });\r\n\r\n  utils.forEach(otherKeys, mergeDeepProperties);\r\n\r\n  return config;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/settle.js\":\r\n/*!****************************!*\\\r\n  !*** ./lib/core/settle.js ***!\r\n  \\****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"./lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/core/transformData.js\":\r\n/*!***********************************!*\\\r\n  !*** ./lib/core/transformData.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./lib/defaults.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  var context = this || defaults;\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn.call(context, data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/defaults.js\":\r\n/*!*************************!*\\\r\n  !*** ./lib/defaults.js ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"./lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./lib/helpers/normalizeHeaderName.js\");\r\nvar enhanceError = __webpack_require__(/*! ./core/enhanceError */ \"./lib/core/enhanceError.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./lib/adapters/xhr.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n\r\n  transitional: {\r\n    silentJSONParsing: true,\r\n    forcedJSONParsing: true,\r\n    clarifyTimeoutError: false\r\n  },\r\n\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Accept');\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\r\n      setContentTypeIfUnset(headers, 'application/json');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    var transitional = this.transitional;\r\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\r\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\r\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\r\n\r\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\r\n      try {\r\n        return JSON.parse(data);\r\n      } catch (e) {\r\n        if (strictJSONParsing) {\r\n          if (e.name === 'SyntaxError') {\r\n            throw enhanceError(e, this, 'E_JSON_PARSE');\r\n          }\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n  maxBodyLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/bind.js\":\r\n/*!*****************************!*\\\r\n  !*** ./lib/helpers/bind.js ***!\r\n  \\*****************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/buildURL.js\":\r\n/*!*********************************!*\\\r\n  !*** ./lib/helpers/buildURL.js ***!\r\n  \\*********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    var hashmarkIndex = url.indexOf('#');\r\n    if (hashmarkIndex !== -1) {\r\n      url = url.slice(0, hashmarkIndex);\r\n    }\r\n\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/combineURLs.js\":\r\n/*!************************************!*\\\r\n  !*** ./lib/helpers/combineURLs.js ***!\r\n  \\************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/cookies.js\":\r\n/*!********************************!*\\\r\n  !*** ./lib/helpers/cookies.js ***!\r\n  \\********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n    (function standardBrowserEnv() {\r\n      return {\r\n        write: function write(name, value, expires, path, domain, secure) {\r\n          var cookie = [];\r\n          cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n          if (utils.isNumber(expires)) {\r\n            cookie.push('expires=' + new Date(expires).toGMTString());\r\n          }\r\n\r\n          if (utils.isString(path)) {\r\n            cookie.push('path=' + path);\r\n          }\r\n\r\n          if (utils.isString(domain)) {\r\n            cookie.push('domain=' + domain);\r\n          }\r\n\r\n          if (secure === true) {\r\n            cookie.push('secure');\r\n          }\r\n\r\n          document.cookie = cookie.join('; ');\r\n        },\r\n\r\n        read: function read(name) {\r\n          if (!document.cookie) return null;\r\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n          return (match ? decodeURIComponent(match[3]) : null);\r\n        },\r\n\r\n        remove: function remove(name) {\r\n          this.write(name, '', Date.now() - 86400000);\r\n        }\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return {\r\n        write: function write() {},\r\n        read: function read() { return null; },\r\n        remove: function remove() {}\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAbsoluteURL.js\":\r\n/*!**************************************!*\\\r\n  !*** ./lib/helpers/isAbsoluteURL.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isAxiosError.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/isAxiosError.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the payload is an error thrown by Axios\r\n *\r\n * @param {*} payload The value to test\r\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\r\n */\r\nmodule.exports = function isAxiosError(payload) {\r\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/isURLSameOrigin.js\":\r\n/*!****************************************!*\\\r\n  !*** ./lib/helpers/isURLSameOrigin.js ***!\r\n  \\****************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n    (function standardBrowserEnv() {\r\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n      var urlParsingNode = document.createElement('a');\r\n      var originURL;\r\n\r\n      if (!urlParsingNode.pathname) {\r\n        return function isURLSameOrigin() {\r\n          return true;\r\n        };\r\n      }\r\n\r\n      /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n      function resolveURL(url) {\r\n        var href = url;\r\n\r\n        if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n          urlParsingNode.setAttribute('href', href);\r\n          href = urlParsingNode.href;\r\n        }\r\n\r\n        urlParsingNode.setAttribute('href', href);\r\n\r\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n        return {\r\n          href: urlParsingNode.href,\r\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n          host: urlParsingNode.host,\r\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n          hostname: urlParsingNode.hostname,\r\n          port: urlParsingNode.port,\r\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n            urlParsingNode.pathname :\r\n            '/' + urlParsingNode.pathname\r\n        };\r\n      }\r\n\r\n      originURL = resolveURL(window.location.href);\r\n\r\n      /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n      return function isURLSameOrigin(requestURL) {\r\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n        return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n      };\r\n    })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n    (function nonStandardBrowserEnv() {\r\n      return function isURLSameOrigin() {\r\n        return true;\r\n      };\r\n    })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/normalizeHeaderName.js\":\r\n/*!********************************************!*\\\r\n  !*** ./lib/helpers/normalizeHeaderName.js ***!\r\n  \\********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"./lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/parseHeaders.js\":\r\n/*!*************************************!*\\\r\n  !*** ./lib/helpers/parseHeaders.js ***!\r\n  \\*************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"./lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/spread.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lib/helpers/spread.js ***!\r\n  \\*******************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/helpers/validator.js\":\r\n/*!**********************************!*\\\r\n  !*** ./lib/helpers/validator.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"./package.json\");\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lib/utils.js\":\r\n/*!**********************!*\\\r\n  !*** ./lib/utils.js ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./lib/helpers/bind.js\");\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (toString.call(val) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./package.json\":\r\n/*!**********************!*\\\r\n  !*** ./package.json ***!\r\n  \\**********************/\r\n/*! exports provided: name, version, description, main, scripts, repository, keywords, author, license, bugs, homepage, devDependencies, browser, jsdelivr, unpkg, typings, dependencies, bundlesize, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = JSON.parse(\"{\\\"name\\\":\\\"axios-ex\\\",\\\"version\\\":\\\"0.21.1\\\",\\\"description\\\":\\\"Promise based HTTP client for the browser and node.js\\\",\\\"main\\\":\\\"index.js\\\",\\\"scripts\\\":{\\\"test\\\":\\\"grunt test\\\",\\\"start\\\":\\\"node ./sandbox/server.js\\\",\\\"build\\\":\\\"grunt build\\\",\\\"preversion\\\":\\\"npm test\\\",\\\"version\\\":\\\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\\\",\\\"postversion\\\":\\\"git push && git push --tags\\\",\\\"examples\\\":\\\"node ./examples/server.js\\\",\\\"coveralls\\\":\\\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\\\",\\\"fix\\\":\\\"eslint --fix lib/**/*.js\\\"},\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex.git\\\"},\\\"keywords\\\":[\\\"xhr\\\",\\\"http\\\",\\\"ajax\\\",\\\"promise\\\",\\\"node\\\",\\\"cocos-creator\\\"],\\\"author\\\":\\\"Matt Zabriskie\\\",\\\"license\\\":\\\"MIT\\\",\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/ljhsai/axios-ex/issues\\\"},\\\"homepage\\\":\\\"https://axios-http.com\\\",\\\"devDependencies\\\":{\\\"coveralls\\\":\\\"^3.0.0\\\",\\\"es6-promise\\\":\\\"^4.2.4\\\",\\\"grunt\\\":\\\"^1.3.0\\\",\\\"grunt-banner\\\":\\\"^0.6.0\\\",\\\"grunt-cli\\\":\\\"^1.2.0\\\",\\\"grunt-contrib-clean\\\":\\\"^1.1.0\\\",\\\"grunt-contrib-watch\\\":\\\"^1.0.0\\\",\\\"grunt-eslint\\\":\\\"^23.0.0\\\",\\\"grunt-karma\\\":\\\"^4.0.0\\\",\\\"grunt-mocha-test\\\":\\\"^0.13.3\\\",\\\"grunt-ts\\\":\\\"^6.0.0-beta.19\\\",\\\"grunt-webpack\\\":\\\"^4.0.2\\\",\\\"istanbul-instrumenter-loader\\\":\\\"^1.0.0\\\",\\\"jasmine-core\\\":\\\"^2.4.1\\\",\\\"karma\\\":\\\"^6.3.2\\\",\\\"karma-chrome-launcher\\\":\\\"^3.1.0\\\",\\\"karma-firefox-launcher\\\":\\\"^2.1.0\\\",\\\"karma-jasmine\\\":\\\"^1.1.1\\\",\\\"karma-jasmine-ajax\\\":\\\"^0.1.13\\\",\\\"karma-safari-launcher\\\":\\\"^1.0.0\\\",\\\"karma-sauce-launcher\\\":\\\"^4.3.6\\\",\\\"karma-sinon\\\":\\\"^1.0.5\\\",\\\"karma-sourcemap-loader\\\":\\\"^0.3.8\\\",\\\"karma-webpack\\\":\\\"^4.0.2\\\",\\\"load-grunt-tasks\\\":\\\"^3.5.2\\\",\\\"minimist\\\":\\\"^1.2.0\\\",\\\"mocha\\\":\\\"^8.2.1\\\",\\\"sinon\\\":\\\"^4.5.0\\\",\\\"terser-webpack-plugin\\\":\\\"^4.2.3\\\",\\\"typescript\\\":\\\"^4.0.5\\\",\\\"url-search-params\\\":\\\"^0.10.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-dev-server\\\":\\\"^3.11.0\\\"},\\\"browser\\\":{\\\"./lib/adapters/http.js\\\":\\\"./lib/adapters/xhr.js\\\"},\\\"jsdelivr\\\":\\\"dist/axios.min.js\\\",\\\"unpkg\\\":\\\"dist/axios.min.js\\\",\\\"typings\\\":\\\"./index.d.ts\\\",\\\"dependencies\\\":{\\\"follow-redirects\\\":\\\"^1.14.0\\\"},\\\"bundlesize\\\":[{\\\"path\\\":\\\"./dist/axios.min.js\\\",\\\"threshold\\\":\\\"5kB\\\"}]}\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=axios.map","export default\r\n{\r\n    //\"API_URL\" : \"http://localhost:1234/\",\r\n    \"API_URL\" : \"https://a1feac8734b8.ngrok-free.app/api/\",\r\n    //\"API_URL\" : \"https://back-block-stars.tgplay.games/api/\",\r\n    //\"LOCAL_API_URL\" : \"http://localhost:3004/api/\",\r\n    \"CHANNEL_INVITE_URL\" : \"https://t.me/BlockStarsChannel\",\r\n    \"SUPPORT_URL\" : \"https://t.me/block_stars\",\r\n    \"REFERRAL_URL\" : \"https://t.me/BlockStarsBot/BlockStars\",\r\n    \"BANK_URL\" : \"https://t.me/TGStars_BankBot?startapp\",\r\n    \"ENC_DATA\" : \"U2FsdGVkX191pahcfP2BXmEkBAVUx0O0g8p+UCpeDycRi/HkmTFC9v7WH/psfXA9zKIdE7FKJyh3wUuqljiEHKMe9X345fhoxboJzWSm2KHkLiUrA20OOHQJVQt9CBbIUxF+f3r7LVvxEcUxo7t/gUPXmajs5YJ3x0NQv6IKx/HKo+JW2FIS+tbK0WOb0kg2oeMV3ho0a41pqNlYTKVB9ltCTi7axtzRCAXbWgGQqrZ1XOtVZhfbSNltqlzuxOTzvF7MHd1zCnFXU4PCg2QCEj3BbV057qkbewY7dcbcZnQFz3y4Kghbufd0pPngWU2cUO+q3iySkj/1bcBH7r766YbUVdEHhKxJhnnkTCt6vcmdS+oyxhrwPNXYwuDCMbCIjKVp6venrJtE7IZaMy8RrwoMBIZ4EtfN0hJHpPumjjOmmArzLubUNnvTqbJ/OjHX\"\r\n}\r\n","export class StartGameDto {\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport class FinishGameDto {\r\n  points!: number;\r\n  game_token!: string;\r\n  timestamp!: string;\r\n}\r\n\r\nexport interface GameStartResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Initial points, usually 0 at game start\r\n  ended_at: string | null;      // Null, as the game hasn't ended yet\r\n  created_at: string;           // Timestamp when the game was created\r\n  //game_token: string;           // Unique token for the game session\r\n}\r\n\r\nexport interface GameFinishResponceDto {\r\n  id: number;                   // Unique game identifier\r\n  user_id: number;              // User ID associated with the game\r\n  points: number;               // Final points earned by the user\r\n  ended_at: string;             // Timestamp when the game ended\r\n  created_at: string;           // Timestamp when the game was created\r\n}\r\n\r\n","export class CreateStarsInvoiceDto {\r\n  amount!: number;\r\n}\r\n\r\nexport class CreatePremiumInvoiceDto {}\r\n","export const WINNING_AMOUNT_ADDITIONAL_PLACES: number = 95;\r\nexport const WINNING_AMOUNT_ADDITIONAL_PRIZE: number = 50;\r\nexport const WINNING_AMOUNT_ADDITIONAL_PRIZES: number = WINNING_AMOUNT_ADDITIONAL_PRIZE * WINNING_AMOUNT_ADDITIONAL_PLACES * 2;\r\n\r\n\r\nexport const WINNING_PERCENT_1st_PLACE: number = 0.35;\r\nexport const WINNING_PERCENT_2st_PLACE: number = 0.20;\r\nexport const WINNING_PERCENT_3st_PLACE: number = 0.15;\r\nexport const WINNING_PERCENT_4st_PLACE: number = 0.10;\r\nexport const WINNING_PERCENT_5st_PLACE: number = 0.05;\r\n\r\n\r\nexport function getPrizeAmount(index: number, winningAmount: number): number {\r\n    let prizeAmount: number = 0;\r\n\r\n    if(index > 99)\r\n        return 0;\r\n\r\n    switch (index) {\r\n        case 0:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_1st_PLACE;\r\n            break;\r\n        case 1:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_2st_PLACE;\r\n            break;\r\n        case 2:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_3st_PLACE;\r\n            break;\r\n        case 3:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_4st_PLACE;\r\n            break;\r\n        case 4:\r\n            prizeAmount = winningAmount * WINNING_PERCENT_5st_PLACE;\r\n            break;\r\n        default:\r\n            prizeAmount = WINNING_AMOUNT_ADDITIONAL_PRIZE;\r\n            break;\r\n    }\r\n\r\n    return Math.max(prizeAmount, 0);\r\n}","import { UserTransactionsType } from \"../constants/user-transactions.const\";\r\n\r\nexport class CreateUserTransactionDto {\r\n  public amount_stars?: number;\r\n  public commission?: number;\r\n  public type!: keyof typeof UserTransactionsType;\r\n}\r\n","enum UserTransactionsType {\r\n  'BUY_SHUFFLE',\r\n  'BUY_BOMB',\r\n  'BUY_CHANGE_BLOCK',\r\n  'ADD_COINS',\r\n  'BUY_PREMIUM',\r\n}\r\n\r\nexport const TRANSACTION_AMOUNTS = {\r\n  [UserTransactionsType.BUY_SHUFFLE]: 1,\r\n  [UserTransactionsType.BUY_BOMB]: 2,\r\n  [UserTransactionsType.BUY_CHANGE_BLOCK]: 3,\r\n  [UserTransactionsType.BUY_PREMIUM]: 5,\r\n} as const;\r\n\r\nexport { UserTransactionsType };\r\n\r\n\r\n// export function generateGameToken(userId: number, timestamp: number): string {\r\n//   const secret = process.env.GAME_SECRET_KEY;\r\n//   if (!secret) throw new Error('GAME_SECRET_KEY not configured');\r\n\r\n//   const data = `${userId}-${timestamp}-${secret}`;\r\n//   return createHash('sha256').update(data).digest('hex');\r\n// }","export class CreateUserDto {\r\n  public id!: number;\r\n  public allows_write_to_pm!: boolean;\r\n  public first_name!: string;\r\n  public last_name!: string;\r\n  public username!: string;\r\n  public language_code!: string;\r\n  public photo_url!: string;\r\n}\r\n\r\nexport class UpdateUserDto {\r\n  public allows_write_to_pm?: boolean;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public language_code?: string;\r\n  public photo_url?: string;\r\n}\r\n\r\nexport class UserAuthDto{\r\n  id: number;\r\n  allows_write_to_pm: boolean;\r\n  first_name: string;\r\n  last_name: string;\r\n  username: string;\r\n  language_code: string;\r\n  photo_url: string;\r\n  balance_stars: number;\r\n  is_premium: boolean;\r\n  first_login: boolean;\r\n  number_of_ads: number;\r\n  bonuses?: BonusesDto | null;\r\n  completed_tasks: number;\r\n  weekly_streak: number;\r\n}\r\n\r\nexport class GetUserAuthDto{\r\n  data: UserAuthDto;\r\n  message: string;\r\n}\r\n\r\nexport class GetUserDailyTasksDto{\r\n  data: UserDailyTasksDto;\r\n  message: string;\r\n}\r\n\r\nexport class UserDailyTasksDto{\r\n  created_at: string;\r\n  tasks: TaskDto[] \r\n}\r\n\r\nexport class TaskDto {\r\n  id: number;\r\n  sub_tasks: SubTaskDto[];\r\n  reward: string;\r\n  amount: number;\r\n}\r\n\r\nexport class SubTaskDto {\r\n  type: string;\r\n  amount: number;\r\n  target_amount: number;\r\n}\r\n\r\nexport class PatchTaskDto {\r\n  task: PatchTaskDataDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class PatchTaskDataDto {\r\n  id: number;\r\n  type: string;\r\n  amount: number;\r\n}\r\n\r\nexport class PatchBonusesDto {\r\n  bonuses: BonusesDto;\r\n  token: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport class BonusesDto {\r\n  bomb_amount: number;\r\n  shuffle_amount: number;\r\n  change_block_amount: number;\r\n}\r\n\r\nexport class LashHourLeaderDto{\r\n  public position: number;\r\n  public user_id: string;\r\n  public first_name?: string;\r\n  public last_name?: string;\r\n  public username?: string;\r\n  public photo_url?: string;\r\n  public points: number;\r\n  public game_duration: number;\r\n}\r\n\r\nexport class GetServerTimeDto{\r\n  public data: ServerTimestampDto;\r\n  public message: string;\r\n}\r\n\r\nexport class ServerTimestampDto{\r\n  public timestamp: number;\r\n}"],"file":"index.js"}